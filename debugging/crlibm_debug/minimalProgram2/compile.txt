rm -f addition_scs.o multiplication_scs.o zero_scs.o division_scs.o double2scs.o scs2double.o zero_scs.o trigo_fast.o tan.o sine.o cosine.o exp.o logsix.o exp_fast.o log_fast.o atan.o atan_fast.o division_scs.o ericc.o csh_fast.o log10.o rem_pio2.o dtoa_c.o dtoaf.o round_near.o disable_xp.o enable_xp.o crlibm.a
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -Wall -Wshadow -Wpointer-arith -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline  -g -O1 -m32 -E  -c addition_scs.c
# 1 "addition_scs.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "addition_scs.c"
# 48 "addition_scs.c"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 144 "/usr/include/limits.h" 3 4
# 1 "/usr/include/bits/posix1_lim.h" 1 3 4
# 160 "/usr/include/bits/posix1_lim.h" 3 4
# 1 "/usr/include/bits/local_lim.h" 1 3 4
# 38 "/usr/include/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/bits/local_lim.h" 2 3 4
# 161 "/usr/include/bits/posix1_lim.h" 2 3 4
# 145 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/posix2_lim.h" 1 3 4
# 149 "/usr/include/limits.h" 2 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 49 "addition_scs.c" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 50 "addition_scs.c" 2






void inline scs_set(scs_ptr result, scs_ptr x){






    result->h_word[0] = x->h_word[0]; result->h_word[1] = x->h_word[1];
    result->h_word[2] = x->h_word[2]; result->h_word[3] = x->h_word[3];
    result->h_word[4] = x->h_word[4]; result->h_word[5] = x->h_word[5];
    result->h_word[6] = x->h_word[6]; result->h_word[7] = x->h_word[7];




  result->exception.d = x->exception.d;
  result->index = x->index;
  result->sign = x->sign;
}
# 88 "addition_scs.c"
void inline scs_renorm(scs_ptr result){



  unsigned int c;
  int i, j, k;




  for(i=8 -1; i>0; i--){
    c = result->h_word[i] & ~((unsigned int)((1<<30)-1));
    result->h_word[i-1] += c >> 30;
    result->h_word[i] = result->h_word[i] & ((unsigned int)((1<<30)-1));
  }

  if (result->h_word[0] >= (1<<30)){

    c = result->h_word[0] & ~((unsigned int)((1<<30)-1));
    c = c >> 30;
    for(i=8 -1; i>1; i--)
      result->h_word[i] = result->h_word[i-1];

    result->h_word[1] = result->h_word[0] & ((unsigned int)((1<<30)-1));
    result->h_word[0] = c;
    result->index += 1;

  }else{

    if (result->h_word[0] == 0){

      k = 1;
      while ((result->h_word[k] == 0) && (k <= 8))
 k++;

      result->index -= k;

      for(j=k, i=0; j<8; j++, i++)
 result->h_word[i] = result->h_word[j];

      for( ; i<8; i++)
 result->h_word[i] = 0;

    }
  }
}
# 145 "addition_scs.c"
void inline scs_renorm_no_cancel_check(scs_ptr result){




  unsigned int carry, c0;




  carry = result->h_word[7] >> 30;
  result->h_word[6] += carry; result->h_word[7] = result->h_word[7] & ((unsigned int)((1<<30)-1));
  carry = result->h_word[6] >> 30;
  result->h_word[5] += carry; result->h_word[6] = result->h_word[6] & ((unsigned int)((1<<30)-1));
  carry = result->h_word[5] >> 30;
  result->h_word[4] += carry; result->h_word[5] = result->h_word[5] & ((unsigned int)((1<<30)-1));
  carry = result->h_word[4] >> 30;
  result->h_word[3] += carry; result->h_word[4] = result->h_word[4] & ((unsigned int)((1<<30)-1));
  carry = result->h_word[3] >> 30;
  result->h_word[2] += carry; result->h_word[3] = result->h_word[3] & ((unsigned int)((1<<30)-1));
  carry = result->h_word[2] >> 30;
  result->h_word[1] += carry; result->h_word[2] = result->h_word[2] & ((unsigned int)((1<<30)-1));
  carry = result->h_word[1] >> 30;
  result->h_word[0] += carry; result->h_word[1] = result->h_word[1] & ((unsigned int)((1<<30)-1));
# 177 "addition_scs.c"
  if (result->h_word[0] >= (1<<30)){

    c0 = result->h_word[0] >> 30;


    result->h_word[7] = result->h_word[6]; result->h_word[6] = result->h_word[5];
    result->h_word[5] = result->h_word[4]; result->h_word[4] = result->h_word[3];
    result->h_word[3] = result->h_word[2]; result->h_word[2] = result->h_word[1];




    result->h_word[1] = result->h_word[0] & ((unsigned int)((1<<30)-1));
    result->h_word[0] = c0;
    result->index += 1;
  }
  return;
}
# 208 "addition_scs.c"
void do_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y){
  unsigned int RES[8];
  unsigned int i, j, Diff;

  if (x->exception.i[1]==0){scs_set(result, y); return; }
  if (y->exception.i[1]==0){scs_set(result, x); return; }

  for (i=0; i<8; i++)
    RES[i] = x->h_word[i];

  Diff = x->index - y->index;
  result->exception.d = x->exception.d + y->exception.d - 1;
  result->index = x->index;
  result->sign = x->sign;

  for (i=Diff, j=0; i<8; i++, j++)
    RES[i] += y->h_word[j];

  for (i=0; i<8; i++)
    result->h_word[i] = RES[i];

  return;
}






void inline scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y)




{
  if (x->index >= y->index)
    do_add_no_renorm(result,x,y);
  else
    do_add_no_renorm(result,y,x);
  return;
}
# 257 "addition_scs.c"
void do_add(scs_ptr result, scs_ptr x, scs_ptr y)
{

  int carry, Diff;
  int r0,r1,r2,r3,r4,r5,r6,r7;

  Diff = x->index - y->index;
  result->exception.d = x->exception.d + y->exception.d - 1;
  result->index = x->index;
  result->sign = x->sign;
# 344 "addition_scs.c"
  switch (Diff){
    case 0:
    r0 = x->h_word[0] + y->h_word[0]; r1 = x->h_word[1] + y->h_word[1];
    r2 = x->h_word[2] + y->h_word[2]; r3 = x->h_word[3] + y->h_word[3];
    r4 = x->h_word[4] + y->h_word[4]; r5 = x->h_word[5] + y->h_word[5];
    r6 = x->h_word[6] + y->h_word[6]; r7 = x->h_word[7] + y->h_word[7]; break;
  case 1:
    r0 = x->h_word[0]; r1 = x->h_word[1] + y->h_word[0];
    r2 = x->h_word[2] + y->h_word[1]; r3 = x->h_word[3] + y->h_word[2];
    r4 = x->h_word[4] + y->h_word[3]; r5 = x->h_word[5] + y->h_word[4];
    r6 = x->h_word[6] + y->h_word[5]; r7 = x->h_word[7] + y->h_word[6]; break;
  case 2:
    r0 = x->h_word[0]; r1 = x->h_word[1];
    r2 = x->h_word[2] + y->h_word[0]; r3 = x->h_word[3] + y->h_word[1];
    r4 = x->h_word[4] + y->h_word[2]; r5 = x->h_word[5] + y->h_word[3];
    r6 = x->h_word[6] + y->h_word[4]; r7 = x->h_word[7] + y->h_word[5]; break;
  case 3:
    r0 = x->h_word[0]; r1 = x->h_word[1];
    r2 = x->h_word[2]; r3 = x->h_word[3] + y->h_word[0];
    r4 = x->h_word[4] + y->h_word[1]; r5 = x->h_word[5] + y->h_word[2];
    r6 = x->h_word[6] + y->h_word[3]; r7 = x->h_word[7] + y->h_word[4]; break;
  case 4:
    r0 = x->h_word[0]; r1 = x->h_word[1];
    r2 = x->h_word[2]; r3 = x->h_word[3];
    r4 = x->h_word[4] + y->h_word[0]; r5 = x->h_word[5] + y->h_word[1];
    r6 = x->h_word[6] + y->h_word[2]; r7 = x->h_word[7] + y->h_word[3]; break;
  case 5:
    r0 = x->h_word[0]; r1 = x->h_word[1];
    r2 = x->h_word[2]; r3 = x->h_word[3];
    r4 = x->h_word[4]; r5 = x->h_word[5] + y->h_word[0];
    r6 = x->h_word[6] + y->h_word[1]; r7 = x->h_word[7] + y->h_word[2]; break;
  case 6:
    r0 = x->h_word[0]; r1 = x->h_word[1];
    r2 = x->h_word[2]; r3 = x->h_word[3];
    r4 = x->h_word[4]; r5 = x->h_word[5];
    r6 = x->h_word[6] + y->h_word[0]; r7 = x->h_word[7] + y->h_word[1]; break;
  case 7:
    r0 = x->h_word[0]; r1 = x->h_word[1];
    r2 = x->h_word[2]; r3 = x->h_word[3];
    r4 = x->h_word[4]; r5 = x->h_word[5];
    r6 = x->h_word[6]; r7 = x->h_word[7] + y->h_word[0]; break;
  default:

    result->h_word[0] = x->h_word[0]; result->h_word[1] = x->h_word[1];
    result->h_word[2] = x->h_word[2]; result->h_word[3] = x->h_word[3];
    result->h_word[4] = x->h_word[4]; result->h_word[5] = x->h_word[5];
    result->h_word[6] = x->h_word[6]; result->h_word[7] = x->h_word[7]; return;
 }




  carry = r7 >> 30; r6 += carry; r7 = r7 & ((unsigned int)((1<<30)-1));
  carry = r6 >> 30; r5 += carry; r6 = r6 & ((unsigned int)((1<<30)-1));
  carry = r5 >> 30; r4 += carry; r5 = r5 & ((unsigned int)((1<<30)-1));
  carry = r4 >> 30; r3 += carry; r4 = r4 & ((unsigned int)((1<<30)-1));
  carry = r3 >> 30; r2 += carry; r3 = r3 & ((unsigned int)((1<<30)-1));
  carry = r2 >> 30; r1 += carry; r2 = r2 & ((unsigned int)((1<<30)-1));
  carry = r1 >> 30; r0 += carry; r1 = r1 & ((unsigned int)((1<<30)-1));
  carry = r0 >> 30;

  if (carry){
    result->h_word[7] = r6; result->h_word[6] = r5; result->h_word[5] = r4; result->h_word[4] = r3;
    result->h_word[3] = r2; result->h_word[2] = r1; result->h_word[1] = r0 & ((unsigned int)((1<<30)-1));
    result->h_word[0] = 1 ;
    result->index += 1;
  }
  else {
    result->h_word[0] = r0; result->h_word[1] = r1; result->h_word[2] = r2; result->h_word[3] = r3;
    result->h_word[4] = r4; result->h_word[5] = r5; result->h_word[6] = r6; result->h_word[7] = r7;
  }
  return;
# 463 "addition_scs.c"
}
# 481 "addition_scs.c"
int inline scs_cmp_mant(scs_ptr x, scs_ptr y){



  int i;

  for(i=0; i< 8; i++){
    if (x->h_word[i] == y->h_word[i]) continue;
    else if (x->h_word[i] > y->h_word[i]) return 1;
    else return -1;}
  return 0;
}
# 507 "addition_scs.c"
void do_sub(scs_ptr result, scs_ptr x, scs_ptr y){
  int s, carry;
  int Diff, i, j, cp;
  int res[8];

  result->exception.d = x->exception.d + y->exception.d - 1;
  Diff = x->index - y->index;
  result->index = x->index;


  if(Diff >= 8){
    scs_set(result, x); return;
  }

  else {

    carry = 0;
    if(Diff==0) {
      cp = scs_cmp_mant(x, y);

      if (cp == 0) {

 scs_zero(result);
 return;
      }
      else {
 if (cp > 0){


   result->sign = x->sign;
   for(i=(8 -1); i>=0 ;i--){
     s = x->h_word[i] - y->h_word[i] - carry;
     carry = (s&(1<<30))>>30;
     res[i] = (s&(1<<30)) + s;
   }
 }
 else {


   result->sign = - x->sign;
   for(i=(8 -1); i>=0 ;i--){
     s = - x->h_word[i] + y->h_word[i] - carry;
     carry = (s&(1<<30))>>30;
     res[i] = (s&(1<<30)) + s;
   }
 }
      }
    }
    else {



      result->sign = x->sign;
      for(i=(8 -1), j=((8 -1)-Diff); i>=0 ;i--,j--){
 if(j>=0)
   s = x->h_word[i] - y->h_word[j] - carry;
 else
   s = x->h_word[i] - carry;
 carry = (s&(1<<30))>>30;
 res[i] = (s&(1<<30)) + s;
      }
    }

    i=0;
    while ((res[i]==0) && (i < 8)) i++;

    if(i>0) {
      result->index -= i;
      for(j=0; i<8; i++,j++) result->h_word[j] = res[i];
      for( ; j<8; j++) result->h_word[j] = 0;
    }
    else {
      for(i=0; i<8; i++)
 result->h_word[i] = res[i];
    }
  }
  return;
}
# 597 "addition_scs.c"
void inline scs_add(scs_ptr result, scs_ptr x, scs_ptr y)



{

  if (x->exception.i[1]==0){scs_set(result, y); return; }
  if (y->exception.i[1]==0){scs_set(result, x); return; }

  if (x->sign == y->sign){
    if(x->index >= y->index)
      do_add(result,x,y);
    else
      do_add(result,y,x);
  }else {
    if(x->index>=y->index){
      do_sub(result,x,y);
    }else {
      do_sub(result,y,x);
    }
  } return;
}







void inline scs_sub(scs_ptr result, scs_ptr x, scs_ptr y)



{
  if (x->exception.i[1]==0)
    { scs_set(result, y); result->sign = -result->sign; return; }
  if (y->exception.i[1]==0)
    { scs_set(result, x); return; }

  if (x->sign == y->sign) {

    if(x->index>=y->index)
      do_sub(result,x,y);
    else{
      do_sub(result,y,x);
      result->sign = -result->sign;
    }
  }else {
    if(x->index>=y->index)
      do_add(result,x,y);
    else{
      do_add(result,y,x);
      result->sign = -result->sign;
    }
  }
  return;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -Wall -Wshadow -Wpointer-arith -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline  -g -O1 -m32 -E  -c multiplication_scs.c
# 1 "multiplication_scs.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "multiplication_scs.c"
# 29 "multiplication_scs.c"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 144 "/usr/include/limits.h" 3 4
# 1 "/usr/include/bits/posix1_lim.h" 1 3 4
# 160 "/usr/include/bits/posix1_lim.h" 3 4
# 1 "/usr/include/bits/local_lim.h" 1 3 4
# 38 "/usr/include/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/bits/local_lim.h" 2 3 4
# 161 "/usr/include/bits/posix1_lim.h" 2 3 4
# 145 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/posix2_lim.h" 1 3 4
# 149 "/usr/include/limits.h" 2 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 30 "multiplication_scs.c" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 31 "multiplication_scs.c" 2
# 69 "multiplication_scs.c"
typedef unsigned long long int SCS_CONVERSION_MUL;
# 180 "multiplication_scs.c"
void scs_mul(scs_ptr result, scs_ptr x, scs_ptr y){
  SCS_CONVERSION_MUL val, tmp;
  SCS_CONVERSION_MUL r0,r1,r2,r3,r4,r5,r6,r7,r8;
  SCS_CONVERSION_MUL x0,x1,x2,x3,x4,x5,x6,x7;
  int y0,y1,y2,y3,y4,y5,y6,y7;

  result->exception.d = x->exception.d * y->exception.d;
  result->sign = x->sign * y->sign;
  result->index = x->index + y->index;


  x7=x->h_word[7]; y7=y->h_word[7]; x6=x->h_word[6]; y6=y->h_word[6];
  x5=x->h_word[5]; y5=y->h_word[5]; x4=x->h_word[4]; y4=y->h_word[4];
  x3=x->h_word[3]; y3=y->h_word[3]; x2=x->h_word[2]; y2=y->h_word[2];
  x1=x->h_word[1]; y1=y->h_word[1]; x0=x->h_word[0]; y0=y->h_word[0];

  r8 = x7*y1 + x6*y2 + x5*y3 + x4*y4 + x3*y5 + x2*y6 + x1*y7;
  r7 = x7*y0 + x6*y1 + x5*y2 + x4*y3 + x3*y4 + x2*y5 + x1*y6 + x0*y7;
  r6 = x6*y0 + x5*y1 + x4*y2 + x3*y3 + x2*y4 + x1*y5 + x0*y6;
  r5 = x5*y0 + x4*y1 + x3*y2 + x2*y3 + x1*y4 + x0*y5;
  r4 = x4*y0 + x3*y1 + x2*y2 + x1*y3 + x0*y4 ;
  r3 = x3*y0 + x2*y1 + x1*y2 + x0*y3;
  r2 = x2*y0 + x1*y1 + x0*y2;
  r1 = x1*y0 + x0*y1 ;
  r0 = x0*y0 ;

  val= 0;

  {tmp = r8>>30; r7 += tmp; r8 -= (tmp<<30);}
  {tmp = r7>>30; r6 += tmp; r7 -= (tmp<<30);}
  {tmp = r6>>30; r5 += tmp; r6 -= (tmp<<30);}
  {tmp = r5>>30; r4 += tmp; r5 -= (tmp<<30);}
  {tmp = r4>>30; r3 += tmp; r4 -= (tmp<<30);}
  {tmp = r3>>30; r2 += tmp; r3 -= (tmp<<30);}
  {tmp = r2>>30; r1 += tmp; r2 -= (tmp<<30);}
  {tmp = r1>>30; r0 += tmp; r1 -= (tmp<<30);}
  {tmp = r0>>30; val += tmp; r0 -= (tmp<<30);}

  if(val != 0){

    result->h_word[0] = val; result->h_word[1] = r0; result->h_word[2] = r1; result->h_word[3] = r2;
    result->h_word[4] = r3; result->h_word[5] = r4; result->h_word[6] = r5; result->h_word[7] = r6;
    result->index += 1;
  }
  else {
    result->h_word[0] = r0; result->h_word[1] = r1; result->h_word[2] = r2; result->h_word[3] = r3;
    result->h_word[4] = r4; result->h_word[5] = r5; result->h_word[6] = r6; result->h_word[7] = r7;
  }

}


void scs_square(scs_ptr result, scs_ptr x){
  SCS_CONVERSION_MUL r0,r1,r2,r3,r4,r5,r6,r7,r8;
  SCS_CONVERSION_MUL x0,x1,x2,x3,x4,x5,x6,x7;
  SCS_CONVERSION_MUL val, tmp;


  result->exception.d = x->exception.d * x->exception.d;
  result->index = x->index + x->index;
  result->sign = 1;




  x7=x->h_word[7]; x6=x->h_word[6]; x5=x->h_word[5]; x4=x->h_word[4];
  x3=x->h_word[3]; x2=x->h_word[2]; x1=x->h_word[1]; x0=x->h_word[0];

  r0 = x0*x0;
  r1 = (x0*x1)* 2 ;
  r2 = x1*x1 + (x0*x2*2);
  r3 = (x1*x2 + x0*x3)* 2;
  r4 = x2*x2 + (x1*x3 + x0*x4)* 2;
  r5 = (x2*x3 + x1*x4 + x0*x5)* 2;
  r6 = x3*x3 + (x2*x4 + x1*x5 + x0*x6)* 2;
  r7 = (x3*x4 + x2*x5 + x1*x6 + x0*x7)* 2;
  r8 = x4*x4 + (x3*x5 + x2*x6 + x1*x7)* 2;

  val= 0;

  {tmp = r8>>30; r7 += tmp; r8 -= (tmp<<30);}
  {tmp = r7>>30; r6 += tmp; r7 -= (tmp<<30);}
  {tmp = r6>>30; r5 += tmp; r6 -= (tmp<<30);}
  {tmp = r5>>30; r4 += tmp; r5 -= (tmp<<30);}
  {tmp = r4>>30; r3 += tmp; r4 -= (tmp<<30);}
  {tmp = r3>>30; r2 += tmp; r3 -= (tmp<<30);}
  {tmp = r2>>30; r1 += tmp; r2 -= (tmp<<30);}
  {tmp = r1>>30; r0 += tmp; r1 -= (tmp<<30);}
  {tmp = r0>>30; val += tmp; r0 -= (tmp<<30);}

  if(val != 0){

    result->h_word[0] = val; result->h_word[1] = r0; result->h_word[2] = r1; result->h_word[3] = r2;
    result->h_word[4] = r3; result->h_word[5] = r4; result->h_word[6] = r5; result->h_word[7] = r6;
    result->index += 1;
  }
  else {
    result->h_word[0] = r0; result->h_word[1] = r1; result->h_word[2] = r2; result->h_word[3] = r3;
    result->h_word[4] = r4; result->h_word[5] = r5; result->h_word[6] = r6; result->h_word[7] = r7;
  }

}
# 445 "multiplication_scs.c"
 void scs_mul_ui(scs_ptr x, unsigned int val_int){
  SCS_CONVERSION_MUL val, tmp, vald, rr;
  int i;

  if (val_int == 0)
    x->exception.d = 0;

  vald = val_int;

  val = 0;
  rr = 0;
  for(i=(8 -1); i>=0; i--){
    val += vald * x->h_word[i];
    {tmp = val>>30; rr += tmp; val -= (tmp<<30);}
    x->h_word[i] = val;
    val = rr;
    rr = 0;
  }

  if(val != 0){

    for(i=(8 -1); i>0; i--)
      x->h_word[i] = x->h_word[i-1];

    x->h_word[0] = val;
    x->index += 1;
  }

  return;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -Wall -Wshadow -Wpointer-arith -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline  -g -O1 -m32 -E  -c zero_scs.c
# 1 "zero_scs.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "zero_scs.c"
# 30 "zero_scs.c"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 144 "/usr/include/limits.h" 3 4
# 1 "/usr/include/bits/posix1_lim.h" 1 3 4
# 160 "/usr/include/bits/posix1_lim.h" 3 4
# 1 "/usr/include/bits/local_lim.h" 1 3 4
# 38 "/usr/include/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/bits/local_lim.h" 2 3 4
# 161 "/usr/include/bits/posix1_lim.h" 2 3 4
# 145 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/posix2_lim.h" 1 3 4
# 149 "/usr/include/limits.h" 2 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 31 "zero_scs.c" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 32 "zero_scs.c" 2
# 41 "zero_scs.c"
void inline scs_zero(scs_ptr result) {



  int i;

  for(i=0; i<8; i++)
    result->h_word[i] = 0;

  result->exception.d = 0;
  result->index = 0;
  result->sign = 1;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -Wall -Wshadow -Wpointer-arith -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline  -g -O1 -m32 -E  -c division_scs.c
# 1 "division_scs.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "division_scs.c"
# 31 "division_scs.c"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 144 "/usr/include/limits.h" 3 4
# 1 "/usr/include/bits/posix1_lim.h" 1 3 4
# 160 "/usr/include/bits/posix1_lim.h" 3 4
# 1 "/usr/include/bits/local_lim.h" 1 3 4
# 38 "/usr/include/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/bits/local_lim.h" 2 3 4
# 161 "/usr/include/bits/posix1_lim.h" 2 3 4
# 145 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/posix2_lim.h" 1 3 4
# 149 "/usr/include/limits.h" 2 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 32 "division_scs.c" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 33 "division_scs.c" 2





void scs_inv(scs_ptr result, scs_ptr x){
  scs_t tmp, res, res1, scstwo;
  double app_x, inv;

  scs_set(tmp, x); tmp->index = 0; scs_get_d(&app_x, tmp);

  scs_set_si(scstwo, 2);

  inv = 1/app_x;

  scs_set_d(res, inv);
  res->index -= x->index;


  scs_mul(res1, x, res);
  scs_sub(res1, scstwo, res1);
  scs_mul(res, res, res1);


  scs_mul(res1, x, res);
  scs_sub(res1, scstwo, res1);
  scs_mul(result, res, res1);

  return;
}




void scs_div(scs_ptr result, scs_ptr x, scs_ptr y){
  scs_t res;

  if (x->exception.d != 1){
    result->exception.d = x->exception.d / y->exception.d;
    return;
  }

  scs_inv(res, y);
  scs_mul(result, res, x);
  return;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -Wall -Wshadow -Wpointer-arith -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline  -g -O1 -m32 -E  -c double2scs.c
# 1 "double2scs.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "double2scs.c"
# 28 "double2scs.c"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 144 "/usr/include/limits.h" 3 4
# 1 "/usr/include/bits/posix1_lim.h" 1 3 4
# 160 "/usr/include/bits/posix1_lim.h" 3 4
# 1 "/usr/include/bits/local_lim.h" 1 3 4
# 38 "/usr/include/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/bits/local_lim.h" 2 3 4
# 161 "/usr/include/bits/posix1_lim.h" 2 3 4
# 145 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/posix2_lim.h" 1 3 4
# 149 "/usr/include/limits.h" 2 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 29 "double2scs.c" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 30 "double2scs.c" 2






void scs_set_d(scs_ptr result, double x){
  db_number nb, mantissa;
  int exponent, exponent_remainder;
  int ind, i;

  if(x>=0){result->sign = 1; nb.d = x;}
  else {result->sign = -1; nb.d = -x;}

  exponent = nb.i[1] & 0x7ff00000 ;

  if (exponent == 0x7ff00000) {



    result->exception.d = x;
    for(i=0; i<8; i++)
      result->h_word[i] = 0;

    result->index = 0;
    result->sign = 1;
  }

  else {


    result->exception.d = 1;



    if (exponent == 0){

      nb.d = nb.d * radix_two_double.d;
      exponent = nb.i[1] & 0x7ff00000 ;
      result->index = -2;
    }else {
      result->index = 0;
    }

    exponent = exponent >> 20;

    ind = ((exponent +((100*30)-1023))/30) - 100 ;




    exponent_remainder = exponent - 1022 - (30*ind);

    result->index += ind;


    mantissa.l = (nb.l & 0x000fffffffffffffULL) | 0x0010000000000000ULL;




    result->h_word[0] = mantissa.l >> (53 - exponent_remainder);


    mantissa.l = (mantissa.l << (exponent_remainder+11));
    result->h_word[1] = (mantissa.i[1] >> (32 - 30))& ((unsigned int)((1<<30)-1)) ;
    mantissa.l = (mantissa.l << 30);
    result->h_word[2] = (mantissa.i[1] >> (32 - 30))& ((unsigned int)((1<<30)-1)) ;




    result->h_word[3] = 0 ;



      result->h_word[4] = 0; result->h_word[5] = 0; result->h_word[6] = 0; result->h_word[7] = 0;
# 138 "double2scs.c"
  }

  return;
}






void scs_set_si(scs_ptr result, signed int x){
  unsigned int ux;
  int i;

  if(x>=0){result->sign = 1; ux = x;}
  else {result->sign = -1; ux = -x;}


  if (ux > (1<<30)){
    result->index = 1;
    result->h_word[0] = (ux - (1<<30)) >> 30;
    result->h_word[1] = ux - (result->h_word[0] << 30);
  }else {
    result->index = 0;
    result->h_word[0] = ux;
    result->h_word[1] = 0;
  }

  for(i=2; i<8; i++)
    result->h_word[i] = 0;

  if (x != 0) result->exception.d = 1;
  else result->exception.d = 0;

  return;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -Wall -Wshadow -Wpointer-arith -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline  -g -O1 -m32 -E  -c scs2double.c
# 1 "scs2double.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "scs2double.c"
# 28 "scs2double.c"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 144 "/usr/include/limits.h" 3 4
# 1 "/usr/include/bits/posix1_lim.h" 1 3 4
# 160 "/usr/include/bits/posix1_lim.h" 3 4
# 1 "/usr/include/bits/local_lim.h" 1 3 4
# 38 "/usr/include/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/bits/local_lim.h" 2 3 4
# 161 "/usr/include/bits/posix1_lim.h" 2 3 4
# 145 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/posix2_lim.h" 1 3 4
# 149 "/usr/include/limits.h" 2 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 29 "scs2double.c" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 30 "scs2double.c" 2
# 50 "scs2double.c"
void scs_get_d(double *result, scs_ptr x){
  db_number nb, rndcorr;
  unsigned long long int lowpart, t1;
  int expo, expofinal;
  double res;


  nb.d = (double)x->h_word[0];


  t1 = x->h_word[1];
  lowpart = (t1 << 30) + x->h_word[2];







  if (x->exception.d != 1){
    *result = x->exception.d;
    return;
  }


  expo = ((nb.i[1] & 0x7ff00000)>>20) - 1023;


  expofinal = expo + 30*x->index;


  if (expofinal > 1023) {

    res = radix_rng_double.d*radix_rng_double.d;
  }


  else if (expofinal >= -1022){



    lowpart = lowpart >> (expo+(2*30)-53);

    if (lowpart & 0x0000000000000001ULL){

      rndcorr.i[0] = 0;
      rndcorr.i[1] = (expo-52+1023)<<20;
    }else{

      rndcorr.d = 0.0;
    }

    lowpart = lowpart >> 1;
    nb.l = nb.l | lowpart;
    res = nb.d + rndcorr.d;




    if((x->index)*30 +1023 > 0) {

      nb.i[1] = ((x->index)*30 +1023) << 20;
      nb.i[0] = 0;
      res *= nb.d;
    }
    else {

      nb.i[1] = ((x->index)*30 +1023 + 2*30) << 20;
      nb.i[0] = 0;
      res *= radix_mtwo_double.d;
      res *= nb.d;
    }
  }


  else {



    if (expofinal < -1022 - 53 ) {
      res = 0.0;
    }
    else {


      lowpart = lowpart >> (expo+(2*30)-52);

      nb.l = nb.l | lowpart;



      nb.l = (nb.l & 0x000FFFFFFFFFFFFFULL) | 0x0010000000000000ULL;


      nb.l = nb.l >> (-1023 - expofinal);

      if (nb.i[0] & 0x00000001){

 rndcorr.l = 1;
      }else{

 rndcorr.d = 0.0;

      }
      res = 0.5*(nb.d + rndcorr.d);


    }
  }


  if (x->sign < 0)
    *result = - res;
  else
    *result = res;
}
# 178 "scs2double.c"
void get_d_directed(double *result, scs_ptr x, int rndMantissaUp){
  db_number nb, rndcorr;
  unsigned long long int lowpart, t1;
  int expo,expofinal,i, not_null;
  double res;


  nb.d = (double)x->h_word[0];


  t1 = x->h_word[1];
  lowpart = (t1 << 30) + x->h_word[2];


  if (x->exception.d != 1){
    *result = x->exception.d;
    return;
  }


  expo = ((nb.i[1] & 0x7ff00000)>>20) - 1023;
  not_null = ((lowpart << (64+52 - 2*30 - expo)) != 0 );

  for (i=3; i<8; i++)
    if (x->h_word[i]!=0) not_null = 1;


  expofinal = expo + 30*x->index;


  if (expofinal > 1023) {
    if (rndMantissaUp)

      res = radix_rng_double.d*radix_rng_double.d;
    else

      res = max_double.d;
  }


  else if (expofinal >= -1022){



    lowpart = lowpart >> (expo+(2*30)-52);

    nb.l = nb.l | lowpart;
    if (rndMantissaUp && (not_null)){
      rndcorr.i[0] = 0;
      rndcorr.i[1] = (expo-52+1023)<<20;
    } else {
      rndcorr.d = 0.0;
    }
    res = nb.d + rndcorr.d;




    if((x->index)*30 +1023 > 0) {

      nb.i[1] = ((x->index)*30 +1023) << 20;
      nb.i[0] = 0;
      res *= nb.d;
    }
    else {

      nb.i[1] = ((x->index)*30 +1023 + 2*30) << 20;
      nb.i[0] = 0;
      res *= radix_mtwo_double.d;
      res *= nb.d;
    }
  }


  else {



    if (expofinal < -1022 - 53 ) {
      if(rndMantissaUp)
 res = min_double.d;
      else
 res = 0.0;
    }
    else {


      lowpart = lowpart >> (expo+(2*30)-52);

      nb.l = nb.l | lowpart;



      nb.l = (nb.l & 0x000FFFFFFFFFFFFFULL) | 0x0010000000000000ULL;

      if (rndMantissaUp && (not_null)){
 nb.l = nb.l >> (-1022 - expofinal);
 nb.l = nb.l +1;
      }
      else

 nb.l = nb.l >> (-1022 - expofinal);

      res = nb.d;


    }
  }


  if (x->sign < 0)
    *result = - res;
  else
    *result = res;
}
# 366 "scs2double.c"
void scs_get_d_minf(double *result, scs_ptr x){


  get_d_directed(result, x, (x->sign<0));
}






void scs_get_d_pinf(double *result, scs_ptr x){


  get_d_directed(result, x, (x->sign>=0));
}






void scs_get_d_zero(double *result, scs_ptr x){

  get_d_directed(result, x, 0);
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c trigo_fast.c
# 1 "trigo_fast.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "trigo_fast.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 2 "trigo_fast.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 3 "trigo_fast.c" 2
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 4 "trigo_fast.c" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 5 "trigo_fast.c" 2
# 1 "trigo_fast.h" 1
# 312 "trigo_fast.h"
static db_number const s3 = {{0x55555555,0xBFC55555}} ;
static db_number const s5 = {{0x11111111,0x3F811111}} ;
static db_number const s7 = {{0x1A01A01A,0xBF2A01A0}} ;
static db_number const s9 = {{0xA556C734,0x3EC71DE3}} ;

static db_number const c2 = {{0x00000000,0xBFE00000}} ;
static db_number const c4 = {{0x55555555,0x3FA55555}} ;
static db_number const c6 = {{0x16C16C17,0xBF56C16C}} ;
static db_number const c8 = {{0x1A01A01A,0x3EFA01A0}} ;




static db_number const sincosTable[260] =
{
{{0x00000000,0x00000000}} ,
{{0x00000000,0x00000000}} ,
{{0x00000000,0x3FF00000}} ,
{{0x00000000,0x00000000}} ,
{{0xFCDEC784,0x3F8921D1}} ,
{{0xBE836D9D,0x3C29878E}} ,
{{0x169B92DB,0x3FEFFF62}} ,
{{0xC81FBD0D,0x3C85DDA3}} ,
{{0xF7A3667E,0x3F992155}} ,
{{0x091A0130,0xBBFB1D63}} ,
{{0x6084CD0D,0x3FEFFD88}} ,
{{0x4556E4CB,0xBC81354D}} ,
{{0x759455CD,0x3FA2D865}} ,
{{0x5BA93AC0,0x3C2686F6}} ,
{{0xEFFEF75D,0x3FEFFA72}} ,
{{0xCDB25956,0xBC88B4CD}} ,
{{0xF10DD814,0x3FA91F65}} ,
{{0x0D569A90,0xBC2912BD}} ,
{{0xE3796D7E,0x3FEFF621}} ,
{{0x2E24AA15,0xBC6C57BC}} ,
{{0x79F820E0,0x3FAF656E}} ,
{{0xE392BFFE,0xBC22E1EB}} ,
{{0x658E71AD,0x3FEFF095}} ,
{{0xE18A4B9E,0x3C801A8C}} ,
{{0x92CE19F6,0x3FB2D520}} ,
{{0xA8BF6B2C,0xBC49A088}} ,
{{0xAD01883A,0x3FEFE9CD}} ,
{{0xD0C67E35,0x3C6521EC}} ,
{{0x0A9AA419,0x3FB5F6D0}} ,
{{0xD03F6C9A,0xBC4F4022}} ,
{{0xFCBD5B09,0x3FEFE1CA}} ,
{{0x202A884E,0x3C6A23E3}} ,
{{0xBC29B42C,0x3FB917A6}} ,
{{0xD26ED688,0xBC3E2718}} ,
{{0xA3D12526,0x3FEFD88D}} ,
{{0x378811C7,0xBC887DF6}} ,
{{0xC79EC2D5,0x3FBC3785}} ,
{{0xF133FB21,0xBC24F39D}} ,
{{0xFD6DA67B,0x3FEFCE15}} ,
{{0x830D4C09,0xBC75DD6F}} ,
{{0x56A9730E,0x3FBF564E}} ,
{{0x729AE56D,0x3C4A2704}} ,
{{0x70E19FD3,0x3FEFC264}} ,
{{0x68ECACEE,0x3C81EC86}} ,
{{0xCEDAF577,0x3FC139F0}} ,
{{0x4D1B3CFA,0xBC652343}} ,
{{0x7195D741,0x3FEFB579}} ,
{{0x7397CC08,0x3C71BFAC}} ,
{{0x6E8E613A,0x3FC2C810}} ,
{{0xA89A11E0,0x3C513000}} ,
{{0x7F08A517,0x3FEFA755}} ,
{{0xCA13571F,0xBC87A0A8}} ,
{{0xB1293E5A,0x3FC45576}} ,
{{0x4119F7B1,0xBC5285A2}} ,
{{0x24C9099B,0x3FEF97F9}} ,
{{0xEEA5963B,0xBC8E2AE0}} ,
{{0x448B3FC6,0x3FC5E214}} ,
{{0x779DDAC6,0x3C6531FF}} ,
{{0xFA714BA9,0x3FEF8764}} ,
{{0x778FFCB6,0x3C7AB256}} ,
{{0xDE50BF31,0x3FC76DD9}} ,
{{0xEC501B2F,0x3C61D5EE}} ,
{{0xA3A12077,0x3FEF7599}} ,
{{0xD743195C,0x3C884F31}} ,
{{0x3C69A60B,0x3FC8F8B8}} ,
{{0xB9FF8D82,0xBC626D19}} ,
{{0xCFF75CB0,0x3FEF6297}} ,
{{0x2A361FD3,0x3C756217}} ,
{{0x25B00451,0x3FCA82A0}} ,
{{0xFFD084AD,0xBC687905}} ,
{{0x3B0B2F2D,0x3FEF4E60}} ,
{{0xE695AC05,0xBC78EE01}} ,
{{0x6A7E4F63,0x3FCC0B82}} ,
{{0x9E521935,0xBC1AF143}} ,
{{0xAC64E589,0x3FEF38F3}} ,
{{0xB51F72E6,0xBC7D7BAF}} ,
{{0xE5454311,0x3FCD934F}} ,
{{0x277107AD,0x3C675B92}} ,
{{0xF7763ADA,0x3FEF2252}} ,
{{0x1C8D94AB,0xBC820CB8}} ,
{{0x7B215F1B,0x3FCF19F9}} ,
{{0xF11DA2C4,0xBC642DEE}} ,
{{0xFB9230D7,0x3FEF0A7E}} ,
{{0xDC6B4989,0x3C752C7A}} ,
{{0x0E37FDAE,0x3FD04FB8}} ,
{{0xB72583CC,0xBC0412CD}} ,
{{0xA3E473C2,0x3FEEF178}} ,
{{0x67FE774F,0x3C86310A}} ,
{{0x62B1F677,0x3FD111D2}} ,
{{0x0AB7AA9A,0x3C7824C2}} ,
{{0xE7684963,0x3FEED740}} ,
{{0x91F59CC2,0x3C7E82C7}} ,
{{0x3F4CDB3E,0x3FD1D344}} ,
{{0x1C13519E,0xBC6720D4}} ,
{{0xC8DF0B74,0x3FEEBBD8}} ,
{{0x615E7277,0x3C7C6C8C}} ,
{{0x2ED59F06,0x3FD29406}} ,
{{0xA2C4612D,0xBC75D28D}} ,
{{0x56C62DDA,0x3FEE9F41}} ,
{{0xE2E3F81E,0x3C8760B1}} ,
{{0xC2E18152,0x3FD35410}} ,
{{0x2F96E062,0xBC73CB00}} ,
{{0xAB4CD10D,0x3FEE817B}} ,
{{0x686B5E0A,0xBC7D0AFE}} ,
{{0x94176601,0x3FD4135C}} ,
{{0x4AFA2518,0x3C70C97C}} ,
{{0xEC48E112,0x3FEE6288}} ,
{{0xF2847754,0xBC616B56}} ,
{{0x4278E76A,0x3FD4D1E2}} ,
{{0x18792858,0x3C624172}} ,
{{0x4B2BC17E,0x3FEE426A}} ,
{{0x89744882,0x3C8A8738}} ,
{{0x75AB1FDD,0x3FD58F9A}} ,
{{0xD58CF620,0xBC1EFDC0}} ,
{{0x04F686E5,0x3FEE2121}} ,
{{0x6C126527,0xBC8014C7}} ,
{{0xDD3F27C6,0x3FD64C7D}} ,
{{0x4A664121,0x3C510D2B}} ,
{{0x622DBE2B,0x3FEDFEAE}} ,
{{0x88425567,0xBC8514EA}} ,
{{0x30FA459F,0x3FD70885}} ,
{{0xE0864C5D,0xBC744B19}} ,
{{0xB6CCC23C,0x3FEDDB13}} ,
{{0xC6107DB3,0x3C883C37}} ,
{{0x311DCCE7,0x3FD7C3A9}} ,
{{0x1EF3E8D9,0x3C19A3F2}} ,
{{0x6238A09B,0x3FEDB652}} ,
{{0xEAE69460,0xBC7ADEE7}} ,
{{0xA6AEA963,0x3FD87DE2}} ,
{{0xD3D5A610,0xBC672CED}} ,
{{0xCF328D46,0x3FED906B}} ,
{{0x10231AC2,0x3C7457E6}} ,
{{0x63BC93D7,0x3FD9372A}} ,
{{0x9E5AD5B1,0x3C668431}} ,
{{0x73C9E68B,0x3FED6961}} ,
{{0xC6393D55,0xBC7E8C61}} ,
{{0x43A8ED8A,0x3FD9EF79}} ,
{{0x290BDBAB,0x3C66DA81}} ,
{{0xD14DC93A,0x3FED4134}} ,
{{0x95D25AF2,0xBC84EF52}} ,
{{0x2B6D3FCA,0x3FDAA6C8}} ,
{{0x6EE5CCF7,0xBC7D5F10}} ,
{{0x743E35DC,0x3FED17E7}} ,
{{0x3540130A,0xBC5101DA}} ,
{{0x09E15CC0,0x3FDB5D10}} ,
{{0xCB974183,0x3C65B362}} ,
{{0xF43CC773,0x3FECED7A}} ,
{{0xB5AB58AE,0xBC5E7B6B}} ,
{{0xD8011EE7,0x3FDC1249}} ,
{{0xBB515206,0xBC7813AA}} ,
{{0xF3FCFC5C,0x3FECC1F0}} ,
{{0x3B68F6AB,0x3C7E5761}} ,
{{0x9931C45E,0x3FDCC66E}} ,
{{0x59C37F8F,0x3C56850E}} ,
{{0x213411F5,0x3FEC954B}} ,
{{0x1E946603,0xBC52FB76}} ,
{{0x5B86E389,0x3FDD7977}} ,
{{0x87BC0575,0x3C7550EC}} ,
{{0x3488739B,0x3FEC678B}} ,
{{0xC7C5FF5B,0x3C6D86CA}} ,
{{0x3806F63B,0x3FDE2B5D}} ,
{{0x1D3C6841,0x3C5E0D89}} ,
{{0xF180BDB1,0x3FEC38B2}} ,
{{0x757C8D07,0xBC76E0B1}} ,
{{0x52EF78D6,0x3FDEDC19}} ,
{{0xC33EDEE6,0xBC7DD0F7}} ,
{{0x26725549,0x3FEC08C4}} ,
{{0xD80E2946,0x3C5B157F}} ,
{{0xDBF89ABA,0x3FDF8BA4}} ,
{{0xC1B776B8,0xBC32EC1F}} ,
{{0xAC6F952A,0x3FEBD7C0}} ,
{{0x32AC700A,0xBC8825A7}} ,
{{0x874C3EB7,0x3FE01CFC}} ,
{{0xE7C2368C,0xBC734A35}} ,
{{0x673590D2,0x3FEBA5AA}} ,
{{0x370753B6,0x3C87EA4E}} ,
{{0x9922FFEE,0x3FE07387}} ,
{{0x4347406C,0xBC8A5A01}} ,
{{0x45196E3E,0x3FEB7283}} ,
{{0x324E6D61,0xBC8BC69F}} ,
{{0x4D5D898F,0x3FE0C970}} ,
{{0xDE6EE9B2,0xBC88D3D7}} ,
{{0x3EF55712,0x3FEB3E4D}} ,
{{0xBF11A493,0xBC8EB6B8}} ,
{{0x541B4B23,0x3FE11EB3}} ,
{{0x69ABE4F1,0xBC8EF23B}} ,
{{0x58150200,0x3FEB090A}} ,
{{0x300FFCCE,0xBC8926DA}} ,
{{0x63DEDB49,0x3FE1734D}} ,
{{0xCCC50575,0xBC87EEF2}} ,
{{0x9E21D511,0x3FEAD2BC}} ,
{{0x07BEA548,0xBC847FBE}} ,
{{0x39AE68C8,0x3FE1C73B}} ,
{{0x267F6600,0x3C8B25DD}} ,
{{0x290EA1A3,0x3FEA9B66}} ,
{{0xE8B6DAC8,0x3C39F630}} ,
{{0x9933EB59,0x3FE21A79}} ,
{{0x77C68FB2,0xBC83A7B1}} ,
{{0x1B02FAE2,0x3FEA6309}} ,
{{0x52248D10,0xBC7E9111}} ,
{{0x4CDD12DF,0x3FE26D05}} ,
{{0x3EF3770C,0xBC85DA74}} ,
{{0xA0462782,0x3FEA29A7}} ,
{{0x015DF175,0xBC7128BB}} ,
{{0x25FAF3EA,0x3FE2BEDB}} ,
{{0xC796EE46,0xBC514981}} ,
{{0xEF29AF94,0x3FE9EF43}} ,
{{0xB60445C2,0x3C7B1DFC}} ,
{{0xFCE17035,0x3FE30FF7}} ,
{{0x26F74A6F,0xBC6EFCC6}} ,
{{0x47F38741,0x3FE9B3E0}} ,
{{0x86712474,0xBC830EE2}} ,
{{0xB10659F3,0x3FE36058}} ,
{{0xA35857E7,0xBC81FCB3}} ,
{{0xF4C7D742,0x3FE9777E}} ,
{{0xA240665E,0xBC815479}} ,
{{0x292050B9,0x3FE3AFFA}} ,
{{0xE3954964,0x3C7E3E25}} ,
{{0x499263FB,0x3FE93A22}} ,
{{0xA920DF0B,0x3C83D419}} ,
{{0x534556D4,0x3FE3FED9}} ,
{{0x608C5061,0x3C836916}} ,
{{0xA3EF940D,0x3FE8FBCC}} ,
{{0x9C86F2F1,0xBC66DFA9}} ,
{{0x25091DD6,0x3FE44CF3}} ,
{{0x2CFDC6B3,0x3C68076A}} ,
{{0x6B151741,0x3FE8BC80}} ,
{{0x2ED1336D,0xBC82C5E1}} ,
{{0x9B9B0939,0x3FE49A44}} ,
{{0x6D719B94,0xBC827EE1}} ,
{{0x0FBA2EBF,0x3FE87C40}} ,
{{0x0C3F64CD,0xBC82DABC}} ,
{{0xBBE3E5E9,0x3FE4E6CA}} ,
{{0xEDCEB327,0x3C63C293}} ,
{{0x0BFF976E,0x3FE83B0E}} ,
{{0xF8EA3475,0xBC76F420}} ,
{{0x92A35596,0x3FE53282}} ,
{{0x89DA0257,0xBC7A12EB}} ,
{{0xE3571771,0x3FE7F8EC}} ,
{{0xCE93C917,0xBC89C8D8}} ,
{{0x348CECA0,0x3FE57D69}} ,
{{0x992BFBB2,0xBC875720}} ,
{{0x226AAFAF,0x3FE7B5DF}} ,
{{0xACDF0AD7,0xBC70F537}} ,
{{0xBE65018C,0x3FE5C77B}} ,
{{0x9C0BC32A,0x3C8069EA}} ,
{{0x5F037261,0x3FE771E7}} ,
{{0x8D84068F,0x3C75CFCE}} ,
{{0x551D2CDF,0x3FE610B7}} ,
{{0x52FF2A37,0xBC7251B3}} ,
{{0x37EFFF96,0x3FE72D08}} ,
{{0x0F1D915C,0x3C80D4EF}} ,
{{0x25F0783D,0x3FE65919}} ,
{{0xFBF5DE23,0x3C8C3D64}} ,
{{0x54EAA8AF,0x3FE6E744}} ,
{{0xC84E226E,0xBC8DBC03}} ,
{{0x667F3BCD,0x3FE6A09E}} ,
{{0x13B26456,0xBC8BDD34}} ,
{{0x667F3BCD,0x3FE6A09E}} ,
{{0x13B26456,0xBC8BDD34}} ,

};
# 6 "trigo_fast.c" 2
# 1 "coefpi2.h" 1
# 11 "coefpi2.h"
static const int two_over_pi[]=
  {0x28be60db, 0x24e44152, 0x27f09d5f, 0x11f534dd,
   0x3036d8a5, 0x1993c439, 0x0107f945, 0x23abdebb,
   0x31586dc9, 0x06e3a424, 0x374b8019, 0x092eea09,
   0x3464873f, 0x21deb1cb, 0x04a69cfb, 0x288235f5,
   0x0baed121, 0x0e99c702, 0x1ad17df9, 0x013991d6,
   0x0e60d4ce, 0x1f49c845, 0x3e2ef7e4, 0x283b1ff8,
   0x25fff781, 0x1980fef2, 0x3c462d68, 0x0a6d1f6d,
   0x0d9fb3c9, 0x3cb09b74, 0x3d18fd9a, 0x1e5fea2d,
   0x1d49eeb1, 0x3ebe5f17, 0x2cf41ce7, 0x378a5292,
   0x3a9afed7, 0x3b11f8d5, 0x3421580c, 0x3046fc7b,
   0x1aeafc33, 0x3bc209af, 0x10d876a7, 0x2391615e,
   0x3986c219, 0x199855f1, 0x1281a102, 0x0dffd880};







static const scs Pio2=
  {{0x00000001, 0x2487ed51, 0x042d1846, 0x26263314,
    0x1701b839, 0x28948127, 0x01114cf9, 0x23a0105d},
    {{0x00000000 ,0x3ff00000}}, 0, 1 };






static const scs Pio4=

{{0x3243f6a8, 0x22168c23, 0x1313198a, 0x0b80dc1c,
0x344a4093, 0x2088a67c, 0x31d0082e, 0x3ea63b13},
{{0x00000000 ,0x3ff00000}}, -1, 1 };
# 7 "trigo_fast.c" 2


extern double scs_sin_rn(double);
extern double scs_sin_ru(double);
extern double scs_sin_rd(double);
extern double scs_sin_rz(double);
extern double scs_cos_rn(double);
extern double scs_cos_ru(double);
extern double scs_cos_rd(double);
extern double scs_cos_rz(double);
extern double scs_tan_rn(double);
extern double scs_tan_rd(double);
extern double scs_tan_ru(double);
extern double scs_tan_rz(double);
# 67 "trigo_fast.c"
static double sah,sal,cah,cal;


static void do_sin(double* sh, double* sl, double yh, double yl) {
  double thi, tlo, cahyh_h, cahyh_l, yh2, ts, tc;



  yh2 = yh*yh;

  if(sah==0.0)
    {
      ts = yh2 * (s3.d + yh2*(s5.d + yh2*s7.d));


      {double _z, _a=yh, _b=yl+ ts*yh; *sh = _a + _b; _z = *sh - _a; *sl = _b - _z; };
    }
  else {

    { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&cahyh_h, &cahyh_l, cah, yh); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =cah, _v=yh; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&cahyh_h = _u*_v; *&cahyh_l = (((u1*v1-*&cahyh_h)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };
    {double _z, _a=sah, _b=cahyh_h; thi = _a + _b; _z = thi - _a; tlo = _b - _z; };

    ts = yh2 * (s3.d + yh2*(s5.d + yh2*s7.d));


    tc = yh2 * (c2.d + yh2*(c4.d + yh2*c6.d ));



    tlo = tc*sah + (ts*cahyh_h +(sal + (tlo + (cahyh_l + (cal*yh + cah*yl))))) ;
    {double _z, _a=thi, _b=tlo; *sh = _a + _b; _z = *sh - _a; *sl = _b - _z; };
  }
}


static void do_cos(double* ch, double* cl, double yh, double yl) {
  double yh2, ts, tc, thi, tlo, sahyh_h,sahyh_l;

  yh2 = yh*yh ;

  if(sah==0.0)
    {
    tc = yh2 * (c2.d + yh2*(c4.d + yh2*c6.d ));



      {double _z, _a=1., _b=tc; *ch = _a + _b; _z = *ch - _a; *cl = _b - _z; };
    }
  else {



  { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&sahyh_h, &sahyh_l, sah, yh); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =sah, _v=yh; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&sahyh_h = _u*_v; *&sahyh_l = (((u1*v1-*&sahyh_h)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };

  ts = yh2 * (s3.d + yh2*(s5.d + yh2*s7.d));


  tc = yh2 * (c2.d + yh2*(c4.d + yh2*(c6.d)));


  {double _z, _a=cah, _b=-sahyh_h; thi = _a + _b; _z = thi - _a; tlo = _b - _z; };
  tlo = tc*cah - (ts*sahyh_h - (cal + (tlo - (sahyh_l + (sal*yh + sah*yl)) ))) ;
  {double _z, _a=thi, _b=tlo; *ch = _a + _b; _z = *ch - _a; *cl = _b - _z; };
  }
}
# 143 "trigo_fast.c"
int static trig_range_reduction(double* pyh, double* pyl,
    double x, int absxhi,
    double (*scs_fun)(double) ) {
  printf ("Inside range reduction!\n");
  printf ("x=%.20e absxhi=%i\n", x,absxhi);
  printf ("pyh=%.20e, pyl=%.20e\n", *pyh,*pyl);
  printf ("XMAX_CODY_WAITE_3=%i\n",0x417921FB);
  printf ("INV_PIO256       =%i\n",81.48733086305041191366848684672735336164333861911370);
  printf ("RR_DD_MCH        =%.20e\n",-1.22718463030851293593670447990007232874631881713867e-02);
  int k;
  double kd;
  if (absxhi < 0x417921FB) {
    {db_number _t; _t.d = (x * 81.48733086305041191366848684672735336164333861911370 +6755399441055744.0); k = _t.i[0];};
    printf("k=%i\n", k);
    kd = (double) k;
    printf("kd=%.20e\n", kd);
    if(((k&127) == 0)) {
      printf("YES (k&127) == 0\n");


      double kch_h,kch_l, kcm_h,kcm_l, th, tl;




      kch_h = 0.0;
      kch_l = 0.0;

      printf("kch_h=%.20e kch_l=%.20e kd=%.20e\n\n",kch_h,kch_l,kd);
      { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&kch_h, &kch_l, kd, -1.22718463030851293593670447990007232874631881713867e-02); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =kd, _v=-1.22718463030851293593670447990007232874631881713867e-02; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&kch_h = _u*_v; *&kch_l = (((u1*v1-*&kch_h)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };
      printf("kch_h=%.20e kch_l=%.20e kd=%.20e\n",kch_h,kch_l,kd);

      printf("kcm_h=%.20e kcm_l=%.20e kd=%.20e\n\n",kch_h,kch_l,kd);
      { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&kcm_h, &kcm_l, kd, -4.78377655916934846552251574007186173681910986202180e-19); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =kd, _v=-4.78377655916934846552251574007186173681910986202180e-19; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&kcm_h = _u*_v; *&kcm_l = (((u1*v1-*&kcm_h)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };
      printf("kcm_h=%.20e kcm_l=%.20e kd=%.20e\n\n",kch_h,kch_l,kd);

      {double _z, _a=kch_l, _b=kcm_h; th = _a + _b; _z = th - _a; tl = _b - _z; } ;

      do {double r,s;r = ((x + kch_h))+(th);s = ((x + kch_h))-r+(th)+(tl)+((kcm_l - kd*-1.16983195692122643198711576336405625652558630950744e-35));*pyh = r+s;*pyl = r - (*pyh) + s;} while(0) ;
    }
    else {


      if (absxhi < 0x40E921FB) {

 {double _z, _a=(x - kd*1.22718463026103563606739044189453125000000000000000e-02), _b=(kd*-4.74773477070796269478059194651439932290289125393912e-13); *pyh = _a + _b; _z = *pyh - _a; *pyl = _b - _z; } ;
      }
     else

       {double _z, _a=(x - kd*1.22718438506126403808593750000000000000000000000000e-02) - kd*2.45247377961277379654347896575927734375000000000000e-09, _b=kd*1.29015588847082744546238189049062829921108970857024e-15; *pyh = _a + _b; if (((((x - kd*1.22718438506126403808593750000000000000000000000000e-02) - kd*2.45247377961277379654347896575927734375000000000000e-09)>0) ? ((x - kd*1.22718438506126403808593750000000000000000000000000e-02) - kd*2.45247377961277379654347896575927734375000000000000e-09) : (-((x - kd*1.22718438506126403808593750000000000000000000000000e-02) - kd*2.45247377961277379654347896575927734375000000000000e-09))) > (((kd*1.29015588847082744546238189049062829921108970857024e-15)>0) ? (kd*1.29015588847082744546238189049062829921108970857024e-15) : (-(kd*1.29015588847082744546238189049062829921108970857024e-15)))){ _z = *pyh - _a; *pyl = _b - _z; }else { _z = *pyh - _b; *pyl = _a - _z;}};
    }
  }
  else if ( absxhi < 0x42B921FB ) {
    long long int kl;
    double kch_h,kch_l, kcm_h,kcm_l, th, tl;
    { db_number _t; _t.d = (x*81.48733086305041191366848684672735336164333861911370 +6755399441055744.0); if (x*81.48733086305041191366848684672735336164333861911370 >= 0) kl = _t.l & 0x0007FFFFFFFFFFFFLL; else kl = (_t.l & 0x0007FFFFFFFFFFFFLL) | (0xFFF8000000000000LL); };
    kd=(double)kl;
    k = (int) kl;



    if((k&127) == 0) {
      scs_t X, Y,Yh,Yl;
      scs_set_d(X, x*128.0);
      k= rem_pio2_scs(Y, X);

      scs_get_d(pyh, Y);
      scs_set_d(Yh, *pyh);
      scs_sub(Yl, Y,Yh);
      scs_get_d(pyl, Yl);
      *pyh = *pyh * (1./128.) ;
      *pyl = *pyl * (1./128.) ;
    }
    else {

      { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&kch_h, &kch_l, kd, -1.22718463030851293593670447990007232874631881713867e-02); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =kd, _v=-1.22718463030851293593670447990007232874631881713867e-02; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&kch_h = _u*_v; *&kch_l = (((u1*v1-*&kch_h)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };
      { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&kcm_h, &kcm_l, kd, -4.78377655916934846552251574007186173681910986202180e-19); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =kd, _v=-4.78377655916934846552251574007186173681910986202180e-19; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&kcm_h = _u*_v; *&kcm_l = (((u1*v1-*&kcm_h)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };
      {double _z, _a=kch_l, _b=kcm_h; th = _a + _b; _z = th - _a; tl = _b - _z; } ;

      do {double r,s;r = ((x + kch_h))+(th);s = ((x + kch_h))-r+(th)+(tl)+((kcm_l - kd*-1.16983195692122643198711576336405625652558630950744e-35));*pyh = r+s;*pyl = r - (*pyh) + s;} while(0) ;
    }
  }
  else {
    scs_t X, Y,Yh,Yl;
    if (absxhi > 0x7F700000)
      return (*scs_fun)(x);
    else {
      scs_set_d(X, x*128.0);
      k= rem_pio2_scs(Y, X);

      scs_get_d(pyh, Y);
      scs_set_d(Yh, *pyh);
      scs_sub(Yl, Y,Yh);
      scs_get_d(pyl, Yl);
      *pyh = *pyh * (1./128.) ;
      *pyl = *pyl * (1./128.) ;
    }
  }
  printf("\n");
  return k;
}
# 258 "trigo_fast.c"
double sin_rn(double x){
  double sh, sl, yh, yl, ts;
  int quadrant;
  int k;
  int absxhi;
  db_number xx;





  xx.d=x;
  absxhi = xx.i[1] & 0x7fffffff;

  if (absxhi < 0x3FB00000){
    if (absxhi <0x3E500000)
      return x;

    yh=x*x;
    ts = yh * (s3.d + yh*(s5.d + yh*(s7.d + yh*(s9.d))));
    {double _z, _a=x, _b=ts*x; sh = _a + _b; _z = sh - _a; sl = _b - _z; };
    if(sh == (sh + (sl * 1.005973))){
      return sh;
    }else{
      return scs_sin_rn(x);
    }
  }


  k=trig_range_reduction(&yh, &yl, x, absxhi, &scs_sin_rn);




  quadrant = (k>>7)&3;
  k=(k&127)<<2;

  if(k<=(64<<2)) {
    sah=sincosTable[k+0].d;
    sal=sincosTable[k+1].d;
    cah=sincosTable[k+2].d;
    cal=sincosTable[k+3].d;
  } else {
    int k1=(128<<2) - k;
    cah=sincosTable[k1+0].d;
    cal=sincosTable[k1+1].d;
    sah=sincosTable[k1+2].d;
    sal=sincosTable[k1+3].d;
  }
# 321 "trigo_fast.c"
  if (quadrant&1)
    do_cos(&sh, &sl, yh,yl);
  else
    do_sin(&sh, &sl, yh,yl);


  if(quadrant>=2) {
    sh = -sh;
    sl = -sl;
  }

  if(sh == (sh + (sl * 1.0004))){
     return sh;
  }else{
    return scs_sin_rn(x);
  }

}


double sin_rd(double x){
return scs_sin_rd(x);
}


double sin_ru(double x){
return scs_sin_ru(x);
}


double sin_rz(double x){
return scs_sin_rz(x);
}






double cos_rn(double x){
  double ch, cl, yh, yl, tc;
  int quadrant;
  int k;
  int absxhi;
  db_number xx;





  xx.d=x;
  absxhi = xx.i[1] & 0x7fffffff;

  if (absxhi < 0x3FA00000){
    if (absxhi <0x3E400000)
      return 1.;

    yh=x*x;
    tc = yh * (c2.d + yh*(c4.d + yh*(c6.d + yh*(c8.d))));
    {double _z, _a=1, _b=tc; ch = _a + _b; _z = ch - _a; cl = _b - _z; };
    if(ch == (ch + (cl * 1.002942))){
      return ch;
    }else{
      return scs_cos_rn(x);
    }
  }


  printf ("JUST BEFORE RANGEREDUCE!\n");
  printf ("x=%.20e absxhi=%i\n", x,absxhi);

  printf ("yh=%.20e, yl=%.20e\n", yh,yl);
  printf ("\n");

  k=trig_range_reduction(&yh, &yl, x, absxhi, &scs_cos_rn);

  printf ("JUST AFTER RANGEREDUCE!\n");
  printf ("x=%.20e absxhi=%i\n", x,absxhi);
  printf ("yh=%.20e, yl=%.20e\n", yh,yl);
  printf ("\n");




  quadrant = (k>>7)&3;
  k=(k&127)<<2;

  if(k<=(64<<2)) {
    sah=sincosTable[k+0].d;
    sal=sincosTable[k+1].d;
    cah=sincosTable[k+2].d;
    cal=sincosTable[k+3].d;
  } else {
    int k1=(128<<2) - k;
    cah=sincosTable[k1+0].d;
    cal=sincosTable[k1+1].d;
    sah=sincosTable[k1+2].d;
    sal=sincosTable[k1+3].d;
  }
# 430 "trigo_fast.c"
  if (quadrant&1)
    do_sin(&ch, &cl, yh,yl);
  else
    do_cos(&ch, &cl, yh,yl);


  if((quadrant == 1)||(quadrant == 2)) {
    ch = -ch;
    cl = -cl;
  }

  if(ch == (ch + (cl * 1.0004))){
     return ch;
  }else{
    return scs_cos_rn(x);
  }

}



double cos_rd(double x){
return scs_cos_rd(x);
}


double cos_ru(double x){
return scs_cos_ru(x);
}


double cos_rz(double x){
return scs_cos_rz(x);
}






double tan_rn(double x){
  double reshi, reslo, sh, sl, ch, cl, kd, yh, yl;
  db_number y;
  int k, quadrant;


  int absxhi;
  db_number xx;





  xx.d=x;
  absxhi = xx.i[1] & 0x7fffffff;


  y.d = x;
    if((y.i[1]&0x7FFFFFFF) < 0x3E4BEAD3){



      return x;
    }




  k=trig_range_reduction(&yh, &yl, x, absxhi, &scs_cos_rn);

  quadrant = (k>>7)&3;
  kd = (double) k;
  k=(k&127)<<2;

  switch (quadrant){
   case(0):



   if(k<=(64<<2)) {
    sah=sincosTable[k].d;
    sal=sincosTable[k+1].d;
    cah=sincosTable[k+2].d;
    cal=sincosTable[k+3].d;
  } else {
    int k1=(128<<2) - k;
    cah=sincosTable[k1].d;
    cal=sincosTable[k1+1].d;
    sah=sincosTable[k1+2].d;
    sal=sincosTable[k1+3].d;
  }
     break;
   case(1):



     if(k<=(64<<2)) {
    cah=-sincosTable[k].d;
    cal=-sincosTable[k+1].d;
    sah=sincosTable[k+2].d;
    sal=sincosTable[k+3].d;
  } else {
    int k1=(128<<2) - k;
    sah=sincosTable[k1].d;
    sal=sincosTable[k1+1].d;
    cah=-sincosTable[k1+2].d;
    cal=-sincosTable[k1+3].d;
  }
     break;
   case(2):
      if(k<=(64<<2)) {
    sah=-sincosTable[k].d;
    sal=-sincosTable[k+1].d;
    cah=-sincosTable[k+2].d;
    cal=-sincosTable[k+3].d;
  } else {
    int k1=(128<<2) - k;
    cah=-sincosTable[k1].d;
    cal=-sincosTable[k1+1].d;
    sah=-sincosTable[k1+2].d;
    sal=-sincosTable[k1+3].d;
  }
   break;
      case(3):
     if(k<=(64<<2)) {
    cah=sincosTable[k].d ;
    cal=sincosTable[k+1].d;
    sah=-sincosTable[k+2].d;
    sal=-sincosTable[k+3].d;
  } else {
    int k1=(128<<2) - k;
    sah=-sincosTable[k1].d ;
    sal=-sincosTable[k1+1].d;
    cah=sincosTable[k1+2].d;
    cal=sincosTable[k1+3].d;
  }
     break;
   default:
     fprintf(stderr,"ERREUR: %d is not a valid value in sn_tan \n", quadrant);
     return 0.0;
  }





  do_sin(&sh, &sl, yh, yl);
  do_cos(&ch, &cl, yh, yl);


   { double _ch,_cl,_uh,_ul; _ch=(sh)/(ch); { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&_uh, &_ul, _ch, (ch)); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =_ch, _v=(ch); printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&_uh = _u*_v; *&_ul = (((u1*v1-*&_uh)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); }; _cl=(((((sh)-_uh)-_ul)+(sl))-_ch*(cl))/(ch); *&reshi=_ch+_cl; *&reslo=(_ch-(*&reshi))+_cl; };



  if(reshi == (reshi + (reslo * 1.0004))){
    return reshi;
  }else{
    return scs_tan_rn(x);
  }

}
# 599 "trigo_fast.c"
double tan_rd(double x){
return scs_tan_rd(x);
 }







double tan_ru(double x){
return scs_tan_ru(x);
 }







double tan_rz(double x){
return scs_tan_rz(x);
 }
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c tan.c
# 1 "tan.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "tan.c"
# 9 "tan.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 10 "tan.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 11 "tan.c" 2
# 1 "tan.h" 1
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 2 "tan.h" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 3 "tan.h" 2

static const scs cste_poly[3]=

{{{0x03743743, 0x1d0dd0dd, 0x03743743, 0x1d0dd0dd,
0x03743743, 0x1d0dd0dd, 0x03743743, 0x1d0dd0dd},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x08888888, 0x22222222, 0x08888888, 0x22222222,
0x08888888, 0x22222222, 0x08888888, 0x22222222},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x15555555, 0x15555555, 0x15555555, 0x15555555,
0x15555555, 0x15555555, 0x15555555, 0x15555555},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
};




static const scs constant_poly[34]=

{{{0x001c3711, 0x0a6636b6, 0x08846c6b, 0x0b9d7fec,
0x29a1108f, 0x20360652, 0x35452ed2, 0x36fb612a},
{{0x00000000 ,0x3ff00000}}, -2, 1 }
,

{{0x0074b9f5, 0x03c966c5, 0x316eb000, 0x17eed5d5,
0x2a8f15c7, 0x0b819a5b, 0x0e283fee, 0x1fa185f4},
{{0x00000000 ,0x3ff00000}}, -2, -1 }
,

{{0x012b6111, 0x0a48e24c, 0x3b1f8f6f, 0x1572c64e,
0x22390338, 0x2cbdc2c2, 0x2cee61bf, 0x0558a950},
{{0x00000000 ,0x3ff00000}}, -2, 1 }
,

{{0x01b58cd4, 0x01a69a24, 0x0f0b1c22, 0x16f356c0,
0x3d9c5416, 0x0b95bd25, 0x393d5492, 0x1f3e8d8a},
{{0x00000000 ,0x3ff00000}}, -2, -1 }
,

{{0x02589ba9, 0x3107062c, 0x1f1cd369, 0x1cc300e5,
0x2cfae113, 0x11c3bda5, 0x1ca26b21, 0x26a468a3},
{{0x00000000 ,0x3ff00000}}, -2, 1 }
,

{{0x0154b066, 0x27b79430, 0x32c3d796, 0x0a76ca34,
0x2aab74bf, 0x0d441ecf, 0x289775ac, 0x356dfab9},
{{0x00000000 ,0x3ff00000}}, -2, -1 }
,

{{0x02cff79c, 0x22cc1d06, 0x10f0b3f3, 0x3929eb6a,
0x2fef33c1, 0x0cf34274, 0x112b6551, 0x0865eb5d},
{{0x00000000 ,0x3ff00000}}, -2, 1 }
,

{{0x02b61ef7, 0x1615e1b2, 0x2af4321f, 0x3306fbfb,
0x219f1375, 0x3dfeb879, 0x02802c09, 0x103f1ad3},
{{0x00000000 ,0x3ff00000}}, -2, 1 }
,

{{0x091bcc96, 0x031df2b1, 0x26d36518, 0x14dcdda2,
0x0aa2e379, 0x1ad373c3, 0x1df22468, 0x3aff23bf},
{{0x00000000 ,0x3ff00000}}, -2, 1 }
,

{{0x15518b50, 0x1778b3d1, 0x02edef58, 0x0946f1bd,
0x1ad740a0, 0x2727ea7c, 0x0d6f8ff6, 0x28b03ce4},
{{0x00000000 ,0x3ff00000}}, -2, 1 }
,

{{0x3511476d, 0x3a6a043c, 0x02273600, 0x25b2193a,
0x0d4fa0e5, 0x23ef4ea7, 0x046a4ce0, 0x20a0c5b1},
{{0x00000000 ,0x3ff00000}}, -2, 1 }
,

{{0x00000002, 0x02c77760, 0x3cd4d0ec, 0x1f69a101,
0x29f87132, 0x059e717d, 0x0138d55e, 0x24b885cb},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00000005, 0x02bb3727, 0x05833615, 0x308e90f6,
0x105e98e0, 0x23811a32, 0x348f6c06, 0x2a6e420c},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0000000c, 0x1c4bc14e, 0x39b2b9e5, 0x0c03ce97,
0x2dd47cfc, 0x291833ea, 0x1e9e060c, 0x0ca14238},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0000001e, 0x2cc8af90, 0x1522a1fb, 0x27ef6ebb,
0x1ccb6d95, 0x38bcb073, 0x2b193c72, 0x347b55c4},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0000004b, 0x2fe8d966, 0x3994ea3c, 0x277743e6,
0x048ddcaf, 0x3c7238cb, 0x33360cfd, 0x0286b083},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x000000ba, 0x39bccb07, 0x26da1385, 0x3bca2a63,
0x04e9a30c, 0x39074670, 0x108e16f7, 0x2dc4328b},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x000001cd, 0x0a677924, 0x0f7da25e, 0x194896cf,
0x21f0ad05, 0x28b7f59a, 0x2eb4664d, 0x367d7a84},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00000471, 0x37df95c2, 0x1e732119, 0x2f5ee9fd,
0x30cd0e84, 0x362a1be3, 0x27dd27e0, 0x2539a7ec},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00000af7, 0x25b48e9c, 0x29e2e604, 0x040ae6f5,
0x2924ab30, 0x12a6a4d0, 0x1a327d65, 0x3de9f6d9},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00001b0f, 0x1cb4fb89, 0x0ed5f2b2, 0x0fc386a5,
0x34bec2b5, 0x3e84224c, 0x0fd28c38, 0x2f024dff},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x000042c4, 0x32d39a60, 0x140fcf93, 0x1e013323,
0x25bc5fe8, 0x284e6fe7, 0x0185aa5a, 0x0e937e51},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0000a4be, 0x31dd44a4, 0x2c9a2186, 0x34b10dfc,
0x2b9692a8, 0x2d61a81e, 0x1fc08230, 0x348c1d11},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0001967e, 0x062bf2be, 0x2c8a25e8, 0x1e4d3882,
0x2e2c92ba, 0x1e3988cf, 0x20e35b9b, 0x0b83fe85},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0003eafa, 0x3b9a68b3, 0x08435577, 0x367c784b,
0x02bedebd, 0x10cebefb, 0x0e842ff1, 0x29c1434c},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0009aac1, 0x09006ce8, 0x22911b2a, 0x1dd4bcbe,
0x03c350a0, 0x03291917, 0x394eb2c0, 0x24b6dfb5},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0017da36, 0x114add78, 0x2b6a1d93, 0x17fc46c9,
0x3bba22d1, 0x398c9d17, 0x19ac22f3, 0x207f379c},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x003ada7a, 0x070abeef, 0x36bf981b, 0x12e3b4c5,
0x2c6f684f, 0x2671cd76, 0x178ab686, 0x0d9af269},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0091371a, 0x2bcd8479, 0x07ada8e1, 0x32e9f8a6,
0x2095d28b, 0x360391b7, 0x24681998, 0x0543c654},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x01664f48, 0x20b043e7, 0x332d6bba, 0x12776056,
0x1878308f, 0x29979b47, 0x0448638b, 0x38be5633},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x03743743, 0x1d0dd0dd, 0x03743743, 0x1d0dd0dd,
0x040561f0, 0x251b7ca6, 0x093f3bec, 0x24c62fe3},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x08888888, 0x22222222, 0x08888888, 0x22222222,
0x08885f6e, 0x231032e4, 0x3dd964f9, 0x03356a6d},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x15555555, 0x15555555, 0x15555555, 0x15555555,
0x15555557, 0x11542814, 0x197fcecd, 0x313a1283},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00000001, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
};
# 12 "tan.c" 2
# 1 "coefpi2.h" 1
# 11 "coefpi2.h"
static const int two_over_pi[]=
  {0x28be60db, 0x24e44152, 0x27f09d5f, 0x11f534dd,
   0x3036d8a5, 0x1993c439, 0x0107f945, 0x23abdebb,
   0x31586dc9, 0x06e3a424, 0x374b8019, 0x092eea09,
   0x3464873f, 0x21deb1cb, 0x04a69cfb, 0x288235f5,
   0x0baed121, 0x0e99c702, 0x1ad17df9, 0x013991d6,
   0x0e60d4ce, 0x1f49c845, 0x3e2ef7e4, 0x283b1ff8,
   0x25fff781, 0x1980fef2, 0x3c462d68, 0x0a6d1f6d,
   0x0d9fb3c9, 0x3cb09b74, 0x3d18fd9a, 0x1e5fea2d,
   0x1d49eeb1, 0x3ebe5f17, 0x2cf41ce7, 0x378a5292,
   0x3a9afed7, 0x3b11f8d5, 0x3421580c, 0x3046fc7b,
   0x1aeafc33, 0x3bc209af, 0x10d876a7, 0x2391615e,
   0x3986c219, 0x199855f1, 0x1281a102, 0x0dffd880};







static const scs Pio2=
  {{0x00000001, 0x2487ed51, 0x042d1846, 0x26263314,
    0x1701b839, 0x28948127, 0x01114cf9, 0x23a0105d},
    {{0x00000000 ,0x3ff00000}}, 0, 1 };






static const scs Pio4=

{{0x3243f6a8, 0x22168c23, 0x1313198a, 0x0b80dc1c,
0x344a4093, 0x2088a67c, 0x31d0082e, 0x3ea63b13},
{{0x00000000 ,0x3ff00000}}, -1, 1 };
# 13 "tan.c" 2

void tan(scs_ptr);
void cotan(scs_ptr);
int rem_pio2_scs(scs_ptr, scs_ptr);
# 49 "tan.c"
void scs_tan(scs_ptr x_scs){
  scs_t res_scs;
  scs_t x2;
  int i;

scs_square(x2, x_scs);



      if(x_scs->exception.i[1] < 0x5f76b88){
        scs_mul(res_scs, (scs_ptr)&cste_poly[0], x2);
 scs_add(res_scs, (scs_ptr)&cste_poly[1], res_scs);
 scs_mul(res_scs, res_scs, x2);
 scs_add(res_scs, (scs_ptr)&cste_poly[2], res_scs);
 scs_mul(res_scs, res_scs, x2);
 scs_mul(res_scs, x_scs, res_scs);
 scs_add(x_scs, x_scs, res_scs);
 return;
    }



    else {
    scs_mul(res_scs, (scs_ptr)&constant_poly[0], x2);

    for(i=1; i<33; i++){
 scs_add(res_scs, (scs_ptr)&constant_poly[i], res_scs);
 scs_mul(res_scs, res_scs, x2);
    }

  scs_mul(res_scs, res_scs, x_scs);
  scs_add(x_scs, x_scs, res_scs);


  return;
  }
}
# 94 "tan.c"
double scs_tan_rn(double x){
  scs_t sc1;
  scs_t sc2;
  double resd;
  int N;





  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000001;

    switch (N){
    case 0:
 scs_tan(sc2);
 scs_get_d(&resd, sc2);
 return resd;
    break;
    case 1:
 scs_tan(sc2);
 scs_inv(sc2, sc2);
 scs_get_d(&resd, sc2);
 return -(resd);
 break;
    default:
 fprintf(stderr,"ERREUR: %d is not a valid value in sn_tan \n", N);
 return 0.0;
    }
}







double scs_tan_rd(double x){
  scs_t sc1, sc2;
  double resd;
  int N;

  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000001;

    switch (N){
      case 0:
 scs_tan(sc2);
 scs_get_d_minf(&resd, sc2);
 return resd;
    break;
      case 1:
 scs_tan(sc2);
 scs_inv(sc2, sc2);
 scs_get_d_pinf(&resd, sc2);
 return -(resd);
 break;
    default:
 fprintf(stderr,"ERREUR: %d is not a valid value in tan_rd \n", N);
 exit(1);
    }
  return resd;
}







double scs_tan_ru(double x){
  scs_t sc1, sc2;
  double resd;
  int N;

  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000001;

    switch (N){
    case 0:
 scs_tan(sc2);
 scs_get_d_pinf(&resd, sc2);
 return resd;
    break;
    case 1:
 scs_tan(sc2);
 scs_inv(sc2, sc2);
 scs_get_d_minf(&resd, sc2);
 return -(resd);
 break;
    default:
    fprintf(stderr,"ERREUR: %d is not a valid value in su_tan \n", N);
    exit(1);
    }
  return resd;
}






double scs_tan_rz(double x){
  scs_t sc1, sc2;
  double resd;
  int N;

  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000001;

    switch (N){
    case 0:
 scs_tan(sc2);
 scs_get_d_zero(&resd, sc2);
 return resd;
    break;
    case 1:
 scs_tan(sc2);
 scs_inv(sc2, sc2);
 scs_get_d_zero(&resd, sc2);
 return -(resd);
 break;
    default:
    fprintf(stderr,"ERREUR: %d is not a valid value in su_tan \n", N);
    exit(1);
    }
  return resd;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c sine.c
# 1 "sine.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "sine.c"
# 9 "sine.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 10 "sine.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 11 "sine.c" 2
# 1 "sine.h" 1
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 2 "sine.h" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 3 "sine.h" 2

static const scs constant_poly[16]=

{{{0x09bed3db, 0x281320a5, 0x17cafa6b, 0x233fc2aa,
   0x0bb37b3e, 0x2d3bc772, 0x24241f7e, 0x1799acb2},
   {{0x00000000 ,0x3ff00000}}, -5, 1},

 {{0x000000a1, 0x29803c82, 0x1e7c052c, 0x11d03efa,
   0x2aabe64f, 0x393aad1d, 0x051dfe67, 0x1004a1ae},
  {{0x00000000 ,0x3ff00000}}, -4, -1},

 {{0x00024b3f, 0x0c1a06a0, 0x25f7b477, 0x1b855ea1,
   0x1e65fd11, 0x2c2dc17b, 0x10e439b2, 0x3b45213b},
   {{0x00000000 ,0x3ff00000}}, -4, 1},

 {{0x0746ac70, 0x2d83ea09, 0x2c0e0531, 0x336b3616,
   0x3b7d9461, 0x1715777e, 0x125784a1, 0x27186b7d},
   {{0x00000000 ,0x3ff00000}}, -4, -1},

 {{0x0000004f, 0x33ccdd16, 0x17af9bfe, 0x287a58b6,
   0x0e1934ec, 0x1a546597, 0x113b325e, 0x0e487ff4},
   {{0x00000000 ,0x3ff00000}}, -3, 1},

 {{0x0000bb0d, 0x28262c70, 0x0ccaabac, 0x0e2b9005,
   0x3a8fbf8f, 0x0c824f6c, 0x35a6c037, 0x323f0e58},
   {{0x00000000 ,0x3ff00000}}, -3, -1},

 {{0x0171b8ef, 0x1b73d5c6, 0x0be08e09, 0x30cc1272,
   0x1e07089e, 0x3feda742, 0x021ee135, 0x01f1e030},
   {{0x00000000 ,0x3ff00000}}, -3, 1},

 {{0x00000009, 0x1e9368d0, 0x0a0ab926, 0x1438fbe9,
   0x29aa3113, 0x2f1177b5, 0x0a6a496d, 0x3a2972d5},
   {{0x00000000 ,0x3ff00000}}, -2, -1},

 {{0x00000ca9, 0x18ee0615, 0x2a535930, 0x0a31e606,
   0x22cc5fc0, 0x1a3c24a6, 0x2361ddfa, 0x13f2d513},
   {{0x00000000 ,0x3ff00000}}, -2, 1},

 {{0x000d73f9, 0x3ce67703, 0x388ec32b, 0x161da690,
   0x29e432c5, 0x1ecb50d8, 0x363872aa, 0x26abc23a},
   {{0x00000000 ,0x3ff00000}}, -2, -1},

 {{0x0b092309, 0x350da12f, 0x251c198e, 0x2475e836,
   0x0095238d, 0x29cf57b4, 0x0ec2d424, 0x09450ac8},
   {{0x00000000 ,0x3ff00000}}, -2, 1},

 {{0x0000001a, 0x399159fd, 0x144e38fe, 0x1d1f92e0,
   0x37dc7187, 0x02086bd8, 0x2e9be8fb, 0x038d9e58},
   {{0x00000000 ,0x3ff00000}}, -1, -1},

 {{0x00000b8e, 0x3c74aad8, 0x399c7d56, 0x03911ca0,
   0x00b8ef19, 0x077b454c, 0x257db8d4, 0x08cc8213},
   {{0x00000000 ,0x3ff00000}}, -1, 1},

 {{0x00034034, 0x00d00d00, 0x34034034, 0x00d00d00,
   0x34034033, 0x3ac10fa9, 0x3038fd7b, 0x33e66168},
   {{0x00000000 ,0x3ff00000}}, -1, -1},

 {{0x00888888, 0x22222222, 0x08888888, 0x22222222,
   0x08888888, 0x2213cd72, 0x2d786b72, 0x240b2353},
   {{0x00000000 ,0x3ff00000}}, -1, 1},

 {{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
   0x2aaaaaaa, 0x2aaaa50a, 0x004d6b27, 0x2c149624},
   {{0x00000000 ,0x3ff00000}}, -1, -1 }};
# 12 "sine.c" 2

void cosine(scs_ptr);
void sine(scs_ptr);
# 31 "sine.c"
void sine(scs_ptr x){
  scs_t res_scs;
  scs_t x2;
  int i;


  if(x->index < -3){
    return;
    }




  scs_square(x2, x);
  scs_mul(res_scs, (scs_ptr)&constant_poly[0], x2);

  for(i=1; i<16; i++){
    scs_add(res_scs, (scs_ptr)&constant_poly[i], res_scs);
    scs_mul(res_scs, res_scs, x2);
  }
  scs_mul(res_scs, res_scs, x);
  scs_add(x, x, res_scs);

  return;
}
# 64 "sine.c"
double scs_sin_rn(double x){
  scs_t sc1, sc2;
  double resd;
  int N;



 crlibm_second_step_taken++;



  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000003;
  switch (N){
  case 0:
    sine(sc2);
    scs_get_d(&resd, sc2);
    return resd;
  case 1:
    cosine(sc2);
    scs_get_d(&resd, sc2);
    return resd;
  case 2:
    sine(sc2);
    scs_get_d(&resd, sc2);
    return -resd;
  case 3:
    cosine(sc2);
    scs_get_d(&resd, sc2);
    return -resd;
    default:
    fprintf(stderr,"ERREUR: %d is not a valid value in s_sine \n", N);
    return 0.0;
  }
}
# 109 "sine.c"
double scs_sin_rd(double x){
  scs_t sc1, sc2;
  double resd;
  int N;

  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000003;
  switch (N){
  case 0:
    sine(sc2);
    scs_get_d_minf(&resd, sc2);
    return resd;
  case 1:
    cosine(sc2);
    scs_get_d_minf(&resd, sc2);
    return resd;
  case 2:
    sine(sc2);
    scs_get_d_pinf(&resd, sc2);
    return -resd;
  case 3:
    cosine(sc2);
    scs_get_d_pinf(&resd, sc2);
    return -resd;
  default:
    fprintf(stderr,"ERREUR: %d is not a valid value in s_sine \n", N);
    exit(1);
  }
  return resd;
}
# 148 "sine.c"
double scs_sin_ru(double x){
  scs_t sc1, sc2;
  double resd;
  int N;

  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000003;
  switch (N){
  case 0:
    sine(sc2);
    scs_get_d_pinf(&resd, sc2);
    return resd;
  case 1:
    cosine(sc2);
    scs_get_d_pinf(&resd, sc2);
    return resd;
   case 2:
    sine(sc2);
    scs_get_d_minf(&resd, sc2);
    return -resd;
  case 3:
    cosine(sc2);
    scs_get_d_minf(&resd, sc2);
    return -resd;
  default:
    fprintf(stderr,"ERREUR: %d is not a valid value in s_sine \n", N);
    exit(1);
  }
  return resd;
}







double scs_sin_rz(double x){
  scs_t sc1, sc2;
  double resd;
  int N;

  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000003;
  switch (N){
  case 0:
    sine(sc2);
    scs_get_d_zero(&resd, sc2);
    return resd;
  case 1:
    cosine(sc2);
    scs_get_d_zero(&resd, sc2);
    return resd;
   case 2:
    sine(sc2);
    scs_get_d_zero(&resd, sc2);
    return -resd;
  case 3:
    cosine(sc2);
    scs_get_d_zero(&resd, sc2);
    return -resd;
  default:
    fprintf(stderr,"ERREUR: %d is not a valid value in s_sine \n", N);
    exit(1);
  }
  return resd;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c cosine.c
# 1 "cosine.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "cosine.c"
# 9 "cosine.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 10 "cosine.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 11 "cosine.c" 2
# 1 "cosine.h" 1
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 2 "cosine.h" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 3 "cosine.h" 2

static const scs constt_poly[16]=

{{{0x00000005, 0x017ef628, 0x1fcf2f27, 0x21efc776,
   0x1dce5f0f, 0x0fc224df, 0x2ed4b3ec, 0x3fec174d},
   {{0x00000000 ,0x3ff00000}}, -4, 1 },

{{0x00001393, 0x05f14bfa, 0x033983b0, 0x3de3a7e6,
  0x1f30bc8b, 0x3b9e7814, 0x19bbb925, 0x0bec72a6},
  {{0x00000000 ,0x3ff00000}}, -4, -1 },

{{0x00428628, 0x1d72c67c, 0x1667d144, 0x31cf641e,
  0x38e1e887, 0x3aba3c00, 0x0598e066, 0x2307b76f},
  {{0x00000000 ,0x3ff00000}}, -4, 1 },

{{0x00000003, 0x04742fe3, 0x0aa2484b, 0x059eb4ab,
  0x2545fd85, 0x255bb094, 0x142d433b, 0x3d670e33},
  {{0x00000000 ,0x3ff00000}}, -3, -1 },

{{0x000007cb, 0x0f01972f, 0x0ddcc0cd, 0x378c82d8,
  0x14ca3184, 0x260fd2b7, 0x15487846, 0x02b72746},
  {{0x00000000 ,0x3ff00000}}, -3, 1 },

{{0x0010ce39, 0x1b6dfe14, 0x249ce0a9, 0x2843efe4,
  0x308ca48c, 0x3949cc57, 0x096293c4, 0x0e90dfa0},
  {{0x00000000 ,0x3ff00000}}, -3, -1 },

{{0x1e542ba4, 0x00808941, 0x38a06eda, 0x25278058,
  0x12f0b510, 0x14d5dfe4, 0x22468ce3, 0x09b28b4a},
  {{0x00000000 ,0x3ff00000}}, -3, 1 },

{{0x000000b4, 0x04f0c772, 0x3ecbbdd7, 0x3ff204ab,
  0x28a8c0dd, 0x0d06391f, 0x37b3384d, 0x2b430750},
  {{0x00000000 ,0x3ff00000}}, -2, -1 },

{{0x0000d73f, 0x27ce6770, 0x0f88ec32, 0x2d3da95f,
  0x0840dc61, 0x0af6cbd2, 0x3ae477d9, 0x2e1e8577},
  {{0x00000000 ,0x3ff00000}}, -2, 1 },

{{0x00c9cba5, 0x1180f93a, 0x105d6f8a, 0x0bb96676,
  0x28aadfab, 0x1b4554c2, 0x2d545b14, 0x22023f58},
  {{0x00000000 ,0x3ff00000}}, -2, -1 },

{{0x00000002, 0x0f76c77f, 0x31b12f6a, 0x226d4c3d,
  0x19fc6099, 0x291404d5, 0x2c683dfa, 0x3e6e2b57},
  {{0x00000000 ,0x3ff00000}}, -1, 1 },

{{0x00000127, 0x393edde2, 0x1f5c72ef, 0x005b4fa9,
  0x2678d846, 0x2e6bdefa, 0x00a7a84d, 0x2882f893},
  {{0x00000000 ,0x3ff00000}}, -1, -1 },

{{0x00006806, 0x201a01a0, 0x06806806, 0x201a01a0,
  0x06806778, 0x32b6fa73, 0x283c811f, 0x15b70b72},
  {{0x00000000 ,0x3ff00000}}, -1, 1 },

{{0x0016c16c, 0x05b05b05, 0x2c16c16c, 0x05b05b05,
  0x2c16c168, 0x31b2af2f, 0x13e714d0, 0x030316f3},
  {{0x00000000 ,0x3ff00000}}, -1, -1 },

{{0x02aaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
  0x2aaaaaaa, 0x28b53a3d, 0x125d1bf4, 0x1fe52343},
  {{0x00000000 ,0x3ff00000}}, -1, 1 },

{{0x1fffffff, 0x3fffffff, 0x3fffffff, 0x3fffffff,
  0x3fffffff, 0x3fff3b16, 0x365e6ced, 0x1060300e},
  {{0x00000000 ,0x3ff00000}}, -1, -1 }
};
# 12 "cosine.c" 2

void cosine(scs_ptr);
void sine(scs_ptr);
# 32 "cosine.c"
void cosine(scs_ptr x){
  scs_t res_scs;
  scs_t x2;
  int i;


  if(x->index < -3){
    scs_sub(x, (scs_ptr)(&scs_one),x);
    return;
    }



  scs_square(x2, x);
  scs_mul(res_scs, (scs_ptr)&constt_poly[0], x2);
  for(i=1; i<16; i++){
    scs_add(res_scs, (scs_ptr)&constt_poly[i], res_scs);
    scs_mul(res_scs, res_scs, x2);
  }
  scs_add(x, res_scs, (scs_ptr)(&scs_one));

  return ;
}
# 64 "cosine.c"
double scs_cos_rn(double x){
  scs_t sc1, sc2;
  double resd;
  int N;

 crlibm_second_step_taken++;


  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000003;
  switch (N){
  case 0:
    cosine(sc2);
    scs_get_d(&resd, sc2);
    return resd;
  case 1:
    sine(sc2);
    scs_get_d(&resd, sc2);
    return -resd;
  case 2:
    cosine(sc2);
    scs_get_d(&resd, sc2);
    return -resd;
  case 3:
    sine(sc2);
    scs_get_d(&resd, sc2);
    return resd;
  default:
    fprintf(stderr,"ERREUR: %d is not a valid value in s_cos \n", N);
    return 0.0;
  }

}







double scs_cos_rd(double x){
  scs_t sc1, sc2;
  double resd;
  int N;

 crlibm_second_step_taken++;


  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000003;
  switch (N){
  case 0:
    cosine(sc2);
    scs_get_d_minf(&resd, sc2);
    return resd;
  case 1:
    sine(sc2);
    scs_get_d_pinf(&resd, sc2);
    return -resd;
  case 2:
    cosine(sc2);
    scs_get_d_pinf(&resd, sc2);
    return -resd;
  case 3:
    sine(sc2);
    scs_get_d_minf(&resd, sc2);
    return resd;
  default:
    fprintf(stderr,"ERREUR: %d is not a valid value in s_cos \n", N);
    exit(1);
  }
  return resd;
}







double scs_cos_ru(double x){
  scs_t sc1, sc2;
  double resd;
  int N;

 crlibm_second_step_taken++;


  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000003;
  switch (N){
  case 0:
    cosine(sc2);
    scs_get_d_pinf(&resd, sc2);
    return resd;
    break;
  case 1:
    sine(sc2);
    scs_get_d_minf(&resd, sc2);
    return -resd;
  case 2:
    cosine(sc2);
    scs_get_d_minf(&resd, sc2);
    return -resd;
  case 3:
    sine(sc2);
    scs_get_d_pinf(&resd, sc2);
    return resd;
  default:
    fprintf(stderr,"ERREUR: %d is not a valid value in s_cos \n", N);
    exit(1);
  }
  return resd;
}







double scs_cos_rz(double x){
  scs_t sc1, sc2;
  double resd;
  int N;

 crlibm_second_step_taken++;


  scs_set_d(sc1, x);
  N = rem_pio2_scs(sc2, sc1);
  N = N & 0x0000003;
  switch (N){
  case 0:
    cosine(sc2);
    scs_get_d_zero(&resd, sc2);
    return resd;
    break;
  case 1:
    sine(sc2);
    scs_get_d_zero(&resd, sc2);
    return -resd;
  case 2:
    cosine(sc2);
    scs_get_d_zero(&resd, sc2);
    return -resd;
  case 3:
    sine(sc2);
    scs_get_d_zero(&resd, sc2);
    return resd;
  default:
    fprintf(stderr,"ERREUR: %d is not a valid value in s_cos \n", N);
    exit(1);
  }
  return resd;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c exp.c
# 1 "exp.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "exp.c"
# 10 "exp.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 11 "exp.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 12 "exp.c" 2
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 13 "exp.c" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 14 "exp.c" 2
# 1 "exp.h" 1
# 15 "exp.h"
static const db_number
  iln2_o512 = {{0x652B82FE, 0x40871547}},
  tiny_int = {{0xffffffff, 0x3c8fffff}},
  smll_int = {{0xd52d3051, 0xc0874910}},
  larg_int = {{0xfefa39ef, 0x40862e42}};


static const struct scs
sc_ln2_o512_1 = {{0x00162e42, 0x3fbe8e7b, 0x335793c7, 0x19cc01f9,
    0x1ed5e81e, 0x1a193394, 0x316c5b14, 0x00000000},
   {{0x00000000 ,0x3ff00000}}, -1, 1 },
sc_ln2_o512_2 = {{0x068badc5, 0x355f457c, 0x3dc3b103, 0x1bd75930,
    0x2acaa97d, 0x295f4362, 0x07697571, 0x2b827042},
   {{0x00000000 ,0x3ff00000}}, -8, 1 };






static const scs constant_poly[10]=

{{{0x0000001a, 0x39915ae6, 0x271b3b26, 0x3bc3c8d6,
0x327f2894, 0x1a80bba6, 0x2d7be149, 0x149ab262},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00000127, 0x393ee8a7, 0x2647a705, 0x037af958,
0x0c753fb3, 0x0941e129, 0x13162578, 0x1773558f},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00000b8e, 0x3c74aad8, 0x399abcfd, 0x1225e04b,
0x2e8dea13, 0x038b8517, 0x3212cece, 0x2cb577c5},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00006806, 0x201a01a0, 0x066e4bb6, 0x156666d6,
0x333d1ab0, 0x06772281, 0x044e4578, 0x04d8d60d},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00034034, 0x00d00d00, 0x34034034, 0x0249047b,
0x38e5a9d7, 0x30805847, 0x335f9062, 0x206ba2e1},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0016c16c, 0x05b05b05, 0x2c16c16c, 0x121e8acb,
0x25da960e, 0x2999616d, 0x2b3ae80c, 0x1a17471d},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00888888, 0x22222222, 0x08888888, 0x22222220,
0x072a661e, 0x15f0a5cf, 0x3fc53e81, 0x3da68844},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x02aaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaa9e,
0x2e389977, 0x07fcaf81, 0x07fee303, 0x13eab39c},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
0x2aaaaadc, 0x1902174f, 0x32f46829, 0x13f2855b},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x20000000, 0x00000000, 0x00000000, 0x00000000,
0x00000075, 0x21e5e9c2, 0x1e95e039, 0x17dad7b5},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
};
# 15 "exp.c" 2
# 69 "exp.c"
void exp_SC(scs_ptr res_scs, double x){
  scs_t sc1, red, red_low;
  db_number db;
  int i, k;




  db.d = x;
  db.i[1] -= (9 << 20);
  scs_set_d(sc1, db.d);


  {db_number _t; _t.d = ((db.d * iln2_o512.d)+6755399441055744.0); k = _t.i[0];};



  scs_set(red, ((scs_ptr)(&sc_ln2_o512_1)));
  scs_set(red_low, ((scs_ptr)(&sc_ln2_o512_2)));
  if (k>0){
    scs_mul_ui(red, (unsigned int) k);
    scs_mul_ui(red_low, (unsigned int) k);
  }else {
    scs_mul_ui(red, (unsigned int)(-k));
    scs_mul_ui(red_low, (unsigned int)(-k));
    red->sign *= -1;
    red_low->sign *=-1;
  }

  scs_sub(red, sc1, red);
  scs_sub(red, red, red_low);




  scs_mul(res_scs, (scs_ptr)&constant_poly[0], red);
  for(i=1; i< 10; i++){
    scs_add(res_scs, (scs_ptr)&constant_poly[i], res_scs);
    scs_mul(res_scs, red, res_scs);
  }

  scs_add(res_scs, (scs_ptr)(&scs_one), res_scs);
  scs_mul(res_scs, red, res_scs);
  scs_add(res_scs, (scs_ptr)(&scs_one), res_scs);


  for(i=0; i<9; i++)
    scs_square(res_scs, res_scs);


  res_scs->index += (int)(k/30);
  if ((k%30) > 0)
    scs_mul_ui(res_scs, (unsigned int) (1<<((k%30))));
  else if ((k%30) < 0){
    res_scs->index --;
    scs_mul_ui(res_scs, (unsigned int) (1<<((30+(k%30)))));
  }
}







double scs_exp_rn(double x){
  scs_t res_scs;
  db_number res;


  crlibm_second_step_taken++;






  exp_SC(res_scs, x);
  scs_get_d(&res.d, res_scs);

  return res.d;
}







double scs_exp_rd(double x){
  scs_t res_scs;
  db_number res;

  exp_SC(res_scs, x);
  scs_get_d_minf(&res.d, res_scs);

  return res.d;
}







double scs_exp_ru(double x){
  scs_t res_scs;
  db_number res;

  exp_SC(res_scs, x);
  scs_get_d_pinf(&res.d, res_scs);

  return res.d;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c logsix.c
# 1 "logsix.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "logsix.c"
# 9 "logsix.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 10 "logsix.c" 2
# 1 "log.h" 1
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 2 "log.h" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 3 "log.h" 2
# 11 "log.h"
static const db_number
  norm_number = {{0x00000000, 0x3FD60000}};




static const scs
   sc_ln2={{0x2c5c85fd, 0x3d1cf79a, 0x2f278ece, 0x1803f2f6,
      0x2bd03cd0, 0x3267298b, 0x18b62834, 0x175b8baa},
     {{0x00000000 ,0x3ff00000}}, -1, 1 };



static const scs table_ti[13]=

{{{0x17fafa3b, 0x360546fb, 0x1e6fdb53, 0x0b1225e6,
0x15f38987, 0x26664702, 0x3cb1bf6d, 0x118a64f9},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x12696211, 0x0d36e49e, 0x03beb767, 0x1b02aa70,
0x2a30f490, 0x3732bb37, 0x2425c6da, 0x1fc53d0e},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x0d49f69e, 0x115b3c6d, 0x395f53bd, 0x0b901b99,
0x2e77188a, 0x3e3d1ab5, 0x1147dede, 0x05483ae4},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x088bc741, 0x04fc8f7b, 0x319c5a0f, 0x38e5bd03,
0x31dda8fe, 0x30f08645, 0x2fa1d5c5, 0x02c6529d},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x0421662d, 0x19e3a068, 0x228ff66f, 0x3503372c,
0x04bf1b16, 0x0ff1b85c, 0x006c21b2, 0x21a9efd6},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000},
{{0, 0}}, 0, 1 }
,

{{0x03e14618, 0x008b1533, 0x02f992e2, 0x37759978,
0x2634d1d3, 0x13375edb, 0x2e4634ea, 0x1dcf0aef},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0789c1db, 0x22af2e5e, 0x27aa1fff, 0x21fe9e15,
0x176e53af, 0x04015c6b, 0x021a0541, 0x006df1d7},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0aff9838, 0x14f27a79, 0x039f1050, 0x0e424775,
0x3f35571c, 0x355ff008, 0x1ca13efc, 0x3c2c8490},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0e47fbe3, 0x33534435, 0x212ec0f7, 0x25ff7344,
0x2571d97a, 0x274129e2, 0x12b111db, 0x2c051568},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x11675cab, 0x2ae98380, 0x39cc7d57, 0x041b8b82,
0x0fc19f41, 0x0a43c91d, 0x1523ef69, 0x164b69f6},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x14618bc2, 0x0717b09f, 0x10b7b37b, 0x0cf1cd10,
0x15dcb349, 0x0c00c397, 0x2c39cc9b, 0x274c94a8},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,
{{0x1739d7f6, 0x2ef401a7, 0x0e24c53f, 0x2b4fbde5,
0x2ab77843, 0x1cea5975, 0x1eeef249, 0x384d2344},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
};


static const scs table_inv_wi[13]=

{{{0x00000001, 0x1d1745d1, 0x1d1745d1, 0x1d1745d1,
0x1d1745d1, 0x1d1745d1, 0x1d183e2a, 0x36835582},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x00000001, 0x15555555, 0x15555555, 0x15555555,
0x15555555, 0x15555555, 0x15549b7e, 0x1a416c6b},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x00000001, 0x0ec4ec4e, 0x313b13b1, 0x0ec4ec4e,
0x313b13b1, 0x0ec4ec4e, 0x313a6825, 0x3ab28b77},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x00000001, 0x09249249, 0x09249249, 0x09249249,
0x09249249, 0x09249249, 0x09238b74, 0x26f620a6},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x00000001, 0x04444444, 0x11111111, 0x04444444,
0x11111111, 0x04444444, 0x1111d60e, 0x1f0c9d58},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x00000001, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x3c3c3c3c, 0x0f0f0f0f, 0x03c3c3c3, 0x30f0f0f0,
0x3c3c3c3c, 0x0f0f923d, 0x16e0e0a4, 0x3a84202f},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x38e38e38, 0x38e38e38, 0x38e38e38, 0x38e38e38,
0x38e38e38, 0x38e3946a, 0x2e0ee2c9, 0x0d6e0fbd},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x35e50d79, 0x10d79435, 0x39435e50, 0x35e50d79,
0x10d79435, 0x3943324d, 0x0637ea85, 0x131a67ba},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x33333333, 0x0ccccccc, 0x33333333, 0x0ccccccc,
0x33333333, 0x0ccccccc, 0x33333333, 0x0ccccccc},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x30c30c30, 0x30c30c30, 0x30c30c30, 0x30c30c30,
0x30c30c30, 0x30c2f1a4, 0x160958a1, 0x2b03bc88},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x2e8ba2e8, 0x2e8ba2e8, 0x2e8ba2e8, 0x2e8ba2e8,
0x2e8ba2e8, 0x2e8bcb74, 0x2d78b525, 0x00a1db67},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x2c8590b2, 0x0590b216, 0x10b21642, 0x321642c8,
0x1642c859, 0x02c8590b, 0x08590b21, 0x190b2164},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
};



static const scs constant_poly[20]=

{{{0x0337074b, 0x275aac5c, 0x2cf4a893, 0x38013cc3,
0x149a3416, 0x0e067307, 0x12745608, 0x1658e0d5},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x03622298, 0x252ff65c, 0x03001550, 0x2f457908,
0x32f78ecc, 0x17442a4e, 0x1d806366, 0x2c50350e},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x038e36bb, 0x30665a9c, 0x119434c7, 0x3fdec8cb,
0x37dd3adb, 0x2663cd45, 0x230e43e9, 0x32b9663c},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x03c3c1bb, 0x38c473ae, 0x192b9c18, 0x242b7c4e,
0x3da8edc8, 0x04454ffe, 0x2cf133c6, 0x0c926fd0},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x04000000, 0x2b72bb0a, 0x038f5efc, 0x34665092,
0x2461b6c9, 0x172f7050, 0x1218b5c1, 0x104862d7},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x04444444, 0x374f3324, 0x1531bcf1, 0x1d7d23fc,
0x26ff9670, 0x38fc33ae, 0x15bf1cfb, 0x2c9f1c2d},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x04924924, 0x2489e5b6, 0x288b19c5, 0x2893519b,
0x2c3f35c0, 0x0b8bfdce, 0x3541ab49, 0x1de415bc},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x04ec4ec4, 0x3b0ce4bd, 0x14d14046, 0x0243ade9,
0x083cc34f, 0x393e6a5a, 0x2c1855f2, 0x259d599f},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x05555555, 0x1555565b, 0x064b42af, 0x13bc7961,
0x1396754b, 0x33d85415, 0x2ba548d4, 0x039c4ff6},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x05d1745d, 0x05d1751c, 0x24facd05, 0x07540f86,
0x014f2ec1, 0x3bb3fa8b, 0x02e1da4c, 0x3304817c},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x06666666, 0x19999999, 0x21667ee1, 0x0f5f75ea,
0x353af37f, 0x2578daa1, 0x07c76f47, 0x16541534},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x071c71c7, 0x071c71c7, 0x03e7af88, 0x2fca5d74,
0x0bb43f38, 0x050edb70, 0x3631b696, 0x1fc3e0d3},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x08000000, 0x00000000, 0x00003ac6, 0x36c11384,
0x2d596ab4, 0x09257878, 0x0597dc26, 0x2d60813a},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x09249249, 0x09249249, 0x0924b1db, 0x0d002ac1,
0x0eafd708, 0x2b4df21d, 0x0458da93, 0x2d11460c},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaa9, 0x0bb6630e,
0x2e44a5cf, 0x39f32e04, 0x105732b9, 0x01a76208},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x0ccccccc, 0x33333333, 0x0ccccccc, 0x0bbbe6e8,
0x253269ea, 0x0ec2a630, 0x10defc5c, 0x238aef3b},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x10000000, 0x00000000, 0x00000000, 0x0001195c,
0x3654cd5a, 0x16ca3471, 0x343d2da0, 0x235273f2},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x15555555, 0x15555555, 0x15555555, 0x1555a1e0,
0x2eb2094a, 0x07dde891, 0x230e2bfa, 0x28aae6ab},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x1fffffff, 0x3fffffff, 0x3fffffff, 0x3fffffff,
0x029bd81b, 0x360f63df, 0x28d28bd3, 0x3c15f394},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x3fffffff, 0x3fffffff, 0x3fffffff, 0x3fffffff,
0x39e04b7e, 0x08e4e337, 0x1a1e2ed3, 0x23e85705},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
};
# 11 "logsix.c" 2
# 60 "logsix.c"
void scs_log(scs_ptr res, db_number y, int E){
  scs_t R, sc_ln2_times_E, res1, addi;
  scs_ptr ti, inv_wi;
  db_number z, wi;
  int i;



 crlibm_second_step_taken++;





  z.d = y.d + norm_number.d;
  i = (z.i[1] & 0x000fffff);
  i = i >> 16;


  wi.d = ((double)(11+i))*0.0625;


  y.d -= wi.d;


  ti = (scs_ptr)&table_ti[i];
  inv_wi = (scs_ptr)&table_inv_wi[i];


  scs_set_d(R, y.d);
  scs_mul(R, R, inv_wi);






  scs_mul(res1, (scs_ptr)&constant_poly[0], R);
  for(i=1; i<20; i++){
    scs_add(addi, (scs_ptr)&constant_poly[i], res1);
    scs_mul(res1, addi, R);
  }

  if(E==0){
    scs_add(res, res1, ti);
  }else{

    scs_set(sc_ln2_times_E, (scs_ptr)(&sc_ln2));

    if (E >= 0){
      scs_mul_ui(sc_ln2_times_E, (unsigned int) E);
    }else{
      scs_mul_ui(sc_ln2_times_E, (unsigned int) -E);
      sc_ln2_times_E->sign = -1;
    }
    scs_add(addi, res1, ti);
    scs_add(res, addi, sc_ln2_times_E);
  }
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c exp_fast.c
# 1 "exp_fast.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "exp_fast.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 2 "exp_fast.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 3 "exp_fast.c" 2
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 4 "exp_fast.c" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 5 "exp_fast.c" 2
# 1 "exp_fast.h" 1
static const db_number tab_exp[179][2] = {
# 183 "exp_fast.h"
  {{{0xc8245a9b, 0x3fe69a59}}, {{0x08d2236c, 0xbc7f8636}}},
  {{{0x72deb89d, 0x3fe6b0ff}}, {{0x975c0c02, 0xbc6dabf5}}},
  {{{0xce9a6d93, 0x3fe6c7bb}}, {{0xac498e17, 0x3c6606ca}}},
  {{{0xf213d71e, 0x3fe6de8e}}, {{0x176bde7b, 0x3c68b72d}}},
  {{{0xf41e1a9e, 0x3fe6f578}}, {{0xbbf87f0c, 0x3c8067f8}}},
  {{{0xeba33c07, 0x3fe70c79}}, {{0x227465a1, 0xbc858b71}}},
  {{{0xefa434c7, 0x3fe72391}}, {{0x5858922d, 0x3c790909}}},
  {{{0x17390acd, 0x3fe73ac1}}, {{0x6cf73277, 0x3c8f8c1c}}},
  {{{0x7990e79d, 0x3fe75207}}, {{0x9989f030, 0xbc38d112}}},
  {{{0x2df22f7e, 0x3fe76965}}, {{0x7544e0ef, 0x3c63445f}}},
  {{{0x4bba98c5, 0x3fe780da}}, {{0xbb9bba43, 0xbc8f43e3}}},
  {{{0xea5f432d, 0x3fe79866}}, {{0xa100a0a9, 0x3c71339c}}},
  {{{0x216ccf53, 0x3fe7b00b}}, {{0xf8f3b151, 0xbc250309}}},
  {{{0x0887763c, 0x3fe7c7c7}}, {{0x82553231, 0xbc309aa6}}},
  {{{0xb76b20fd, 0x3fe7df9a}}, {{0x24b9c90b, 0x3c6a59e5}}},
  {{{0x45eb8076, 0x3fe7f786}}, {{0x07f84e07, 0x3c835721}}},
  {{{0xcbf42526, 0x3fe80f89}}, {{0x68151806, 0x3c8097b1}}},
  {{{0x61889716, 0x3fe827a5}}, {{0xb63020c1, 0xbc66b2ea}}},
  {{{0x1ec46ddc, 0x3fe83fd9}}, {{0x06ede90c, 0x3c13e907}}},
  {{{0x1bdb68b9, 0x3fe85825}}, {{0xf562c66e, 0xbc844395}}},
  {{{0x711986c9, 0x3fe87089}}, {{0x87fec2bb, 0x3c81125a}}},
  {{{0x36e31f54, 0x3fe88906}}, {{0xd8d982ed, 0x3c7d9c29}}},
  {{{0x85b4fa2e, 0x3fe8a19b}}, {{0x6bec2e05, 0xbc8b751b}}},
  {{{0x76246834, 0x3fe8ba49}}, {{0x10320114, 0xbc8aad78}}},
  {{{0x20df5be4, 0x3fe8d310}}, {{0xda6ddb12, 0x3c78afbf}}},
  {{{0x9eac820b, 0x3fe8ebef}}, {{0x686c5393, 0xbc6797d4}}},
  {{{0x086b5a88, 0x3fe904e8}}, {{0x437e6df7, 0xbc8fe497}}},
  {{{0x7714512e, 0x3fe91df9}}, {{0x9d163339, 0xbc8ea1cb}}},
  {{{0x03b8d6bd, 0x3fe93724}}, {{0x35693486, 0xbc82216c}}},
  {{{0xc78379f2, 0x3fe95067}}, {{0x3e8cd60f, 0x3c8f483a}}},
  {{{0xdbb800b4, 0x3fe969c4}}, {{0x6224bd94, 0x3c8d2bfa}}},
  {{{0x59b38154, 0x3fe9833b}}, {{0x20f493db, 0x3c7dffd9}}},
  {{{0x5aec7bed, 0x3fe99ccb}}, {{0xdc9b22dd, 0xbc8dc4e3}}},
  {{{0xf8f2f3d8, 0x3fe9b674}}, {{0xbb129094, 0xbc851bfd}}},
  {{{0x4d708940, 0x3fe9d038}}, {{0x9e75e4dd, 0xbc8b1090}}},
  {{{0x722892c7, 0x3fe9ea15}}, {{0x225e2206, 0x3c8cd3e5}}},
  {{{0x80f8374f, 0x3fea040c}}, {{0x2ed9db3e, 0x3c66ef28}}},
  {{{0x93d687d0, 0x3fea1e1d}}, {{0xdaece8f9, 0x3c5e3a6b}}},
  {{{0xc4d49955, 0x3fea3848}}, {{0x5ac8853a, 0xbc7e5572}}},
  {{{0x2e1d9f0a, 0x3fea528e}}, {{0xe0c2d3d4, 0xbc8daf2a}}},
  {{{0xe9f70468, 0x3fea6ced}}, {{0xc77638a1, 0xbc72eff4}}},
  {{{0x12c0877c, 0x3fea8768}}, {{0x26fadd44, 0xbc7fd362}}},
  {{{0xc2f45344, 0x3feaa1fc}}, {{0xfa5b95a0, 0xbc8a0bc2}}},
  {{{0x15271a2a, 0x3feabcac}}, {{0xd0341ab0, 0x3c7d887c}}},
  {{{0x2408309c, 0x3fead776}}, {{0x82340b91, 0xbc8204e1}}},
  {{{0x0a61a7b5, 0x3feaf25b}}, {{0x2a1a618b, 0xbc8676a5}}},
  {{{0xe318680c, 0x3feb0d5a}}, {{0xeab2fb84, 0x3c7d6252}}},
  {{{0xc92c4c99, 0x3feb2875}}, {{0x420ad283, 0x3c79776b}}},
  {{{0xd7b83db2, 0x3feb43ab}}, {{0x99dc1248, 0xbc83b931}}},
  {{{0x29f24c26, 0x3feb5efd}}, {{0x7d70a5ed, 0x3c73d5fd}}},
  {{{0xdb2bcc77, 0x3feb7a69}}, {{0x889d0c09, 0x3c8b00ca}}},
  {{{0x06d17228, 0x3feb95f2}}, {{0x2c8fa0bf, 0x3c5a94ad}}},
  {{{0xc86b6b29, 0x3febb195}}, {{0x3f1a5d93, 0x3c547c5c}}},
  {{{0x3b9d7b62, 0x3febcd55}}, {{0x353465b0, 0x3c26ad4c}}},
  {{{0x7c271855, 0x3febe930}}, {{0xea1578b2, 0xbc513dad}}},
  {{{0xa5e384de, 0x3fec0527}}, {{0x70e59b65, 0xbc78bba1}}},
  {{{0xd4c9ed0e, 0x3fec213a}}, {{0x4bc47afb, 0xbc8cec80}}},
  {{{0x24ed8222, 0x3fec3d6a}}, {{0x76cb0685, 0xbc8e1e0a}}},
  {{{0xb27d9697, 0x3fec59b5}}, {{0x41a540a6, 0xbc88fd05}}},
  {{{0x99c5ba58, 0x3fec761d}}, {{0xf55e75f8, 0x3c8fe131}}},
  {{{0xf72dd70d, 0x3fec92a1}}, {{0x3e55aaea, 0x3c84ee4c}}},
  {{{0xe73a4c7e, 0x3fecaf42}}, {{0xe8bcee31, 0xbc8b5bee}}},
  {{{0x868c0d18, 0x3feccc00}}, {{0x3f1d0f61, 0x3c8c0e94}}},
  {{{0xf1e0ba95, 0x3fece8da}}, {{0x02c25e9b, 0xbc77fe9b}}},
  {{{0x4612c2af, 0x3fed05d2}}, {{0x2fbdfc59, 0xbc6793b3}}},
  {{{0xa0197c03, 0x3fed22e6}}, {{0xbdaf1116, 0xbc832ae7}}},
  {{{0x1d094303, 0x3fed4018}}, {{0x05f2ed30, 0x3c81be59}}},
  {{{0xda13970f, 0x3fed5d66}}, {{0x58cbd73b, 0x3c7a6cfe}}},
  {{{0xf48737a2, 0x3fed7ad2}}, {{0x00efb659, 0x3c5704ee}}},
  {{{0x89d041a3, 0x3fed985c}}, {{0xe3138a56, 0x3c68798d}}},
  {{{0xb7784cd2, 0x3fedb603}}, {{0x990a55d6, 0xbc8e1926}}},
  {{{0x9b26894e, 0x3fedd3c8}}, {{0x1a7ef10b, 0xbc358932}}},
  {{{0x529fdd42, 0x3fedf1ab}}, {{0x8277560e, 0xbc7b70a2}}},
  {{{0xfbc702a4, 0x3fee0fab}}, {{0x00fcfb65, 0xbc78d0e7}}},
  {{{0xb49ca51b, 0x3fee2dca}}, {{0x9176d034, 0x3c80274c}}},
  {{{0x9b3f8000, 0x3fee4c07}}, {{0x07d5dd3b, 0x3c8473ef}}},
  {{{0xcdec7c7b, 0x3fee6a62}}, {{0x6c562739, 0xbc5faec3}}},
  {{{0x6afecfc0, 0x3fee88dc}}, {{0x149c16e2, 0xbc838e62}}},
  {{{0x90f0196b, 0x3feea774}}, {{0xa878850d, 0x3c58dfce}}},
  {{{0x5e5881fb, 0x3feec62b}}, {{0x309bd394, 0xbc508bb6}}},
  {{{0xf1eed967, 0x3feee500}}, {{0x6763990a, 0x3c6813a6}}},
  {{{0x6a88b5d8, 0x3fef03f5}}, {{0xd501a227, 0xbc8bad3f}}},
  {{{0xe71a927b, 0x3fef2308}}, {{0x0c34c36a, 0xbc882dca}}},
  {{{0x86b7ee79, 0x3fef423b}}, {{0xc39ed253, 0x3c63d27a}}},
  {{{0x68936c0a, 0x3fef618d}}, {{0xc62ccbbf, 0xbc73db2a}}},
  {{{0xabfeefa5, 0x3fef80fe}}, {{0xd08aac55, 0xbc8b60bb}}},
  {{{0x706bbf54, 0x3fefa08f}}, {{0x51b2d2f4, 0xbc8d10fc}}},
  {{{0xd56aa225, 0x3fefc03f}}, {{0x3b3359de, 0xbc4a00d0}}},
  {{{0xfaabffbc, 0x3fefe00f}}, {{0x0f73da82, 0xbc7c7297}}},
  {{{0x00000000, 0x3ff00000}}, {{0x00000000, 0x00000000}}},
  {{{0x02ab5577, 0x3ff01008}}, {{0xa90b49ab, 0x3c9f4a28}}},
  {{{0x15600446, 0x3ff02020}}, {{0x71f50e32, 0xbc93cf36}}},
  {{{0x48362077, 0x3ff03048}}, {{0xfb978c46, 0xbc97dc9a}}},
  {{{0xab55de39, 0x3ff04080}}, {{0x4b3e9045, 0x3c77ab86}}},
  {{{0x4ef7a207, 0x3ff050c9}}, {{0x0423c90e, 0xbc81e92f}}},
  {{{0x436410dd, 0x3ff06122}}, {{0x9d75e95b, 0x3c74e565}}},
  {{{0x98f42085, 0x3ff0718b}}, {{0xd746e619, 0xbc70424c}}},
  {{{0x601127ed, 0x3ff08205}}, {{0xbdf15160, 0xbc99c7d0}}},
  {{{0xa934ef91, 0x3ff0928f}}, {{0x4247b148, 0xbc9b3eec}}},
  {{{0x84e9c1f6, 0x3ff0a32a}}, {{0xf8c1a994, 0xbc9fae8c}}},
  {{{0x03ca7c32, 0x3ff0b3d6}}, {{0x711a7c85, 0x3c9cc3eb}}},
  {{{0x36829e8c, 0x3ff0c492}}, {{0x0ce14da7, 0xbc8eb698}}},
  {{{0x2dce5d1f, 0x3ff0d55f}}, {{0x24bd655c, 0xbc9a6465}}},
  {{{0xfa7ab09d, 0x3ff0e63c}}, {{0x37d6c342, 0x3c773241}}},
  {{{0xad65671b, 0x3ff0f72b}}, {{0x3128d0b4, 0x3c9a5dcb}}},
  {{{0x577d34ed, 0x3ff1082b}}, {{0x80678897, 0x3c9f56c6}}},
  {{{0x09c1c596, 0x3ff1193c}}, {{0x6b9ea264, 0xbc8de0e8}}},
  {{{0xd543ccc5, 0x3ff12a5d}}, {{0x19dace1c, 0xbc81280f}}},
  {{{0xcb25176a, 0x3ff13b90}}, {{0x5ae9d14b, 0x3c9322e9}}},
  {{{0xfc989cd6, 0x3ff14cd4}}, {{0x8671b89e, 0x3c91557a}}},
  {{{0x7ae28fed, 0x3ff15e2a}}, {{0x403a47bb, 0xbc964131}}},
  {{{0x57587069, 0x3ff16f91}}, {{0x72aa582d, 0x3c87923b}}},
  {{{0xa3611c35, 0x3ff18109}}, {{0xb916967c, 0xbc526e9d}}},
  {{{0x7074e0cd, 0x3ff19293}}, {{0x6336ea04, 0x3c9a24f4}}},
  {{{0xd01d8cbc, 0x3ff1a42e}}, {{0x09f2ed1f, 0x3c987106}}},
  {{{0xd3f68122, 0x3ff1b5db}}, {{0x92a5200f, 0x3c881f5c}}},
  {{{0x8dacc351, 0x3ff1c79a}}, {{0xc1676e14, 0xbc80f140}}},
  {{{0x0eff0e79, 0x3ff1d96b}}, {{0xa4d3206c, 0x3c8e8ac7}}},
  {{{0x69bde56a, 0x3ff1eb4d}}, {{0xb76e0cc0, 0xbc97374b}}},
  {{{0xafcba45e, 0x3ff1fd41}}, {{0x42d10731, 0x3c9bb492}}},
  {{{0xf31c92e4, 0x3ff20f47}}, {{0x6fb23b17, 0x3c993f00}}},
  {{{0x45b6f5cd, 0x3ff22160}}, {{0xdf1ec7e5, 0xbc58c4a5}}},
  {{{0xb9b32135, 0x3ff2338a}}, {{0xb102f120, 0xbc9a3764}}},
  {{{0x613b8a9b, 0x3ff245c7}}, {{0xc37ea8a2, 0xbc6bd4b1}}},
  {{{0x4e8cdb0e, 0x3ff25816}}, {{0x0992ef5f, 0xbc9f7b88}}},
  {{{0x93f60164, 0x3ff26a77}}, {{0x860044d0, 0x3c85aeb9}}},
  {{{0x43d84490, 0x3ff27ceb}}, {{0x4052c124, 0x3c87bd1a}}},
  {{{0x70a755fd, 0x3ff28f71}}, {{0x3fa73805, 0x3c9d67b3}}},
  {{{0x2ce96406, 0x3ff2a20a}}, {{0xd53a936a, 0x3c8ed622}}},
  {{{0x8b372c79, 0x3ff2b4b5}}, {{0x9f031676, 0x3c9404dd}}},
  {{{0x9e3c0f33, 0x3ff2c773}}, {{0xb1de2605, 0xbc90b3dd}}},
  {{{0x78b620c7, 0x3ff2da44}}, {{0xec61fc2d, 0x3c8f5aa8}}},
  {{{0x2d763d42, 0x3ff2ed28}}, {{0xd5394aac, 0x3c937377}}},
  {{{0xcf601af7, 0x3ff3001e}}, {{0x2c69ffeb, 0x3c27ab91}}},
  {{{0x716a5d64, 0x3ff31328}}, {{0xce0c517a, 0xbc8e9def}}},
  {{{0x269ea829, 0x3ff32645}}, {{0xbc0ec9cd, 0xbc5b3564}}},
  {{{0x0219b213, 0x3ff33975}}, {{0xbb78b2af, 0xbc95d7f9}}},
  {{{0x170b5835, 0x3ff34cb8}}, {{0x2465be33, 0x3c86a706}}},
  {{{0x78b6b11d, 0x3ff3600e}}, {{0x3225e849, 0x3c79d630}}},
  {{{0x3a722012, 0x3ff37378}}, {{0x96807206, 0x3c93d473}}},
  {{{0x6fa7686e, 0x3ff386f5}}, {{0xe1fc8d12, 0x3c988f8c}}},
  {{{0x2bd3c106, 0x3ff39a86}}, {{0x79cbd0fc, 0x3c97dd1a}}},
  {{{0x8287e7a8, 0x3ff3ae2a}}, {{0xfcf4b451, 0x3c527829}}},
  {{{0x876834aa, 0x3ff3c1e2}}, {{0x047a62b0, 0x3c9fe918}}},
  {{{0x4e2cae93, 0x3ff3d5ae}}, {{0xc86c80f0, 0xbc8baab1}}},
  {{{0xeaa11dcc, 0x3ff3e98d}}, {{0x08fefcff, 0xbc957221}}},
  {{{0x70a52072, 0x3ff3fd81}}, {{0xe93cfee6, 0xbc9d2e67}}},
  {{{0xf42c3e32, 0x3ff41188}}, {{0x1afc42c5, 0x3c6e1761}}},
  {{{0x893dfc40, 0x3ff425a4}}, {{0x19938e09, 0xbc986cf9}}},
  {{{0x43f5f159, 0x3ff439d4}}, {{0xe8735a43, 0xbc71c5b2}}},
  {{{0x3883d9e5, 0x3ff44e18}}, {{0x9cfd8698, 0xbc99c759}}},
  {{{0x7b2bac21, 0x3ff46270}}, {{0x39c4cffd, 0xbc825fe1}}},
  {{{0x2045ac68, 0x3ff476dd}}, {{0x2cae75f8, 0xbc9cb504}}},
  {{{0x3c3e8186, 0x3ff48b5e}}, {{0x0eda6eab, 0x3c99d9ef}}},
  {{{0xe397492c, 0x3ff49ff3}}, {{0x687e6cc2, 0xbc94f7e1}}},
  {{{0x2ae5ac67, 0x3ff4b49e}}, {{0xed6ed86d, 0x3c91945d}}},
  {{{0x26d3f440, 0x3ff4c95d}}, {{0x2ca4967c, 0x3c9d22e2}}},
  {{{0xec211e60, 0x3ff4de30}}, {{0x3eca1712, 0x3c73b522}}},
  {{{0x8fa0f1d0, 0x3ff4f319}}, {{0x0a22ea14, 0xbc98648d}}},
  {{{0x263c13cd, 0x3ff50817}}, {{0x5e2782ce, 0xbc64582a}}},
  {{{0xc4f01cb3, 0x3ff51d29}}, {{0x9284257f, 0x3c610162}}},
  {{{0x80cfacf7, 0x3ff53251}}, {{0x60a648da, 0x3c9b28b6}}},
  {{{0x6f02823d, 0x3ff5478e}}, {{0x00008d9a, 0x3c41ae4c}}},
  {{{0xa4c58c7c, 0x3ff55ce0}}, {{0x48a2d416, 0xbc93660f}}},
  {{{0x376b033d, 0x3ff57248}}, {{0x0324d3d3, 0x3c9855b8}}},
  {{{0x3c5a7af0, 0x3ff587c5}}, {{0x3c017937, 0x3c83b0e9}}},
  {{{0xc910fa4e, 0x3ff59d57}}, {{0x5ac95630, 0xbc78a163}}},
  {{{0xf3210fd9, 0x3ff5b2ff}}, {{0x14f80bac, 0x3c95c7b8}}},
  {{{0xd032e771, 0x3ff5c8bd}}, {{0x458cae96, 0xbc9c104d}}},
  {{{0x76045ff5, 0x3ff5de91}}, {{0x23298baa, 0x3c8da899}}},
  {{{0xfa69210a, 0x3ff5f47a}}, {{0x5dda0c01, 0x3c9d6444}}},
  {{{0x734ab0e8, 0x3ff60a7a}}, {{0xf46f291b, 0x3c9d5591}}},
  {{{0xf6a88a46, 0x3ff6208f}}, {{0xb232f74c, 0x3c74a145}}},
  {{{0x9a983258, 0x3ff636bb}}, {{0x31f7248d, 0x3c9349cc}}},
  {{{0x75454ee8, 0x3ff64cfd}}, {{0x6e05dd06, 0xbc902880}}},
  {{{0x9cf1bc7c, 0x3ff66355}}, {{0xfbafe59e, 0x3c968782}}},
  {{{0x27f5a49f, 0x3ff679c4}}, {{0xa46f644f, 0x3c8c8270}}},
  {{{0x2cbf9433, 0x3ff69049}}, {{0x3f7d6e43, 0xbc881283}}},
  {{{0xc1d491e1, 0x3ff6a6e4}}, {{0xbd8afebd, 0x3c9e5530}}}

};
# 6 "exp_fast.c" 2
# 18 "exp_fast.c"
extern double scs_exp_rn(double);
extern double scs_exp_ru(double);
extern double scs_exp_rd(double);




static const double
 two1000 = 1.07150860718626732095e301,
 twom1000 = 9.33263618503218878990e-302,
 twom53 = 1.11022302462515654042e-16,
 ln2_hi = 6.93147180559890330187e-01,
 ln2_lo = 5.49792301870837115524e-14,
 half[2] = {0.5,
            -0.5},
 inv_ln2 = 1.44269504088896338700e+00;

static const db_number




 scs_huge ={{0xffffffff, 0x7fefffff}},
 scs_small={{0x00000001, 0x00000000}};
# 53 "exp_fast.c"
static const double
 o_bound = 7.09782712893383973096e+02,
 u_bound =-7.45133219101941108420e+02;




static const double two_44_43 = 26388279066624.;
static const double two_m52_56 = 2.35922392732845764840e-16;
static const double two_m53_56 = 1.24900090270330110798e-16;


static const double
 c_0 = 1.66666666666665769236e-01,
 c_1 = 4.16666666666664631257e-02,
 c_2 = 8.33333427943885873823e-03,
 c_3 = 1.38888903080471677251e-03;



static const double
 two_m75 = 2.6469779601696885595885078e-23;

static const db_number



 _errn ={{0x00000000, 0x3FF00020}};




static const int errd = 73400320;
# 176 "exp_fast.c"
double exp_rn(double x){
  db_number db, R1, R8, R11; double rp_hi, rp_lo, ex_hi, ex_lo; double r_hi, r_lo; double tmp; double P_r; double R2, R3_hi, R3_lo, R4, R5_hi, R5_lo, R6, R7, R9, R10, crp_hi; unsigned int hx; int k; int indx;

  db_number st_to_mem;
  int exp_R11;





  db.d = x;
  hx = db.i[1];
  hx &= 0x7fffffff;


  if (hx >= 0x40862E42){
    if (hx >= 0x7ff00000){
      if (((hx&0x000fffff)|db.i[0])!=0)
 return x+x;
      else return ((db.i[1]&0x80000000)==0)? x:0.0;
    }
    if (x > o_bound) return scs_huge.d * scs_huge.d;
    if (x < u_bound) return scs_small.d * scs_small.d;
  }

  if (hx < 0x3C900000)
    return ((hx == 0) && (db.i[0] == 0))? 1.: 1.+scs_small.d;

  { {db_number _t; _t.d = ((x * inv_ln2)+6755399441055744.0); k = _t.i[0];}; if (k != 0){ rp_hi = x-ln2_hi*k; rp_lo = -ln2_lo*k; {double _z, _a=rp_hi, _b=rp_lo; r_hi = _a + _b; if ((((rp_hi)>0) ? (rp_hi) : (-(rp_hi))) > (((rp_lo)>0) ? (rp_lo) : (-(rp_lo)))){ _z = r_hi - _a; r_lo = _b - _z; }else { _z = r_hi - _b; r_lo = _a - _z;}}; }else { r_hi = x; r_lo = 0.; } db.d = (r_hi + two_44_43); indx = db.i[0]; indx += 89; r_hi -= (db.d - two_44_43); {double _z, _a=r_hi, _b=r_lo; rp_hi = _a + _b; _z = rp_hi - _a; rp_lo = _b - _z; }; ex_hi = (tab_exp[indx][0]).d; ex_lo = (tab_exp[indx][1]).d; P_r = (c_0 + rp_hi * (c_1 + rp_hi * (c_2 + (rp_hi * c_3)))); R1.d = rp_hi * rp_hi; crp_hi = R1.d * rp_hi; R1.d *= 0.5; R2 = P_r * crp_hi; { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&R3_hi, &R3_lo, ex_hi, rp_hi); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =ex_hi, _v=rp_hi; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&R3_hi = _u*_v; *&R3_lo = (((u1*v1-*&R3_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); }; R4 = ex_hi * rp_lo; { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&R5_hi, &R5_lo, ex_hi, R1.d); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =ex_hi, _v=R1.d; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&R5_hi = _u*_v; *&R5_lo = (((u1*v1-*&R5_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); }; R6 = R4 + (ex_lo * (R1.d + rp_hi)); R7 = ex_hi * R2; R7 += (R6 + R5_lo) + (R3_lo + ex_lo); {double _z, _a=R7, _b=R5_hi; R9 = _a + _b; _z = R9 - _a; R8.d = _b - _z; }; {double _z, _a=R3_hi, _b=R9; R10 = _a + _b; _z = R10 - _a; tmp = _b - _z; }; R8.d += tmp; {double _z, _a=ex_hi, _b=R10; R11.d = _a + _b; _z = R11.d - _a; tmp = _b - _z; }; R8.d += tmp; {double _z, _a=R11.d, _b=R8.d; R11.d = _a + _b; _z = R11.d - _a; R8.d = _b - _z; }; };


  exp_R11 = ((*(1+(int*)(&R11))) & 0x7ff00000) - errd;

  if (R11.d == (R11.d + (R8.d * _errn.d))){
    if (k > -1020){
      if (k < 1020){
 R11.i[1] += (k<<20);
 return R11.d;
      }else {

 R11.i[1] += ((k-1000)<<20);
 return R11.d*two1000;
      }
    }else {

      R11.i[1] += ((k+1000)<<20);
      db.d = R11.d * twom1000;





      st_to_mem.i[1] = db.i[1];
      st_to_mem.i[0] = db.i[0];

      R11.d -= st_to_mem.d * two1000;
      R1.i[1] = R11.i[1] & 0x7fffffff;
      R1.i[0] = R11.i[0];

      if (R1.d == two_m75){
 if (((*(1+(int*)(&R8))) & 0x7ff00000) < exp_R11){

   return scs_exp_rn(x);
 }

 if ((R11.i[1] > 0)&&(R8.i[1] > 0)){




   db.l += 1;
 }else
 if ((R11.i[1] < 0)&&(R8.i[1] < 0)){




   db.l -= 1;
 }
      }
      return db.d;
    }
  }else {

    return scs_exp_rn(x);
  }
}







double exp_ru(double x){
  db_number db, R1, R8, R11; double rp_hi, rp_lo, ex_hi, ex_lo; double r_hi, r_lo; double tmp; double P_r; double R2, R3_hi, R3_lo, R4, R5_hi, R5_lo, R6, R7, R9, R10, crp_hi; unsigned int hx; int k; int indx;

  db_number st_to_mem;
  int exp_R11;





  db.d = x;
  hx = db.i[1];
  hx &= 0x7fffffff;


  if (hx >= 0x40862E42){
    if (hx >= 0x7ff00000){
      if (((hx&0x000fffff)|db.i[0])!=0)
 return x+x;
      else return ((db.i[1]&0x80000000)==0)? x:0.0;
    }
    if (x > o_bound) return scs_huge.d * scs_huge.d;
    if (x < u_bound) return scs_small.d*(1.+scs_small.d);
   }

  if (hx < 0x3CA00000){
    if ((hx == 0) && (db.i[0] == 0))
      return 1.;
    if (db.i[1] < 0)
      return 1. + scs_small.d;
    else
      return 1. + two_m52_56;
  }

  { {db_number _t; _t.d = ((x * inv_ln2)+6755399441055744.0); k = _t.i[0];}; if (k != 0){ rp_hi = x-ln2_hi*k; rp_lo = -ln2_lo*k; {double _z, _a=rp_hi, _b=rp_lo; r_hi = _a + _b; if ((((rp_hi)>0) ? (rp_hi) : (-(rp_hi))) > (((rp_lo)>0) ? (rp_lo) : (-(rp_lo)))){ _z = r_hi - _a; r_lo = _b - _z; }else { _z = r_hi - _b; r_lo = _a - _z;}}; }else { r_hi = x; r_lo = 0.; } db.d = (r_hi + two_44_43); indx = db.i[0]; indx += 89; r_hi -= (db.d - two_44_43); {double _z, _a=r_hi, _b=r_lo; rp_hi = _a + _b; _z = rp_hi - _a; rp_lo = _b - _z; }; ex_hi = (tab_exp[indx][0]).d; ex_lo = (tab_exp[indx][1]).d; P_r = (c_0 + rp_hi * (c_1 + rp_hi * (c_2 + (rp_hi * c_3)))); R1.d = rp_hi * rp_hi; crp_hi = R1.d * rp_hi; R1.d *= 0.5; R2 = P_r * crp_hi; { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&R3_hi, &R3_lo, ex_hi, rp_hi); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =ex_hi, _v=rp_hi; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&R3_hi = _u*_v; *&R3_lo = (((u1*v1-*&R3_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); }; R4 = ex_hi * rp_lo; { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&R5_hi, &R5_lo, ex_hi, R1.d); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =ex_hi, _v=R1.d; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&R5_hi = _u*_v; *&R5_lo = (((u1*v1-*&R5_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); }; R6 = R4 + (ex_lo * (R1.d + rp_hi)); R7 = ex_hi * R2; R7 += (R6 + R5_lo) + (R3_lo + ex_lo); {double _z, _a=R7, _b=R5_hi; R9 = _a + _b; _z = R9 - _a; R8.d = _b - _z; }; {double _z, _a=R3_hi, _b=R9; R10 = _a + _b; _z = R10 - _a; tmp = _b - _z; }; R8.d += tmp; {double _z, _a=ex_hi, _b=R10; R11.d = _a + _b; _z = R11.d - _a; tmp = _b - _z; }; R8.d += tmp; {double _z, _a=R11.d, _b=R8.d; R11.d = _a + _b; _z = R11.d - _a; R8.d = _b - _z; }; };

  exp_R11 = (R11.i[1] & 0x7ff00000) - errd;

  if ((R8.i[1] & 0x7ff00000) > exp_R11){

    if (k > -1020){
      if (k < 1020){
 R11.i[1] += (k<<20);
      }else {

 R11.i[1] += ((k-1000)<<20);
 R11.d *= two1000;
      }
      if (R8.i[1] > 0)
 R11.l += 1;

      return R11.d;
    }else {


      R11.i[1] += ((k+1000)<<20);
      db.d = R11.d * twom1000;





      st_to_mem.i[1] = db.i[1];
      st_to_mem.i[0] = db.i[0];

      R11.d -= st_to_mem.d * two1000;



      if ((R11.i[1] > 0)||
   ((R11.i[1] == 0)&&(R8.i[1] > 0))) db.l += 1;

      return db.d;
    }
  }else {

    return scs_exp_ru(x);
  }
}
# 359 "exp_fast.c"
double exp_rd(double x){
  db_number db, R1, R8, R11; double rp_hi, rp_lo, ex_hi, ex_lo; double r_hi, r_lo; double tmp; double P_r; double R2, R3_hi, R3_lo, R4, R5_hi, R5_lo, R6, R7, R9, R10, crp_hi; unsigned int hx; int k; int indx;

  db_number st_to_mem;
  int exp_R11;




  db.d = x;
  hx = db.i[1];
  hx &= 0x7fffffff;


  if (hx >= 0x40862E42){
    if (hx >= 0x7ff00000){
      if (((hx&0x000fffff)|db.i[0])!=0)
 return x+x;
      else return ((hx&0x80000000)==0)? x:0.0;
    }
    if (x > o_bound) return scs_huge.d*(1.+scs_small.d);
    if (x < u_bound) return scs_small.d * scs_small.d;
  }

  if (hx < 0x3CA00000){
    if ((hx == 0) && (db.i[0] == 0))
      return 1.;
    if (db.i[1] < 0)
      return 1. - two_m53_56;
    else
      return 1. + scs_small.d;
  }

  { {db_number _t; _t.d = ((x * inv_ln2)+6755399441055744.0); k = _t.i[0];}; if (k != 0){ rp_hi = x-ln2_hi*k; rp_lo = -ln2_lo*k; {double _z, _a=rp_hi, _b=rp_lo; r_hi = _a + _b; if ((((rp_hi)>0) ? (rp_hi) : (-(rp_hi))) > (((rp_lo)>0) ? (rp_lo) : (-(rp_lo)))){ _z = r_hi - _a; r_lo = _b - _z; }else { _z = r_hi - _b; r_lo = _a - _z;}}; }else { r_hi = x; r_lo = 0.; } db.d = (r_hi + two_44_43); indx = db.i[0]; indx += 89; r_hi -= (db.d - two_44_43); {double _z, _a=r_hi, _b=r_lo; rp_hi = _a + _b; _z = rp_hi - _a; rp_lo = _b - _z; }; ex_hi = (tab_exp[indx][0]).d; ex_lo = (tab_exp[indx][1]).d; P_r = (c_0 + rp_hi * (c_1 + rp_hi * (c_2 + (rp_hi * c_3)))); R1.d = rp_hi * rp_hi; crp_hi = R1.d * rp_hi; R1.d *= 0.5; R2 = P_r * crp_hi; { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&R3_hi, &R3_lo, ex_hi, rp_hi); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =ex_hi, _v=rp_hi; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&R3_hi = _u*_v; *&R3_lo = (((u1*v1-*&R3_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); }; R4 = ex_hi * rp_lo; { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&R5_hi, &R5_lo, ex_hi, R1.d); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =ex_hi, _v=R1.d; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&R5_hi = _u*_v; *&R5_lo = (((u1*v1-*&R5_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); }; R6 = R4 + (ex_lo * (R1.d + rp_hi)); R7 = ex_hi * R2; R7 += (R6 + R5_lo) + (R3_lo + ex_lo); {double _z, _a=R7, _b=R5_hi; R9 = _a + _b; _z = R9 - _a; R8.d = _b - _z; }; {double _z, _a=R3_hi, _b=R9; R10 = _a + _b; _z = R10 - _a; tmp = _b - _z; }; R8.d += tmp; {double _z, _a=ex_hi, _b=R10; R11.d = _a + _b; _z = R11.d - _a; tmp = _b - _z; }; R8.d += tmp; {double _z, _a=R11.d, _b=R8.d; R11.d = _a + _b; _z = R11.d - _a; R8.d = _b - _z; }; };

  exp_R11 = (R11.i[1] & 0x7ff00000) - errd;

  if ((R8.i[1] & 0x7ff00000) > exp_R11){

    if (k > -1020){
      if (k < 1020){
 R11.i[1] += (k<<20);
      }else {

 R11.i[1] += ((k-1000)<<20);
 R11.d *= two1000;
      }
      if (R8.i[1] < 0)
 R11.l -= 1;

      return R11.d;
    }else {


      R11.i[1] += ((k+1000)<<20);
      db.d = R11.d * twom1000;





      st_to_mem.i[1] = db.i[1];
      st_to_mem.i[0] = db.i[0];

      R11.d -= st_to_mem.d * two1000;



      if ((R11.i[1] < 0)||
   ((R11.i[1] == 0)&&(R8.i[1] < 0))) db.l -= 1;

      return db.d;
    }
  }else {

    return scs_exp_rd(x);
  }
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c log_fast.c
# 1 "log_fast.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "log_fast.c"
# 9 "log_fast.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 10 "log_fast.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 11 "log_fast.c" 2
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 12 "log_fast.c" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 13 "log_fast.c" 2
# 1 "log_fast.h" 1
# 14 "log_fast.h"
static const db_number NaN={{0x00000000 ,0xfff80000}};
static const db_number NNaN={{0x00000000 ,0x7ff80000}};
static const db_number Inf={{0x00000000 ,0x7ff00000}};
static const db_number NInf={{0x00000000 ,0xfff00000}};


double const delta[4] =
{

  4.47385432225115274522995672975200000000000000000000e-18,

  8.53340910856285301560990510931860314676002295022400e-19,

  3.19013236586914638175957676953327822856104536069810e-20,

  1.65439555368591958127629148820687925838543565194620e-19

};

double const rncst[4] =
{

  1.08596671427669422271833354898262768983840942382810e+00,

  1.01549346593522860082714487361954525113105773925780e+00,

  1.00057496390146027920309279579669237136840820312500e+00,

  1.00298612635768380485501438670326024293899536132810e+00
};
# 246 "log_fast.h"
db_number const ln2hi = {{0xFEFA3800,0x3FE62E42}} ;
db_number const ln2lo = {{0x93C76730,0x3D2EF357}} ;
db_number const two52 = {{0x00000000,0x43300000}} ;
db_number const middle[8] =
{
{{0x00000000,0x3FE70000}} ,
{{0x00000000,0x3FE90000}} ,
{{0x00000000,0x3FEB0000}} ,
{{0x00000000,0x3FED0000}} ,
{{0x00000000,0x3FF00000}} ,
{{0x00000000,0x3FF20000}} ,
{{0x00000000,0x3FF40000}} ,
{{0x00000000,0x3FF60000}}
};

db_number const Poly_h[8][13] =
{

{
{{0x0738A3D8,0xBFD522AE}} ,
{{0x590B2164,0x3FF642C8}} ,
{{0xB389EBAD,0xBFEEF8BD}} ,
{{0xCF571D65,0x3FECBA31}} ,
{{0x31660877,0xBFEDF9F1}} ,
{{0x33FA3397,0x3FF0AEB7}} ,
{{0xEAA38290,0xBFF3578D}} ,
{{0x941D24AB,0x3FF710F5}} ,
{{0x69BEEF1D,0xBFFC14A5}} ,
{{0xB4CBD27B,0x40015D1B}} ,
{{0x7BA86632,0xC005BE06}} ,
{{0x185E9EF3,0x400BA4DA}} ,
{{0xC0ECB526,0xC011A4BD}}
},

{
{{0x6CB3B379,0xBFCF991C}} ,
{{0x47AE147B,0x3FF47AE1}} ,
{{0xEB1C432D,0xBFEA36E2}} ,
{{0x80F29213,0x3FE65E9F}} ,
{{0xE2308C3F,0xBFE5798E}} ,
{{0xE1793910,0x3FE5FD7F}} ,
{{0xAC3CC49E,0xBFE774CC}} ,
{{0x779F31B6,0x3FE9BC1F}} ,
{{0x9C89806A,0xBFECD2B2}} ,
{{0xF663DD55,0x3FF065A0}} ,
{{0x64D28253,0xBFF2E3A7}} ,
{{0x162168A9,0x3FF613D4}} ,
{{0x1E7E75E1,0xBFF9EC69}}
},

{
{{0x6B543DB2,0xBFC5BF40}} ,
{{0xBDA12F68,0x3FF2F684}} ,
{{0xE0BF08C7,0xBFE67980}} ,
{{0x5F678885,0x3FE1C1FA}} ,
{{0x1B62B9D2,0xBFDF91BD}} ,
{{0x8242EF01,0x3FDDEEAF}} ,
{{0xA36B029B,0xBFDD9015}} ,
{{0x7F176341,0x3FDE0836}} ,
{{0x26663631,0xBFDF24F6}} ,
{{0x19D8F153,0x3FE067BA}} ,
{{0xECA216B7,0xBFE17FB2}} ,
{{0x2FABC4B9,0x3FE2ECE6}} ,
{{0x21A51E4E,0xBFE492F3}}
},

{
{{0x5D594989,0xBFB9335E}} ,
{{0x611A7B96,0x3FF1A7B9}} ,
{{0x24872744,0xBFE37B48}} ,
{{0x29F8DE8E,0x3FDCA99C}} ,
{{0x3D37E454,0xBFD7B881}} ,
{{0x55D1F3A8,0x3FD4F08E}} ,
{{0x346E99D3,0xBFD3413F}} ,
{{0x15433E66,0x3FD23625}} ,
{{0x9976A7ED,0xBFD19561}} ,
{{0x5935F4CB,0x3FD13F21}} ,
{{0x8299A6A4,0xBFD120AC}} ,
{{0x325D4F09,0x3FD13CDB}} ,
{{0x858B6D5D,0xBFD1720B}}
},

{
{{0x00000000,0x00000000}} ,
{{0x00000000,0x3FF00000}} ,
{{0x00000000,0xBFE00000}} ,
{{0x55555582,0x3FD55555}} ,
{{0x000000A9,0xBFD00000}} ,
{{0x99958511,0x3FC99999}} ,
{{0x554BF922,0xBFC55555}} ,
{{0xA3AEF673,0x3FC24924}} ,
{{0x1CE3E886,0xBFC00000}} ,
{{0x13CEB1B9,0x3FBC7184}} ,
{{0xE1BDC076,0xBFB99941}} ,
{{0xBC144107,0x3FB78146}} ,
{{0x0AA58754,0xBFB595CF}}
},

{
{{0x6E2AF2E6,0x3FBE2707}} ,
{{0x1C71C71C,0x3FEC71C7}} ,
{{0xFCD6E9E0,0xBFD948B0}} ,
{{0x80FEB690,0x3FCDF756}} ,
{{0xAB547A1A,0xBFC3FA39}} ,
{{0x98A29957,0x3FBC6990}} ,
{{0x6791851B,0xBFB50BD3}} ,
{{0xA288F0A9,0x3FB00902}} ,
{{0x5F283335,0xBFA8F192}} ,
{{0xE7508F6E,0x3FA3B540}} ,
{{0xBFE2263F,0xBF9F8850}} ,
{{0x12EF8724,0x3F99B300}} ,
{{0x99AF0E14,0xBF94F85D}}
},

{
{{0xC79A9A22,0x3FCC8FF7}} ,
{{0x9999999A,0x3FE99999}} ,
{{0x47AE147B,0xBFD47AE1}} ,
{{0xC3ECE2B2,0x3FC5D867}} ,
{{0xEB1C436A,0xBFBA36E2}} ,
{{0xA0B52722,0x3FB0C6F7}} ,
{{0x80EFFFCD,0xBFA65E9F}} ,
{{0x96E552E6,0x3F9EADA7}} ,
{{0xEF8F2073,0xBF95798E}} ,
{{0x71A5F85C,0x3F8E8A9C}} ,
{{0xDA92B978,0xBF85FD5B}} ,
{{0xDB58E5DE,0x3F801A73}} ,
{{0x588CDC6F,0xBF77A54B}}
},

{
{{0xC21C5EC2,0x3FD4618B}} ,
{{0x745D1746,0x3FE745D1}} ,
{{0x6BE69C90,0xBFD0ECF5}} ,
{{0x2A920C32,0x3FC069A8}} ,
{{0x2E70C789,0xBFB1E7A0}} ,
{{0x6DE487EB,0x3FA4D5AC}} ,
{{0x10D62349,0xBF99410F}} ,
{{0x4D0413C6,0x3F8F7C55}} ,
{{0x91387428,0xBF84094D}} ,
{{0xF6A6C05D,0x3F79E7BE}} ,
{{0xEBD82341,0xBF70F4C1}} ,
{{0x9251A7CF,0x3F668CAC}} ,
{{0x0A9A7DB2,0xBF5E184B}}
}
};

db_number const Poly_l[8][2] =
{

{
{{0x78F609A7,0x3C68F7E9}} ,
{{0x7230A5F8,0x3C86407B}} ,

},

{
{{0x792F85DD,0xBC6F6650}} ,
{{0xF7DDA2CA,0xBC7EB9DF}} ,

},

{
{{0xE8EE7A2B,0x3C21F5B3}} ,
{{0x2CEA2030,0x3C92F660}} ,

},

{
{{0x527726CF,0x3C5478A8}} ,
{{0xA4B8A6F9,0x3C71A77F}} ,

},

{
{{0x00000000,0x00000000}} ,
{{0xAAF9039B,0xBC03E91A}} ,

},

{
{{0xDBC40302,0xBC3615B0}} ,
{{0x047FA77E,0x3C8C55D6}} ,

},

{
{{0x97A41961,0xBC64F68B}} ,
{{0x9DE4BE41,0xBC89A0B0}} ,

},

{
{{0x97512C50,0x3C7F42DE}} ,
{{0x934D136D,0xBC7749EB}} ,

}
};
# 14 "log_fast.c" 2


extern void scs_log(scs_ptr,db_number, int);
# 74 "log_fast.c"
static void log_quick(double *pres_hi, double *pres_lo, int* prndcstindex, db_number * py, int E) {
   double ln2_times_E_HI, ln2_times_E_LO, res_hi, res_lo;
   double z, res, P_hi, P_lo;
   int k, i;

    res=(double)E;
    if(E<0) E=-E;


    i = ((((*py).i[1] & 0x001F0000)>>16)-6) ;
    if (i < 10)
      i = i>>1;
    else
      i = ((i-1)>>1);

    z = (*py).d - (middle[i]).d;



    {double _z, _a=res*ln2hi.d, _b=res*ln2lo.d; ln2_times_E_HI = _a + _b; _z = ln2_times_E_HI - _a; ln2_times_E_LO = _b - _z; };



    res = (Poly_h[i][12]).d;

    for(k=12 -1; k>1; k--){
      res *= z;
      res += (Poly_h[i][k]).d;
    }

    if(E <= 185.000) {

      if(E==0) {
 *prndcstindex = 0 ;

 { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&P_hi, &P_lo, res, z); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =res, _v=z; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&P_hi = _u*_v; *&P_lo = (((u1*v1-*&P_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };
 do {double r,s;r = ((Poly_h[i][1]).d)+(P_hi);s = ((Poly_h[i][1]).d)-r+(P_hi)+(P_lo)+((Poly_l[i][1]).d);*&res_hi = r+s;*&res_lo = r - (*&res_hi) + s;} while(0);
 { double mh, ml; const double c = 134217729.; double up, u1, u2, vp, v1, v2; up = (res_hi)*c; vp = (z)*c; u1 = ((res_hi)-up)+up; v1 = ((z)-vp)+vp; u2 = (res_hi)-u1; v2 = (z)-v1; mh = (res_hi)*(z); ml = (((u1*v1-mh)+(u1*v2))+(u2*v1))+(u2*v2); ml += (res_hi)*(0.) + (res_lo)*(z); *&P_hi = mh+ml; *&P_lo = mh - (*&P_hi) + ml; };
 do {double r,s;r = ((Poly_h[i][0]).d)+(P_hi);s = ((Poly_h[i][0]).d)-r+(P_hi)+(P_lo)+((Poly_l[i][0]).d);*pres_hi = r+s;*pres_lo = r - (*pres_hi) + s;} while(0);
      }
      else
 {
   if(E > 23.000)
     *prndcstindex = 2;
   else
     *prndcstindex =1;
   P_hi=res*z;
   {double _z, _a=(Poly_h[i][1]).d, _b=(Poly_l[i][1]).d + P_hi; res_hi = _a + _b; _z = res_hi - _a; res_lo = _b - _z; };
   { double mh, ml; const double c = 134217729.; double up, u1, u2, vp, v1, v2; up = (res_hi)*c; vp = (z)*c; u1 = ((res_hi)-up)+up; v1 = ((z)-vp)+vp; u2 = (res_hi)-u1; v2 = (z)-v1; mh = (res_hi)*(z); ml = (((u1*v1-mh)+(u1*v2))+(u2*v1))+(u2*v2); ml += (res_hi)*(0.) + (res_lo)*(z); *&P_hi = mh+ml; *&P_lo = mh - (*&P_hi) + ml; };
   do {double r,s;r = ((Poly_h[i][0]).d)+(P_hi);s = ((Poly_h[i][0]).d)-r+(P_hi)+(P_lo)+((Poly_l[i][0]).d);*&res_hi = r+s;*&res_lo = r - (*&res_hi) + s;} while(0);


   do {double r,s;r = (ln2_times_E_HI)+(res_hi);s = (ln2_times_E_HI)-r+(res_hi)+(res_lo)+(ln2_times_E_LO);*pres_hi = r+s;*pres_lo = r - (*pres_hi) + s;} while(0);
 }
    }
    else {

      *prndcstindex = 3 ;
      res = z*((Poly_h[i][1]).d + z*res);

      {double _z, _a=ln2_times_E_HI, _b=(Poly_h[i][0]).d; P_hi = _a + _b; _z = P_hi - _a; P_lo = _b - _z; };
      {double _z, _a=P_hi, _b=(res + ((Poly_l[i][0]).d + (ln2_times_E_LO + P_lo))); *pres_hi = _a + _b; _z = *pres_hi - _a; *pres_lo = _b - _z; };





    }
}
# 153 "log_fast.c"
 double log_rn(double x){
   db_number y;
   double res_hi,res_lo,roundcst;
   int E,rndcstindex;

   E=0;
   y.d=x;


   if (y.i[1] < 0x00100000){
     if (((y.i[1] & 0x7fffffff)|y.i[0])==0){

   return NInf.d;
     }
     if (y.i[1] < 0){

   return NaN.d;
     }

     E = -52;
     y.d *= two52.d;
   }

   if (y.i[1] >= 0x7ff00000){
     return x+x;
   }


   E += (y.i[1]>>20)-1023;
   y.i[1] = (y.i[1] & 0x000fffff) | 0x3ff00000;
   if (y.d > 1.4142135623730950489e0){
     y.d *= 0.5;
     E++;
   }


   log_quick(&res_hi, &res_lo, &rndcstindex, &y, E);
   roundcst = rncst[rndcstindex];



  if(res_hi == (res_hi + (res_lo * roundcst)))
    return res_hi;
  else {
    scs_t res;



    scs_log(res, y, E);
    scs_get_d(&res_hi, res);
    return res_hi;
  }
 }
# 225 "log_fast.c"
 double log_rd(double x){
   db_number y;
   double res_hi,res_lo,roundcst;
   int E,rndcstindex;
   db_number absyh, absyl, u, u53;

   E=0;
   y.d=x;


   if (y.i[1] < 0x00100000){
     if (((y.i[1] & 0x7fffffff)|y.i[0])==0){

   return NInf.d;
     }
     if (y.i[1] < 0){

  return NaN.d;
     }

     E = -52;
     y.d *= two52.d;
   }

   if (y.i[1] >= 0x7ff00000){
     return x+x;
   }


   E += (y.i[1]>>20)-1023;
   y.i[1] = (y.i[1] & 0x000fffff) | 0x3ff00000;
   if (y.d > 1.4142135623730950489e0){
     y.d *= 0.5;
     E++;
   }

  log_quick(&res_hi, &res_lo, &rndcstindex, &y, E);
   roundcst = delta[rndcstindex];


   absyh.d=res_hi;
   absyl.d=res_lo;

   absyh.l = absyh.l & 0x7fffffffffffffffLL;
   absyl.l = absyl.l & 0x7fffffffffffffffLL;
   u53.l = (absyh.l & 0x7ff0000000000000LL) + 0x0010000000000000LL;
   u.l = u53.l - 0x0350000000000000LL;

   if(absyl.d > roundcst*u53.d){
     if(res_lo<0.)
       res_hi -= u.d;
    return res_hi;
  }else {
    scs_t res;



    scs_log(res, y, E);
    scs_get_d_minf(&res_hi, res);
    return res_hi;
  }
}
# 299 "log_fast.c"
double log_ru(double x){
   db_number y;
   double res_hi,res_lo,roundcst;
   int E,rndcstindex;
   db_number absyh, absyl, u, u53;

   E=0;
   y.d=x;


   if (y.i[1] < 0x00100000){
     if (((y.i[1] & 0x7fffffff)|y.i[0])==0){

   return NInf.d;
     }
     if (y.i[1] < 0){

  return NaN.d;
     }

     E = -52;
     y.d *= two52.d;
   }

   if (y.i[1] >= 0x7ff00000){
     return x+x;
   }

    E += (y.i[1]>>20)-1023;
   y.i[1] = (y.i[1] & 0x000fffff) | 0x3ff00000;
   if (y.d > 1.4142135623730950489e0){
     y.d *= 0.5;
     E++;
   }

   log_quick(&res_hi, &res_lo, &rndcstindex, &y, E);
   roundcst = delta[rndcstindex];



   absyh.d=res_hi;
   absyl.d=res_lo;

   absyh.l = absyh.l & 0x7fffffffffffffffLL;
   absyl.l = absyl.l & 0x7fffffffffffffffLL;
   u53.l = (absyh.l & 0x7ff0000000000000LL) + 0x0010000000000000LL;
   u.l = u53.l - 0x0350000000000000LL;

   if(absyl.d > roundcst*u53.d){
     if(res_lo>0.) res_hi += u.d;
     return res_hi;
   }else {
     scs_t res;



     scs_log(res, y, E);
     scs_get_d_pinf(&res_hi, res);
     return res_hi;
   }
}
# 370 "log_fast.c"
double log_rz(double x){
  if(x>1)
    return log_rd(x);
  else
    return log_ru(x);
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c atan.c
# 1 "atan.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "atan.c"
# 9 "atan.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 10 "atan.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 11 "atan.c" 2
# 1 "atan.h" 1
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 2 "atan.h" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 3 "atan.h" 2


static const scs constant_poly[10]=

{{{0x035e50d7, 0x250d7943, 0x179435e5, 0x035e50d7,
0x250d7943, 0x179435e5, 0x035e50d7, 0x250d7943},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x03c3c3c3, 0x30f0f0f0, 0x3c3c3c3c, 0x0f0f0f0f,
0x03c3c3c3, 0x30f0f0f0, 0x3c3c3c3c, 0x0f0f0f0f},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x04444444, 0x11111111, 0x04444444, 0x11111111,
0x04444444, 0x11111111, 0x04444444, 0x11111111},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x04ec4ec4, 0x3b13b13b, 0x04ec4ec4, 0x3b13b13b,
0x04ec4ec4, 0x3b13b13b, 0x04ec4ec4, 0x3b13b13b},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x05d1745d, 0x05d1745d, 0x05d1745d, 0x05d1745d,
0x05d1745d, 0x05d1745d, 0x05d1745d, 0x05d1745d},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x071c71c7, 0x071c71c7, 0x071c71c7, 0x071c71c7,
0x071c71c7, 0x071c71c7, 0x071c71c7, 0x071c71c7},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x09249249, 0x09249249, 0x09249249, 0x09249249,
0x09249249, 0x09249249, 0x09249249, 0x09249249},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x0ccccccc, 0x33333333, 0x0ccccccc, 0x33333333,
0x0ccccccc, 0x33333333, 0x0ccccccc, 0x33333333},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x15555555, 0x15555555, 0x15555555, 0x15555555,
0x15555555, 0x15555555, 0x15555555, 0x15555555},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x00000001, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
};
# 125 "atan.h"
static const db_number atan_blolo[62] = {
         {{0xA947CCE9,0xB8D1C5F3}} ,
         {{0x3C749846,0xB8B05943}} ,
         {{0x267751FB,0x38FC2F2A}} ,
         {{0xDDA4249D,0x38D44E61}} ,
         {{0xA5B245C8,0xB906FBFA}} ,
         {{0x67CABE65,0xB8DE1E98}} ,
         {{0x45D13048,0x38BD7B8F}} ,
         {{0x23AD369B,0xB9049436}} ,
         {{0xF6BB1DB7,0xB8F98586}} ,
         {{0xCB4D6219,0xB89BC985}} ,
          {{0x9C3884F4,0xB8C4002C}} ,
          {{0x893058D9,0x3910CBC4}} ,
          {{0xFF010BB5,0xB8F5408B}} ,
          {{0xB5813578,0xB908570F}} ,
          {{0x7E967248,0x39155B89}} ,
          {{0x2031F115,0xB8CD159A}} ,
          {{0x0FC3C81C,0xB8E8D9C6}} ,
          {{0x8219F20D,0x38C0AC30}} ,
          {{0x32EDCB95,0x38B36506}} ,
          {{0x5932E7C2,0xB8FD57B0}} ,
          {{0x91A2D916,0x38C73827}} ,
          {{0x9EC5116C,0xB92FE60D}} ,
          {{0x6A3B8AE2,0x3903AADF}} ,
          {{0x71B87C3C,0xB88D6A01}} ,
          {{0xEA5AC8E8,0xB8E17427}} ,
          {{0xF776B005,0x38F4ED52}} ,
          {{0x75D2B05C,0xB9265B23}} ,
          {{0xAFEAB282,0xB8DA45DA}} ,
          {{0xBD16D3D4,0x3912EF75}} ,
          {{0xE904B022,0x390AB3D7}} ,
          {{0x3F9F468B,0xB8EE688B}} ,
          {{0x71A98823,0xB9225DF6}} ,
          {{0x522BE0F8,0xB8CC82B0}} ,
          {{0x88BB6A0B,0xB912AFE0}} ,
          {{0x8640FAE5,0x38D4DC99}} ,
          {{0x406A343B,0xB9016FC6}} ,
          {{0x126FC74C,0x3909804C}} ,
          {{0xE5B0956F,0x39051033}} ,
          {{0x203B114C,0xB910CADC}} ,
          {{0xF97ED36B,0x38EFCAC7}} ,
          {{0xB51D77B4,0xB92464C0}} ,
          {{0x2D4A03DE,0x391157F3}} ,
          {{0x136A8DDE,0xB92BD929}} ,
          {{0x035DF6B3,0x390F1514}} ,
          {{0x19DB7E3B,0xB92606EC}} ,
          {{0xCDA1B51D,0x393B104B}} ,
          {{0xF88A520C,0x3935FB01}} ,
          {{0x1940944D,0xB9189ED1}} ,
          {{0x38D4794B,0xB914E8F2}} ,
          {{0x73581CF5,0xB93DF07A}} ,
          {{0x727CE10C,0xB939C22F}} ,
          {{0x26E1A810,0xB8EF37D2}} ,
          {{0x45155DAA,0x391A4251}} ,
          {{0xA42D0A9A,0xB9126D2F}} ,
          {{0x3DFAFFA5,0xB93CAF8B}} ,
          {{0xA9A35831,0x3919C170}} ,
          {{0xAE51E4B3,0xB924C2B3}} ,
          {{0x0DE98917,0xB8DEFB7D}} ,
          {{0x1ABE373B,0xB916EC39}} ,
          {{0x4135ADBE,0x391C5BA4}} ,
          {{0xD7179E60,0xB9112692}} ,
          {{0xBCC93753,0x392F96B5}} ,
};
# 12 "atan.c" 2
# 1 "atan_fast.h" 1
# 11 "atan_fast.h"
static const db_number HALFPI = {{0x54442D18,0x3FF921FB}};static const db_number HALFPI_TO_PLUS_INFINITY = {{0x54442D19,0x3FF921FB}};




static const double rncst[4] ={
1.00471410340923143324336636863711169631585562456166 ,
1.00006870424588938643610373270542712731412393623032 ,
1.00242490224514544614748698750112537725343031524972 ,
1.00001422622079385564641521206858537640371764609881 ,
 };
static const double epsilon[4] ={
2.60610366274046896231976436965093787902741931215705e-19 ,
3.76068267671359496762058387277198914980606464859832e-21 ,
1.34293370661420878668381572561396622952281116281661e-19 ,
7.36768713583100422889235387213940577473795817850748e-22 ,
 };

static double const coef_poly[4] =
{
                        0.11111111111111110494320541874913033097982406616211,
                        -0.14285714285714284921269268124888185411691665649414,
                        0.20000000000000001110223024625156540423631668090820,
                        -0.33333333333333331482961625624739099293947219848633,
 };
# 361 "atan_fast.h"
static db_number const arctan_table[62][4] =
{
{
              {{0xBCCE533D,0x3F89FDF8}} ,
              {{0x27760007,0x3F99FF0B}} ,
              {{0x4969F96C,0x3F99FD9D}} ,{{0x750685EA,0xBC301997}} ,
}
,{
              {{0x90CEBC31,0x3FA3809F}} ,
              {{0xE3547CC2,0x3FAA0355}} ,
              {{0x4936262D,0x3FA9FD9D}} ,{{0x3A2D0F59,0xBC4C1F96}} ,
}
,{
              {{0x68FBA526,0x3FB04419}} ,
              {{0xABF7BFB9,0x3FB387E0}} ,
              {{0xF6C1E06C,0x3FB37E35}} ,{{0x8378E024,0xBC556710}} ,
}
,{
              {{0xABCDFA25,0x3FB6CD46}} ,
              {{0xE265B8AB,0x3FBA1491}} ,
              {{0x48CF1996,0x3FB9FD9D}} ,{{0xB73BED3C,0xBC4360DC}} ,
}
,{
              {{0x6D2EA546,0x3FBD5E09}} ,
              {{0x9124D46B,0x3FC054FA}} ,
              {{0x4D618156,0x3FC03E82}} ,{{0x49A86344,0x3C62604E}} ,
}
,{
              {{0xD691E891,0x3FC1FC4E}} ,
              {{0x51F57043,0x3FC3A526}} ,
              {{0xF64EF83E,0x3FC37E35}} ,{{0xB4A55EA6,0x3C5F2B13}} ,
}
,{
              {{0x531F610B,0x3FC54FA6}} ,
              {{0xB99F2601,0x3FC6FBF4}} ,
              {{0x9F302425,0x3FC6BDE9}} ,{{0xC4D330CE,0xBC23B62A}} ,
}
,{
              {{0x0550EAF1,0x3FC8AA38}} ,
              {{0x61D9D63D,0x3FCA5A97}} ,
              {{0x48053FC8,0x3FC9FD9D}} ,{{0x98474AF1,0xBC67A12C}} ,
}
,{
              {{0xB8975BD9,0x3FCC0D3A}} ,
              {{0xBCBF6ABC,0x3FCDC24A}} ,
              {{0xF0CE8DD9,0x3FCD3D50}} ,{{0x3A31D353,0x3C6EF257}} ,
}
,{
              {{0xFEE46885,0x3FCF79F0}} ,
              {{0xFCF66B85,0x3FD09A2B}} ,
              {{0x4CC62C6B,0x3FD03E82}} ,{{0x95C6E482,0x3C5DA594}} ,
}
,{
               {{0x943274CA,0x3FD178D5}} ,
               {{0x8943E603,0x3FD2590B}} ,
               {{0x211F7969,0x3FD1DE5C}} ,{{0x0B01EF44,0x3C3C4E87}} ,
}
,{
               {{0xB2CFB5F7,0x3FD33AE4}} ,
               {{0x81B0D1DF,0x3FD41E78}} ,
               {{0xF5735AA1,0x3FD37E35}} ,{{0x8D437AE9,0xBC772D05}} ,
}
,{
               {{0x0DD40A5B,0x3FD503DF}} ,
               {{0x1EB6A659,0x3FD5EB31}} ,
               {{0xC9C20060,0x3FD51E0F}} ,{{0x20BA7A7B,0xBC6C0F53}} ,
}
,{
               {{0x3998DD14,0x3FD6D488}} ,
               {{0xAAF865B1,0x3FD7BFFE}} ,
               {{0x9E0B9E67,0x3FD6BDE9}} ,{{0x870D5E8E,0x3C797792}} ,
}
,{
               {{0x964ABFA5,0x3FD8ADAF}} ,
               {{0x00A6F44E,0x3FD99DB7}} ,
               {{0x72506BCA,0x3FD85DC3}} ,{{0x43A1CBA3,0x3C720BD1}} ,
}
,{
               {{0xE241114E,0x3FDA9031}} ,
               {{0x327F0E90,0x3FDB853E}} ,
               {{0x4690A2C8,0x3FD9FD9D}} ,{{0xEFB73034,0xBC6A048E}} ,
}
,{
               {{0xFB78B41D,0x3FDC7CFA}} ,
               {{0x67BE333A,0x3FDD7788}} ,
               {{0x1ACC80A6,0x3FDB9D77}} ,{{0xE8FB154D,0x3C6A9BD7}} ,
}
,{
               {{0xD82B9DC6,0x3FDE7507}} ,
               {{0xF3B4AACC,0x3FDF759B}} ,
               {{0xEF044589,0x3FDD3D50}} ,{{0x09E8652E,0x3C575857}} ,
}
,{
               {{0x5FF4B2AB,0x3FE03CB4}} ,
               {{0xD9952BEF,0x3FE0C049}} ,
               {{0xC338344A,0x3FDEDD2A}} ,{{0x81513292,0x3C23C787}} ,
}
,{
               {{0xE826E4EA,0x3FE145A1}} ,
               {{0xDDD96DE0,0x3FE1CCD0}} ,
               {{0x4BB44923,0x3FE03E82}} ,{{0x49DF0A58,0x3C8CAF01}} ,
}
,{
               {{0xED462BAC,0x3FE255EB}} ,
               {{0x35B0819C,0x3FE2E109}} ,
               {{0x35CAD39D,0x3FE10E6F}} ,{{0x0D1EB36B,0x3C45DB33}} ,
}
,{
               {{0xD4CDD9AC,0x3FE36E3F}} ,
               {{0xF51235D9,0x3FE3FDA7}} ,
               {{0x1FDFDE84,0x3FE1DE5C}} ,{{0xD3921CA6,0x3C86FBEF}} ,
}
,{
               {{0xE1FB2991,0x3FE48F5A}} ,
               {{0x18D0CCB0,0x3FE52373}} ,
               {{0x09F38FC9,0x3FE2AE49}} ,{{0x058084C6,0xBC84BBB5}} ,
}
,{
               {{0x5FE86E27,0x3FE5BA0C}} ,
               {{0xDA588D41,0x3FE65343}} ,
               {{0xF4060E3D,0x3FE37E35}} ,{{0xAE25B9B7,0x3BF6235C}} ,
}
,{
               {{0x22C19A5D,0x3FE6EF38}} ,
               {{0x629002BC,0x3FE78E09}} ,
               {{0xDE17817F,0x3FE44E22}} ,{{0x1A6D25E3,0xBC85F46E}} ,
}
,{
               {{0x70F967BD,0x3FE82FD9}} ,
               {{0xEE8B9555,0x3FE8D4CB}} ,
               {{0xC82811DC,0x3FE51E0F}} ,{{0xFCB9720C,0xBC81CCF7}} ,
}
,{
               {{0x69351A0D,0x3FE97D06}} ,
               {{0x7D0D616A,0x3FEA28B0}} ,
               {{0xB237E838,0x3FE5EDFC}} ,{{0xF8F29048,0xBC833EA8}} ,
}
,{
               {{0xFE730FCD,0x3FEAD7F3}} ,
               {{0x21335E3D,0x3FEB8AFD}} ,
               {{0x9C472DF1,0x3FE6BDE9}} ,{{0x80DED249,0x3C5E8127}} ,
}
,{
               {{0xAA0A733E,0x3FEC41FA}} ,
               {{0x1D9A7669,0x3FECFD1E}} ,
               {{0x86560CC5,0x3FE78DD6}} ,{{0x9396D511,0xBC7E962F}} ,
}
,{
               {{0xFAEEEADF,0x3FEDBC9B}} ,
               {{0xF41419E7,0x3FEE80AB}} ,
               {{0x7064AEB4,0x3FE85DC3}} ,{{0x5225ACD1,0x3C77C0FC}} ,
}
,{
               {{0x33AC790A,0x3FEF4989}} ,
               {{0x50BB2D02,0x3FF00BB9}} ,
               {{0x5A733DE9,0x3FE92DB0}} ,{{0xA318D041,0xBC6598C9}} ,
}
,{
               {{0x9AC922B4,0x3FF07555}} ,
               {{0x25F4BC57,0x3FF0E1BD}} ,
               {{0x4481E499,0x3FE9FD9D}} ,{{0x9464A40D,0xBC82E89F}} ,
}
,{
               {{0x0440E8D3,0x3FF15116}} ,
               {{0xDEC8DA1A,0x3FF1C388}} ,
               {{0x2E90CCEA,0x3FEACD8A}} ,{{0xFE4AC33B,0x3C60B8DB}} ,
}
,{
               {{0x329D3DD8,0x3FF23941}} ,
               {{0x8F9CF3AD,0x3FF2B26D}} ,
               {{0x18A020D8,0x3FEB9D77}} ,{{0x43DDC7EE,0x3C714EA3}} ,
}
,{
               {{0xE2DB7094,0x3FF32F3F}} ,
               {{0xC485093A,0x3FF3AFED}} ,
               {{0x02B00A17,0x3FEC6D64}} ,{{0xC1E56981,0x3C5CF722}} ,
}
,{
               {{0xD38A35D7,0x3FF434B0}} ,
               {{0x16D89BC7,0x3FF4BDC7}} ,
               {{0xECC0B1F8,0x3FED3D50}} ,{{0xC689AE1B,0x3C8FFD9A}} ,
}
,{
               {{0x6F41F96D,0x3FF54B73}} ,
               {{0x11C53212,0x3FF5DDFE}} ,
               {{0xD6D24151,0x3FEE0D3D}} ,{{0xC830B564,0xBC654F0F}} ,
}
,{
               {{0x165CA5E1,0x3FF675B5}} ,
               {{0x13170C5B,0x3FF712ED}} ,
               {{0xC0E4E05B,0x3FEEDD2A}} ,{{0xBF676FFE,0xBC8FEAC3}} ,
}
,{
               {{0xD0DEA3C6,0x3FF7B601}} ,
               {{0x11FBEA40,0x3FF85F57}} ,
               {{0xAAF8B69E,0x3FEFAD17}} ,{{0xE69F3AF7,0x3C8B8DA3}} ,
}
,{
               {{0x79506F51,0x3FF90F59}} ,
               {{0x8AF460DF,0x3FF9C67F}} ,
               {{0x4A86F56B,0x3FF03E82}} ,{{0xDE1DF40B,0x3C8C4641}} ,
}
,{
               {{0xD74CF791,0x3FFA854A}} ,
               {{0x4A696F14,0x3FFB4C49}} ,
               {{0xBF92516C,0x3FF0A678}} ,{{0x6A0966AF,0xBC9194FF}} ,
}
,{
               {{0xB3972246,0x3FFC1C16}} ,
               {{0x80F0B83E,0x3FFCF55E}} ,
               {{0x349E81BA,0x3FF10E6F}} ,{{0x3CD05C13,0x3C9C7D12}} ,
}
,{
               {{0xC6DB1831,0x3FFDD8DD}} ,
               {{0x927D039C,0x3FFEC765}} ,
               {{0xA9AB9836,0x3FF17665}} ,{{0x7B9C115B,0xBC924DFA}} ,
}
,{
               {{0xA4F6D032,0x3FFFC1DD}} ,
               {{0xCDEC630C,0x400064A3}} ,
               {{0x1EB9A624,0x3FF1DE5C}} ,{{0x595EC15D,0xBC7002F6}} ,
}
,{
               {{0x56AEFAF2,0x4000EF61}} ,
               {{0x02FA3F97,0x400181C8}} ,
               {{0x93C8BC28,0x3FF24652}} ,{{0xC61E8575,0xBC8FE336}} ,
}
,{
               {{0xFD9A80C1,0x40021C8B}} ,
               {{0x188015C0,0x4002C078}} ,
               {{0x08D8EA37,0x3FF2AE49}} ,{{0x56281657,0xBC99C943}} ,
}
,{
               {{0x7D67269C,0x40036E71}} ,
               {{0x17EDBBF3,0x4004277C}} ,
               {{0x7DEA3F8C,0x3FF3163F}} ,{{0x90EB721B,0x3C9AD329}} ,
}
,{
               {{0xF069F1E4,0x4004ECBF}} ,
               {{0xA99113B9,0x4005BF8F}} ,
               {{0xF2FCCAA3,0x3FF37E35}} ,{{0x8B3674F4,0xBC96C4D7}} ,
}
,{
               {{0x780169B7,0x4006A170}} ,
               {{0xEECFDE39,0x40079423}} ,
               {{0x68109926,0x3FF3E62C}} ,{{0x46562D7D,0x3C9D395E}} ,
}
,{
               {{0x319C3F02,0x400899B4}} ,
               {{0x34491C9A,0x4009B483}} ,
               {{0xDD25B7F0,0x3FF44E22}} ,{{0x96299AC9,0xBC9AC408}} ,
}
,{
               {{0x05B0834A,0x400AE75E}} ,
               {{0x6451B6E9,0x400C3595}} ,
               {{0x523C32F8,0x3FF4B619}} ,{{0x9A6CF82B,0x3C98372D}} ,
}
,{
               {{0x739BD0E3,0x400DA31D}} ,
               {{0x088B2A13,0x400F34B7}} ,
               {{0xC7541555,0x3FF51E0F}} ,{{0xD97CC177,0xBC4DA0E1}} ,
}
,{
               {{0x1886BC57,0x40107813}} ,
               {{0x8D819944,0x40116E3D}} ,
               {{0x3C6D692D,0x3FF58606}} ,{{0xD9D13C46,0xBC7DAB9D}} ,
}
,{
               {{0x8BCE2241,0x4012813A}} ,
               {{0x9F0E4EBF,0x4013B685}} ,
               {{0xB18837B4,0x3FF5EDFC}} ,{{0xBC854F71,0xBC858200}} ,
}
,{
               {{0x4ACECE78,0x40151516}} ,
               {{0xF3CD0189,0x4016A5E9}} ,
               {{0x26A48924,0x3FF655F3}} ,{{0x0EF07703,0xBC95DCD4}} ,
}
,{
               {{0x9526FAB9,0x401874CE}} ,
               {{0xBA057809,0x401A9194}} ,
               {{0x9BC264B7,0x3FF6BDE9}} ,{{0x555821B5,0x3C839FB7}} ,
}
,{
               {{0xE094C913,0x401D11EB}} ,
               {{0xA01EFACA,0x40200A31}} ,
               {{0x10E1D0A5,0x3FF725E0}} ,{{0x56DADB03,0x3C86B63B}} ,
}
,{
               {{0x220DFA19,0x4021E2BC}} ,
               {{0xFBA72898,0x40243445}} ,
               {{0x8602D21D,0x3FF78DD6}} ,{{0x4D2EA6E0,0xBC9FD7D6}} ,
}
,{
               {{0xD0337C49,0x40273463}} ,
               {{0x4A4A5A1D,0x402B3DC7}} ,
               {{0xFB256D40,0x3FF7F5CC}} ,{{0xA28CF77C,0x3C954E9E}} ,
}
,{
               {{0x26350916,0x40307B8E}} ,
               {{0x24D415BF,0x4034DBD6}} ,
               {{0x7049A526,0x3FF85DC3}} ,{{0xE9374500,0xBC8424E5}} ,
}
,{
               {{0x497BF2F2,0x403C62CF}} ,
               {{0x6C3EC43C,0x40463208}} ,
               {{0xE56F7BD2,0x3FF8C5B9}} ,{{0x2F7EC153,0xBC81D57A}} ,
}
,{
               {{0xFA9E0EF4,0x40596CC3}} ,
               {{0x7BFF8329,0x4054B2C4}} ,
               {{0xF333CBBA,0x3FF8F082}} ,{{0x3909BC3A,0x3C952577}} ,
}
,
};
# 13 "atan.c" 2

void scs_atan(scs_ptr, scs_ptr);
double scs_atan_rd(double);
double scs_atan_ru(double);
double scs_atan_rn(double);
# 61 "atan.c"
void scs_atan(scs_ptr res_scs, scs_ptr x){
  scs_t atanbhihi,atanbhilo, atanblo, atanbhi, atanb;
  double test;
  scs_t bsc_ptr;
  scs_t X_scs, denom1_scs, denom2_scs, poly_scs, X2;
  db_number db;
  int k;

  scs_get_d(&db.d, x);


  crlibm_second_step_taken++;



  if (db.d > 0.01269144369306618004077670910586377580133132772550) {

    int i=31;
    if (db.d < arctan_table[i][0].d) i-= 16;
    else i+=16;
    if (db.d < arctan_table[i][0].d) i-= 8;
    else i+= 8;
    if (db.d < arctan_table[i][0].d) i-= 4;
    else i+= 4;
    if (db.d < arctan_table[i][0].d) i-= 2;
    else i+= 2;
    if (db.d < arctan_table[i][0].d) i-= 1;
    else if (i<61) i+= 1;
    if (db.d < arctan_table[i][0].d) i-= 1;


    scs_set_d(bsc_ptr, arctan_table[i][1].d);

    scs_mul(denom1_scs,bsc_ptr,x);
    scs_add(denom2_scs,denom1_scs,(scs_ptr)(&scs_one));
    scs_sub(X_scs,x,bsc_ptr);
    scs_div(X_scs,X_scs,denom2_scs);

    scs_get_d(&test,X_scs);


    scs_square(X2, X_scs);
    scs_set(res_scs, (scs_ptr)&constant_poly[0]);
    for(k=1; k < 10; k++) {

      scs_mul(res_scs, res_scs, X2);
      scs_add(res_scs, (scs_ptr)&constant_poly[k], res_scs);
    }
    scs_mul(poly_scs, res_scs, X_scs);




    scs_set_d( atanbhihi , arctan_table[i][2].d);
    scs_set_d( atanbhilo , arctan_table[i][3].d);
    scs_set_d( atanblo , atan_blolo[i].d);
    scs_add(atanbhi,atanbhihi,atanbhilo);
    scs_add(atanb,atanbhi,atanblo);
    scs_add(res_scs,atanb, poly_scs);
    return;
  }

  else
    {


      scs_square(X2, x);
      scs_set(res_scs, (scs_ptr)&constant_poly[0]);
      for(k=1; k < 10; k++) {

        scs_mul(res_scs, res_scs, X2);
        scs_add(res_scs, (scs_ptr)&constant_poly[k], res_scs);
      }
      scs_mul(res_scs, res_scs, x);
      return;
    }
}







double scs_atan_rn(double x){



  scs_t sc1;
  scs_t res_scs;
  db_number res;
  int sign =1;

  res.d = x;

  if (x < 0){
    sign = -1;
    x *= -1;
  }
  scs_set_d(sc1, x);
  scs_atan(res_scs, sc1);
  scs_get_d(&res.d, res_scs);

  res.d *= sign;

  return res.d;
}







double scs_atan_rd(double x){
  scs_t sc1;
  scs_t res_scs;
  db_number res;
  int sign = 1;

  res.d = x;


  if (x < 0){
    sign = -1;
    x *= -1;
  }
  scs_set_d(sc1, x);
  scs_atan(res_scs, sc1);
  if (sign == -1){
    scs_get_d_pinf(&res.d, res_scs);
    res.d *= -1;
    return res.d;
  }
  else{
    scs_get_d_minf(&res.d, res_scs);
    return res.d;
  }
}







double scs_atan_ru(double x){
  scs_t sc1;
  scs_t res_scs;
  db_number res;
  int sign = 1;

  res.d = x;


  if (x < 0){
    sign = -1;
    x *= -1;
  }

  scs_set_d(sc1, x);
  scs_atan(res_scs, sc1);
  if (sign == -1){
    scs_get_d_minf(&res.d, res_scs);
    res.d *= -1;
    return res.d;
  }
  else{
    scs_get_d_pinf(&res.d, res_scs);
    return res.d;
  }
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c atan_fast.c
# 1 "atan_fast.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "atan_fast.c"
# 10 "atan_fast.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 11 "atan_fast.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 12 "atan_fast.c" 2
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 13 "atan_fast.c" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 14 "atan_fast.c" 2
# 1 "atan_fast.h" 1
# 11 "atan_fast.h"
static const db_number HALFPI = {{0x54442D18,0x3FF921FB}};static const db_number HALFPI_TO_PLUS_INFINITY = {{0x54442D19,0x3FF921FB}};




static const double rncst[4] ={
1.00471410340923143324336636863711169631585562456166 ,
1.00006870424588938643610373270542712731412393623032 ,
1.00242490224514544614748698750112537725343031524972 ,
1.00001422622079385564641521206858537640371764609881 ,
 };
static const double epsilon[4] ={
2.60610366274046896231976436965093787902741931215705e-19 ,
3.76068267671359496762058387277198914980606464859832e-21 ,
1.34293370661420878668381572561396622952281116281661e-19 ,
7.36768713583100422889235387213940577473795817850748e-22 ,
 };

static double const coef_poly[4] =
{
                        0.11111111111111110494320541874913033097982406616211,
                        -0.14285714285714284921269268124888185411691665649414,
                        0.20000000000000001110223024625156540423631668090820,
                        -0.33333333333333331482961625624739099293947219848633,
 };
# 361 "atan_fast.h"
static db_number const arctan_table[62][4] =
{
{
              {{0xBCCE533D,0x3F89FDF8}} ,
              {{0x27760007,0x3F99FF0B}} ,
              {{0x4969F96C,0x3F99FD9D}} ,{{0x750685EA,0xBC301997}} ,
}
,{
              {{0x90CEBC31,0x3FA3809F}} ,
              {{0xE3547CC2,0x3FAA0355}} ,
              {{0x4936262D,0x3FA9FD9D}} ,{{0x3A2D0F59,0xBC4C1F96}} ,
}
,{
              {{0x68FBA526,0x3FB04419}} ,
              {{0xABF7BFB9,0x3FB387E0}} ,
              {{0xF6C1E06C,0x3FB37E35}} ,{{0x8378E024,0xBC556710}} ,
}
,{
              {{0xABCDFA25,0x3FB6CD46}} ,
              {{0xE265B8AB,0x3FBA1491}} ,
              {{0x48CF1996,0x3FB9FD9D}} ,{{0xB73BED3C,0xBC4360DC}} ,
}
,{
              {{0x6D2EA546,0x3FBD5E09}} ,
              {{0x9124D46B,0x3FC054FA}} ,
              {{0x4D618156,0x3FC03E82}} ,{{0x49A86344,0x3C62604E}} ,
}
,{
              {{0xD691E891,0x3FC1FC4E}} ,
              {{0x51F57043,0x3FC3A526}} ,
              {{0xF64EF83E,0x3FC37E35}} ,{{0xB4A55EA6,0x3C5F2B13}} ,
}
,{
              {{0x531F610B,0x3FC54FA6}} ,
              {{0xB99F2601,0x3FC6FBF4}} ,
              {{0x9F302425,0x3FC6BDE9}} ,{{0xC4D330CE,0xBC23B62A}} ,
}
,{
              {{0x0550EAF1,0x3FC8AA38}} ,
              {{0x61D9D63D,0x3FCA5A97}} ,
              {{0x48053FC8,0x3FC9FD9D}} ,{{0x98474AF1,0xBC67A12C}} ,
}
,{
              {{0xB8975BD9,0x3FCC0D3A}} ,
              {{0xBCBF6ABC,0x3FCDC24A}} ,
              {{0xF0CE8DD9,0x3FCD3D50}} ,{{0x3A31D353,0x3C6EF257}} ,
}
,{
              {{0xFEE46885,0x3FCF79F0}} ,
              {{0xFCF66B85,0x3FD09A2B}} ,
              {{0x4CC62C6B,0x3FD03E82}} ,{{0x95C6E482,0x3C5DA594}} ,
}
,{
               {{0x943274CA,0x3FD178D5}} ,
               {{0x8943E603,0x3FD2590B}} ,
               {{0x211F7969,0x3FD1DE5C}} ,{{0x0B01EF44,0x3C3C4E87}} ,
}
,{
               {{0xB2CFB5F7,0x3FD33AE4}} ,
               {{0x81B0D1DF,0x3FD41E78}} ,
               {{0xF5735AA1,0x3FD37E35}} ,{{0x8D437AE9,0xBC772D05}} ,
}
,{
               {{0x0DD40A5B,0x3FD503DF}} ,
               {{0x1EB6A659,0x3FD5EB31}} ,
               {{0xC9C20060,0x3FD51E0F}} ,{{0x20BA7A7B,0xBC6C0F53}} ,
}
,{
               {{0x3998DD14,0x3FD6D488}} ,
               {{0xAAF865B1,0x3FD7BFFE}} ,
               {{0x9E0B9E67,0x3FD6BDE9}} ,{{0x870D5E8E,0x3C797792}} ,
}
,{
               {{0x964ABFA5,0x3FD8ADAF}} ,
               {{0x00A6F44E,0x3FD99DB7}} ,
               {{0x72506BCA,0x3FD85DC3}} ,{{0x43A1CBA3,0x3C720BD1}} ,
}
,{
               {{0xE241114E,0x3FDA9031}} ,
               {{0x327F0E90,0x3FDB853E}} ,
               {{0x4690A2C8,0x3FD9FD9D}} ,{{0xEFB73034,0xBC6A048E}} ,
}
,{
               {{0xFB78B41D,0x3FDC7CFA}} ,
               {{0x67BE333A,0x3FDD7788}} ,
               {{0x1ACC80A6,0x3FDB9D77}} ,{{0xE8FB154D,0x3C6A9BD7}} ,
}
,{
               {{0xD82B9DC6,0x3FDE7507}} ,
               {{0xF3B4AACC,0x3FDF759B}} ,
               {{0xEF044589,0x3FDD3D50}} ,{{0x09E8652E,0x3C575857}} ,
}
,{
               {{0x5FF4B2AB,0x3FE03CB4}} ,
               {{0xD9952BEF,0x3FE0C049}} ,
               {{0xC338344A,0x3FDEDD2A}} ,{{0x81513292,0x3C23C787}} ,
}
,{
               {{0xE826E4EA,0x3FE145A1}} ,
               {{0xDDD96DE0,0x3FE1CCD0}} ,
               {{0x4BB44923,0x3FE03E82}} ,{{0x49DF0A58,0x3C8CAF01}} ,
}
,{
               {{0xED462BAC,0x3FE255EB}} ,
               {{0x35B0819C,0x3FE2E109}} ,
               {{0x35CAD39D,0x3FE10E6F}} ,{{0x0D1EB36B,0x3C45DB33}} ,
}
,{
               {{0xD4CDD9AC,0x3FE36E3F}} ,
               {{0xF51235D9,0x3FE3FDA7}} ,
               {{0x1FDFDE84,0x3FE1DE5C}} ,{{0xD3921CA6,0x3C86FBEF}} ,
}
,{
               {{0xE1FB2991,0x3FE48F5A}} ,
               {{0x18D0CCB0,0x3FE52373}} ,
               {{0x09F38FC9,0x3FE2AE49}} ,{{0x058084C6,0xBC84BBB5}} ,
}
,{
               {{0x5FE86E27,0x3FE5BA0C}} ,
               {{0xDA588D41,0x3FE65343}} ,
               {{0xF4060E3D,0x3FE37E35}} ,{{0xAE25B9B7,0x3BF6235C}} ,
}
,{
               {{0x22C19A5D,0x3FE6EF38}} ,
               {{0x629002BC,0x3FE78E09}} ,
               {{0xDE17817F,0x3FE44E22}} ,{{0x1A6D25E3,0xBC85F46E}} ,
}
,{
               {{0x70F967BD,0x3FE82FD9}} ,
               {{0xEE8B9555,0x3FE8D4CB}} ,
               {{0xC82811DC,0x3FE51E0F}} ,{{0xFCB9720C,0xBC81CCF7}} ,
}
,{
               {{0x69351A0D,0x3FE97D06}} ,
               {{0x7D0D616A,0x3FEA28B0}} ,
               {{0xB237E838,0x3FE5EDFC}} ,{{0xF8F29048,0xBC833EA8}} ,
}
,{
               {{0xFE730FCD,0x3FEAD7F3}} ,
               {{0x21335E3D,0x3FEB8AFD}} ,
               {{0x9C472DF1,0x3FE6BDE9}} ,{{0x80DED249,0x3C5E8127}} ,
}
,{
               {{0xAA0A733E,0x3FEC41FA}} ,
               {{0x1D9A7669,0x3FECFD1E}} ,
               {{0x86560CC5,0x3FE78DD6}} ,{{0x9396D511,0xBC7E962F}} ,
}
,{
               {{0xFAEEEADF,0x3FEDBC9B}} ,
               {{0xF41419E7,0x3FEE80AB}} ,
               {{0x7064AEB4,0x3FE85DC3}} ,{{0x5225ACD1,0x3C77C0FC}} ,
}
,{
               {{0x33AC790A,0x3FEF4989}} ,
               {{0x50BB2D02,0x3FF00BB9}} ,
               {{0x5A733DE9,0x3FE92DB0}} ,{{0xA318D041,0xBC6598C9}} ,
}
,{
               {{0x9AC922B4,0x3FF07555}} ,
               {{0x25F4BC57,0x3FF0E1BD}} ,
               {{0x4481E499,0x3FE9FD9D}} ,{{0x9464A40D,0xBC82E89F}} ,
}
,{
               {{0x0440E8D3,0x3FF15116}} ,
               {{0xDEC8DA1A,0x3FF1C388}} ,
               {{0x2E90CCEA,0x3FEACD8A}} ,{{0xFE4AC33B,0x3C60B8DB}} ,
}
,{
               {{0x329D3DD8,0x3FF23941}} ,
               {{0x8F9CF3AD,0x3FF2B26D}} ,
               {{0x18A020D8,0x3FEB9D77}} ,{{0x43DDC7EE,0x3C714EA3}} ,
}
,{
               {{0xE2DB7094,0x3FF32F3F}} ,
               {{0xC485093A,0x3FF3AFED}} ,
               {{0x02B00A17,0x3FEC6D64}} ,{{0xC1E56981,0x3C5CF722}} ,
}
,{
               {{0xD38A35D7,0x3FF434B0}} ,
               {{0x16D89BC7,0x3FF4BDC7}} ,
               {{0xECC0B1F8,0x3FED3D50}} ,{{0xC689AE1B,0x3C8FFD9A}} ,
}
,{
               {{0x6F41F96D,0x3FF54B73}} ,
               {{0x11C53212,0x3FF5DDFE}} ,
               {{0xD6D24151,0x3FEE0D3D}} ,{{0xC830B564,0xBC654F0F}} ,
}
,{
               {{0x165CA5E1,0x3FF675B5}} ,
               {{0x13170C5B,0x3FF712ED}} ,
               {{0xC0E4E05B,0x3FEEDD2A}} ,{{0xBF676FFE,0xBC8FEAC3}} ,
}
,{
               {{0xD0DEA3C6,0x3FF7B601}} ,
               {{0x11FBEA40,0x3FF85F57}} ,
               {{0xAAF8B69E,0x3FEFAD17}} ,{{0xE69F3AF7,0x3C8B8DA3}} ,
}
,{
               {{0x79506F51,0x3FF90F59}} ,
               {{0x8AF460DF,0x3FF9C67F}} ,
               {{0x4A86F56B,0x3FF03E82}} ,{{0xDE1DF40B,0x3C8C4641}} ,
}
,{
               {{0xD74CF791,0x3FFA854A}} ,
               {{0x4A696F14,0x3FFB4C49}} ,
               {{0xBF92516C,0x3FF0A678}} ,{{0x6A0966AF,0xBC9194FF}} ,
}
,{
               {{0xB3972246,0x3FFC1C16}} ,
               {{0x80F0B83E,0x3FFCF55E}} ,
               {{0x349E81BA,0x3FF10E6F}} ,{{0x3CD05C13,0x3C9C7D12}} ,
}
,{
               {{0xC6DB1831,0x3FFDD8DD}} ,
               {{0x927D039C,0x3FFEC765}} ,
               {{0xA9AB9836,0x3FF17665}} ,{{0x7B9C115B,0xBC924DFA}} ,
}
,{
               {{0xA4F6D032,0x3FFFC1DD}} ,
               {{0xCDEC630C,0x400064A3}} ,
               {{0x1EB9A624,0x3FF1DE5C}} ,{{0x595EC15D,0xBC7002F6}} ,
}
,{
               {{0x56AEFAF2,0x4000EF61}} ,
               {{0x02FA3F97,0x400181C8}} ,
               {{0x93C8BC28,0x3FF24652}} ,{{0xC61E8575,0xBC8FE336}} ,
}
,{
               {{0xFD9A80C1,0x40021C8B}} ,
               {{0x188015C0,0x4002C078}} ,
               {{0x08D8EA37,0x3FF2AE49}} ,{{0x56281657,0xBC99C943}} ,
}
,{
               {{0x7D67269C,0x40036E71}} ,
               {{0x17EDBBF3,0x4004277C}} ,
               {{0x7DEA3F8C,0x3FF3163F}} ,{{0x90EB721B,0x3C9AD329}} ,
}
,{
               {{0xF069F1E4,0x4004ECBF}} ,
               {{0xA99113B9,0x4005BF8F}} ,
               {{0xF2FCCAA3,0x3FF37E35}} ,{{0x8B3674F4,0xBC96C4D7}} ,
}
,{
               {{0x780169B7,0x4006A170}} ,
               {{0xEECFDE39,0x40079423}} ,
               {{0x68109926,0x3FF3E62C}} ,{{0x46562D7D,0x3C9D395E}} ,
}
,{
               {{0x319C3F02,0x400899B4}} ,
               {{0x34491C9A,0x4009B483}} ,
               {{0xDD25B7F0,0x3FF44E22}} ,{{0x96299AC9,0xBC9AC408}} ,
}
,{
               {{0x05B0834A,0x400AE75E}} ,
               {{0x6451B6E9,0x400C3595}} ,
               {{0x523C32F8,0x3FF4B619}} ,{{0x9A6CF82B,0x3C98372D}} ,
}
,{
               {{0x739BD0E3,0x400DA31D}} ,
               {{0x088B2A13,0x400F34B7}} ,
               {{0xC7541555,0x3FF51E0F}} ,{{0xD97CC177,0xBC4DA0E1}} ,
}
,{
               {{0x1886BC57,0x40107813}} ,
               {{0x8D819944,0x40116E3D}} ,
               {{0x3C6D692D,0x3FF58606}} ,{{0xD9D13C46,0xBC7DAB9D}} ,
}
,{
               {{0x8BCE2241,0x4012813A}} ,
               {{0x9F0E4EBF,0x4013B685}} ,
               {{0xB18837B4,0x3FF5EDFC}} ,{{0xBC854F71,0xBC858200}} ,
}
,{
               {{0x4ACECE78,0x40151516}} ,
               {{0xF3CD0189,0x4016A5E9}} ,
               {{0x26A48924,0x3FF655F3}} ,{{0x0EF07703,0xBC95DCD4}} ,
}
,{
               {{0x9526FAB9,0x401874CE}} ,
               {{0xBA057809,0x401A9194}} ,
               {{0x9BC264B7,0x3FF6BDE9}} ,{{0x555821B5,0x3C839FB7}} ,
}
,{
               {{0xE094C913,0x401D11EB}} ,
               {{0xA01EFACA,0x40200A31}} ,
               {{0x10E1D0A5,0x3FF725E0}} ,{{0x56DADB03,0x3C86B63B}} ,
}
,{
               {{0x220DFA19,0x4021E2BC}} ,
               {{0xFBA72898,0x40243445}} ,
               {{0x8602D21D,0x3FF78DD6}} ,{{0x4D2EA6E0,0xBC9FD7D6}} ,
}
,{
               {{0xD0337C49,0x40273463}} ,
               {{0x4A4A5A1D,0x402B3DC7}} ,
               {{0xFB256D40,0x3FF7F5CC}} ,{{0xA28CF77C,0x3C954E9E}} ,
}
,{
               {{0x26350916,0x40307B8E}} ,
               {{0x24D415BF,0x4034DBD6}} ,
               {{0x7049A526,0x3FF85DC3}} ,{{0xE9374500,0xBC8424E5}} ,
}
,{
               {{0x497BF2F2,0x403C62CF}} ,
               {{0x6C3EC43C,0x40463208}} ,
               {{0xE56F7BD2,0x3FF8C5B9}} ,{{0x2F7EC153,0xBC81D57A}} ,
}
,{
               {{0xFA9E0EF4,0x40596CC3}} ,
               {{0x7BFF8329,0x4054B2C4}} ,
               {{0xF333CBBA,0x3FF8F082}} ,{{0x3909BC3A,0x3C952577}} ,
}
,
};
# 15 "atan_fast.c" 2


double scs_atan_rn(double);
double scs_atan_rd(double);
double scs_atan_ru(double);

static void atan_quick(double *atanhi,double *atanlo, int *index_of_e, double x) {

  double tmphi,tmplo, x0hi,x0lo;
  double q,Xred2,x2;
  double Xredhi,Xredlo;
  double atanlolo;
  double tmphi2, tmplo2;


  int i;

  if (x > 0.01269144369306618004077670910586377580133132772550)
    {
# 43 "atan_fast.c"
      double xmBihi, xmBilo;

      if (x > arctan_table[61][1].d) {
        i=61;
        {double _z, _a=x, _b=-arctan_table[61][1].d; xmBihi = _a + _b; _z = xmBihi - _a; xmBilo = _b - _z; };
      }
      else
        {

          i=31;
          if (x < arctan_table[i][0].d) i-= 16;
          else i+=16;
          if (x < arctan_table[i][0].d) i-= 8;
          else i+= 8;
          if (x < arctan_table[i][0].d) i-= 4;
          else i+= 4;
          if (x < arctan_table[i][0].d) i-= 2;
          else i+= 2;
          if (x < arctan_table[i][0].d) i-= 1;
          else i+= 1;
          if (x < arctan_table[i][0].d) i-= 1;
          xmBihi = x-arctan_table[i][1].d;
          xmBilo = 0.0;
        }
# 80 "atan_fast.c"
      { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&tmphi, &tmplo, x, arctan_table[i][1].d); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =x, _v=arctan_table[i][1].d; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&tmphi = _u*_v; *&tmplo = (((u1*v1-*&tmphi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };

      if (x > 1)
        do {double r,s;r = (tmphi)+(1.0);s = (tmphi)-r+(1.0)+(0.0)+(tmplo);*&x0hi = r+s;*&x0lo = r - (*&x0hi) + s;} while(0);
      else {do {double r,s;r = (1.0)+(tmphi);s = (1.0)-r+(tmphi)+(tmplo)+(0.0);*&x0hi = r+s;*&x0lo = r - (*&x0hi) + s;} while(0);}

      { double _ch,_cl,_uh,_ul; _ch=(xmBihi)/(x0hi); { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&_uh, &_ul, _ch, (x0hi)); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =_ch, _v=(x0hi); printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&_uh = _u*_v; *&_ul = (((u1*v1-*&_uh)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); }; _cl=(((((xmBihi)-_uh)-_ul)+(xmBilo))-_ch*(x0lo))/(x0hi); *&Xredhi=_ch+_cl; *&Xredlo=(_ch-(*&Xredhi))+_cl; };
# 95 "atan_fast.c"
      Xred2 = Xredhi*Xredhi;

      q = Xred2*(coef_poly[3]+Xred2*
                 (coef_poly[2]+Xred2*
                  (coef_poly[1]+Xred2*
                   coef_poly[0]))) ;


      atanlolo = Xredlo+ arctan_table[i][3].d + Xredhi*q;
      {double _z, _a=arctan_table[i][2].d, _b=Xredhi; tmphi2 = _a + _b; _z = tmphi2 - _a; tmplo2 = _b - _z; };
      {double _z, _a=tmphi2, _b=(tmplo2+atanlolo); *atanhi = _a + _b; _z = *atanhi - _a; *atanlo = _b - _z; };

      if (i<10)
        *index_of_e = 0;
      else
        *index_of_e = 1;
    }
  else

    {







      x2 = x*x;
      q = x2*(coef_poly[3]+x2*
              (coef_poly[2]+x2*
               (coef_poly[1]+x2*
                coef_poly[0]))) ;
      {double _z, _a=x, _b=x*q; *atanhi = _a + _b; _z = *atanhi - _a; *atanlo = _b - _z; };

      if (x > 0x3F500000)
        *index_of_e = 2;
      else
        *index_of_e = 3;
    }
}
# 151 "atan_fast.c"
extern double atan_rn(double x) {
  unsigned int hx;
  double atanhi,atanlo;
  int index_of_e;
  double sign;
  db_number x_db;
  x_db.d = x;
  hx = x_db.i[1] & 0x7fffffff;
  if(x>=0)
    {sign=1;}
  else
    {x=-x;
    sign =-1;}


  if ( hx >= 0x43500000)
    {
      if ( (hx & 0x000fffff) == 0x00080000 && x_db.i[0] == 0)
        return x;
      else
        return sign*HALFPI.d;
    }
  else
    if ( hx < 0x3E400000 )
      {return sign*x;}

  atan_quick(&atanhi, &atanlo,&index_of_e ,x);

  if (atanhi == (atanhi + (atanlo*rncst[index_of_e])))
    return sign*atanhi;
  else
    {

      return sign*scs_atan_rn(x);
    }
}






extern double atan_rd(double x) {
  unsigned int hx;
  int sign;
  double atanhi,atanlo;
  db_number absyh, absyl, u, u53;
  int index_of_e;
  double roundcst;
  db_number x_db;
  x_db.d = x;
  hx = x_db.i[1] & 0x7FFFFFFF;

  if (x<0)
    {sign = -1;
    x = -x;}
  else sign = 1;


  if ( hx >= 0x43500000)
    {
      if ( (hx & 0x000fffff) == 0x00080000 && x_db.i[0] == 0 )
        return x;
      else
        if (sign>0)
          return HALFPI.d;
        else
          return -HALFPI_TO_PLUS_INFINITY.d;
    }
  else
    if ( hx < 0x3E400000 )
      {if (sign>0)
        {if(x==0)
          {x_db.i[1] = 0x80000000;
          x_db.i[0] = 0;}
        else
          x_db.l--;
        return x_db.d;
        }
      else
        return -x;
      }

  atan_quick(&atanhi, &atanlo,&index_of_e, x);
  roundcst = epsilon[index_of_e];
  atanhi = sign*atanhi;
  atanlo = sign*atanlo;



  absyh.d=atanhi;
  absyl.d=atanlo;

  absyh.l = absyh.l & 0x7fffffffffffffffLL;
  absyl.l = absyl.l & 0x7fffffffffffffffLL;
  u53.l = (absyh.l & 0x7ff0000000000000LL) + 0x0010000000000000LL;
  u.l = u53.l - 0x0350000000000000LL;

  if(absyl.d > roundcst*u53.d){
    if(atanlo<0.)
      {atanhi -= u.d;}
    return atanhi;
  }
  else {
    return scs_atan_rd(sign*x);
  }
}







extern double atan_ru(double x) {
  unsigned int hx;
  db_number x_db;
  double atanhi,atanlo;
  db_number absyh, absyl, u, u53;
  int index_of_e;
  int sign;
  double roundcst;

  if (x<0)
    {sign = -1;
    x = -x;}
  else
    sign = 1;

  x_db.d = x;
  hx = x_db.i[1] & 0x7FFFFFFF;


  if ( hx >= 0x43500000)
    {
      if ( (hx & 0x000fffff) == 0x00080000 && x_db.i[0] == 0 )
        return x;
      else
        {
          if (sign>0)
            return HALFPI_TO_PLUS_INFINITY.d;
        else
          return -HALFPI.d;
        }
    }
  else

    if ( hx < 0x3E400000 )
      {if (sign<0)
        {x_db.l--;
        return -x_db.d;
        }
      else
        if(x==0)
          return 0;
      return x;
      }

  atan_quick(&atanhi, &atanlo, &index_of_e, x);
  roundcst = epsilon[index_of_e];
  atanhi = sign*atanhi;
  atanlo = sign*atanlo;



  absyh.d=atanhi;
  absyl.d=atanlo;

  absyh.l = absyh.l & 0x7fffffffffffffffLL;
  absyl.l = absyl.l & 0x7fffffffffffffffLL;
  u53.l = (absyh.l & 0x7ff0000000000000LL) + 0x0010000000000000LL;
  u.l = u53.l - 0x0350000000000000LL;

  if(absyl.d > roundcst*u53.d){
    if(atanlo>0.)
      {atanhi += u.d;}
    return atanhi;
  }
  else {
    return scs_atan_ru(sign*x);
  }
}







extern double atan_rz(double x) {
  if (x>0)
    return atan_rd(x);
  else
    return atan_ru(x);
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c ericc.c
# 1 "ericc.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "ericc.c"
# 11 "ericc.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 12 "ericc.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 13 "ericc.c" 2
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 14 "ericc.c" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 15 "ericc.c" 2


double exp_rn_(double *pointx) {
  double x,resultx;
  x=*pointx;
  resultx=exp_rn(x);
  return resultx;
}


double log_rn_(double *pointx) {
   double x,resultx;
  x=*pointx;
  resultx=log_rn(x);
  return resultx;
}

double log10_rn_(double *pointx) {
   double x,resultx;
  x=*pointx;
  resultx=log10_rn(x);
  return resultx;
}

double atan_rn_(double *pointx) {
          double x,resultx;
  x=*pointx;
  resultx=atan_rn(x);
  return resultx;
}

double tan_rn_(double *pointx) {
          double x,resultx;
  x=*pointx;
  resultx=tan_rn(x);
  return resultx;
}

double sin_rn_(double *pointx) {
          double x,resultx;
  x=*pointx;
  resultx=sin_rn(x);
  return resultx;
}

double cos_rn_(double *pointx) {
          double x,resultx;
  x=*pointx;
  resultx=cos_rn(x);
  return resultx;
}

double sinh_rn_(double *pointx) {
          double x,resultx;
  x=*pointx;
  resultx=sinh_rn(x);
  return resultx;
}

double cosh_rn_(double *pointx) {
          double x,resultx;
  x=*pointx;
  resultx=cosh_rn(x);
  return resultx;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c csh_fast.c
# 1 "csh_fast.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "csh_fast.c"
# 9 "csh_fast.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 10 "csh_fast.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 324 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4


# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 206 "/usr/include/stdlib.h" 3 4


__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 276 "/usr/include/stdlib.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}




__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}

# 372 "/usr/include/stdlib.h" 3 4


extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));

# 463 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));

# 512 "/usr/include/stdlib.h" 3 4


extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 529 "/usr/include/stdlib.h" 3 4

# 538 "/usr/include/stdlib.h" 3 4




extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));













extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 741 "/usr/include/stdlib.h" 3 4
typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 770 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 856 "/usr/include/stdlib.h" 3 4



extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));

# 951 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/bits/stdlib-float.h" 3 4

extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}

# 952 "/usr/include/stdlib.h" 2 3 4
# 964 "/usr/include/stdlib.h" 3 4

# 11 "csh_fast.c" 2
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 12 "csh_fast.c" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 13 "csh_fast.c" 2
# 1 "csh_fast.h" 1
# 390 "csh_fast.h"
  db_number const inv_ln_2 = {{0x652B82FE,0x3FF71547}};
  db_number const ln2_hi = {{0xFEFA3800,0x3FE62E42}};
  db_number const ln2_lo = {{0x93C76730,0x3D2EF357}};
  db_number const two_43_44 = {{0x00000000,0x42B80000}};
  db_number const two_minus_30 = {{0x00000000,0x3D700000}};
  int const bias = 89 ;


  db_number const max_input_ch = {{0x8FB9F87E,0x408633CE}};
  db_number const max_input_sh = {{0x8FB9F87E,0x408633CE}};
  db_number const round_cst_cosh = {{0x26E978D5,0x3FF00831}};
  db_number const round_cst_sinh = {{0x26E978D5,0x3FF00831}};
static const db_number cosh_sinh_table[179][4] = {
 {{{0xD2F35F97, 0x3FF0FA08}}, {{0x9DAB3AF1, 0x3C9B39D1}},
   {{0xBB84C928, 0xBFD6B36F}}, {{0xFEFE1E5F, 0xBC68DAF8}}},
 {{{0x73177841, 0x3FF0F464}}, {{0x29551C51, 0xBC97DF60}},
   {{0xE6A06FC9, 0xBFD66F92}}, {{0xD9A66B42, 0x3C70A785}}},
 {{{0x07A16DB4, 0x3FF0EED1}}, {{0xD3E071F5, 0x3C988108}},
   {{0x8150DBAB, 0xBFD62BCC}}, {{0xF95D00CA, 0xBC7700BD}}},
 {{{0x8AFDD406, 0x3FF0E94E}}, {{0xB0B14F49, 0xBC9330CB}},
   {{0x47CFA1DB, 0xBFD5E81C}}, {{0x4E7B2C63, 0x3C791EC5}}},
 {{{0xF7AA2E1B, 0x3FF0E3DC}}, {{0xF7FB3140, 0x3C9C05BD}},
   {{0xF66C8331, 0xBFD5A481}}, {{0xCFF78DD1, 0xBC6E8E0C}}},
 {{{0x4834E82E, 0x3FF0DE7C}}, {{0x5F430E44, 0xBC877BEC}},
   {{0x498D28AA, 0xBFD560FD}}, {{0xCCEA8A26, 0x3C4F07B3}}},
 {{{0x773D5255, 0x3FF0D92C}}, {{0x3D5D1DA2, 0xBC84956C}},
   {{0xFDACDFC5, 0xBFD51D8D}}, {{0x98966B86, 0x3C419F0E}}},
 {{{0x7F739B28, 0x3FF0D3ED}}, {{0xEA8A9ED5, 0xBC99722F}},
   {{0xCF5C5703, 0xBFD4DA33}}, {{0x7BE71FBE, 0xBC7B1F07}}},
 {{{0x5B98CA6C, 0x3FF0CEBF}}, {{0x09B9F220, 0x3C9E8080}},
   {{0x7B415A78, 0xBFD496EE}}, {{0xBDFE61F1, 0x3C51C3BA}}},
 {{{0x067EBBDA, 0x3FF0C9A2}}, {{0x803D61F3, 0x3C813CD8}},
   {{0xBE16906C, 0xBFD453BD}}, {{0x45D8536E, 0xBC78D781}}},
 {{{0x7B0819E9, 0x3FF0C495}}, {{0x6E52BA24, 0x3C9A26E0}},
   {{0x54AB361D, 0xBFD410A1}}, {{0xCF7DA2E8, 0x3C78DCB6}}},
 {{{0xB42858B8, 0x3FF0BF99}}, {{0x0B1F30A5, 0xBC67AD83}},
   {{0xFBE2DC86, 0xBFD3CD98}}, {{0x269038FC, 0x3C7D0A5E}}},
 {{{0xACE3B0FC, 0x3FF0BAAE}}, {{0x75521E77, 0xBC93292F}},
   {{0x70B52549, 0xBFD38AA4}}, {{0x0B01B8A6, 0x3C67F94B}}},
 {{{0x604F1B07, 0x3FF0B5D4}}, {{0x07EECFA5, 0x3C732C14}},
   {{0x702D7FA4, 0xBFD347C3}}, {{0x701422C8, 0xBC7435BE}}},
 {{{0xC99049DE, 0x3FF0B10A}}, {{0x610FCC2E, 0xBC617C2D}},
   {{0xB76AE57E, 0xBFD304F5}}, {{0x42E4CA9C, 0x3C75EB09}}},
 {{{0xE3DDA65B, 0x3FF0AC51}}, {{0x9DACA977, 0x3C9B22C0}},
   {{0x039F9881, 0xBFD2C23B}}, {{0x9B082732, 0xBC577301}}},
 {{{0xAA7E4A68, 0x3FF0A7A9}}, {{0x281520E0, 0x3C71B296}},
   {{0x1210DF54, 0xBFD27F93}}, {{0x502A1E59, 0x3C6EF999}}},
 {{{0x18C9FC41, 0x3FF0A312}}, {{0x09E044C2, 0x3C885259}},
   {{0xA016C2D9, 0xBFD23CFD}}, {{0x449D986B, 0x3C500762}}},
 {{{0x2A2929D1, 0x3FF09E8B}}, {{0x535446B4, 0xBC9EE5F5}},
   {{0x6B1BCB8A, 0xBFD1FA7A}}, {{0x5A4CB636, 0xBC50621A}}},
 {{{0xDA14E415, 0x3FF09A14}}, {{0x233B29C8, 0xBC965668}},
   {{0x309CBEE1, 0xBFD1B809}}, {{0xBBB1CB75, 0xBC6E5B16}}},
 {{{0x2416DA9A, 0x3FF095AF}}, {{0x39DC7749, 0x3C8024A0}},
   {{0xAE285CD6, 0xBFD175A9}}, {{0xC4496E39, 0x3C3DB749}}},
 {{{0x03C95705, 0x3FF0915A}}, {{0x0BD1CD00, 0x3C78A8A6}},
   {{0xA15F1D6C, 0xBFD1335B}}, {{0x341ED7B6, 0x3C53CE0F}}},
 {{{0x74D738AC, 0x3FF08D15}}, {{0xC4A8C043, 0xBC984BD5}},
   {{0xC7F2EE53, 0xBFD0F11E}}, {{0xC5355AFC, 0xBC75BADF}}},
 {{{0x72FBF041, 0x3FF088E1}}, {{0x0D55140F, 0xBC9DE12F}},
   {{0xDFA6F09B, 0xBFD0AEF2}}, {{0xA7827088, 0x3C414E60}}},
 {{{0xFA037B8F, 0x3FF084BD}}, {{0xE3C5EBFC, 0xBC7D97E2}},
   {{0xA64F3673, 0xBFD06CD7}}, {{0x839871E4, 0xBC6370BA}}},
 {{{0x05CA6146, 0x3FF080AB}}, {{0xFC66378F, 0xBC723216}},
   {{0xD9D08102, 0xBFD02ACC}}, {{0x20C03715, 0x3C5998B3}}},
 {{{0x923DACD6, 0x3FF07CA8}}, {{0xE736D67A, 0xBC9653A7}},
   {{0x703FFC8F, 0xBFCFD1A4}}, {{0xA8860819, 0xBC59EA3B}}},
 {{{0x9B5AEA5C, 0x3FF078B6}}, {{0x6B6D819B, 0xBC8880D6}},
   {{0xFE860E28, 0xBFCF4DCE}}, {{0xC6A2C678, 0xBC6883D4}}},
 {{{0x1D3022A1, 0x3FF074D5}}, {{0x2426EF93, 0x3C9E93F8}},
   {{0xDA9DBA19, 0xBFCECA18}}, {{0x491D8A98, 0x3C36D470}}},
 {{{0x13DBD729, 0x3FF07104}}, {{0xCA5328ED, 0x3C766560}},
   {{0x80D0D17F, 0xBFCE4681}}, {{0x658D0660, 0x3C605627}}},
 {{{0x7B8CFE4D, 0x3FF06D43}}, {{0xD1025E7E, 0xBC73ADF7}},
   {{0x6D87EF96, 0xBFCDC308}}, {{0x2A97B34C, 0x3C6C0BD9}}},
 {{{0x5082FF6E, 0x3FF06993}}, {{0xD7395A9F, 0x3C7685C4}},
   {{0x1D49F620, 0xBFCD3FAD}}, {{0x26ECE4F0, 0x3C5DE851}}},
 {{{0x8F0DAF34, 0x3FF065F3}}, {{0xAF1520A9, 0xBC7821B3}},
   {{0x0CBB89ED, 0xBFCCBC6F}}, {{0x51092884, 0xBC4B40A0}}},
 {{{0x338D4BDC, 0x3FF06264}}, {{0xF34422A4, 0xBC90000F}},
   {{0xB89E8F7F, 0xBFCC394D}}, {{0x52292D2D, 0xBC646F77}}},
 {{{0x3A727999, 0x3FF05EE5}}, {{0x6647668D, 0x3C92512F}},
   {{0x9DD1A7CC, 0xBFCBB648}}, {{0x3ED3824D, 0x3C234425}}},
 {{{0xA03E3F07, 0x3FF05B76}}, {{0x2B52E765, 0x3C7CA615}},
   {{0x394FAD1B, 0xBFCB335F}}, {{0x34B51ACE, 0xBC47F257}}},
 {{{0x618201A8, 0x3FF05818}}, {{0x5A557953, 0xBC8BFA98}},
   {{0x082F3002, 0xBFCAB091}}, {{0x60BF022C, 0x3C4B6626}}},
 {{{0x7ADF8277, 0x3FF054CA}}, {{0x377A9F8C, 0x3C89C0C1}},
   {{0x87A1F479, 0xBFCA2DDD}}, {{0xF07409B2, 0xBC67E5CE}}},
 {{{0xE908DA8C, 0x3FF0518C}}, {{0x25A535E2, 0x3C987D18}},
   {{0x34F46F10, 0xBFC9AB44}}, {{0x57573053, 0xBC1274BC}}},
 {{{0xA8C077CC, 0x3FF04E5F}}, {{0xECF07BF2, 0xBC9D8190}},
   {{0x8D8D4236, 0xBFC928C4}}, {{0x370EDF81, 0xBC556048}}},
 {{{0xB6D919A9, 0x3FF04B42}}, {{0x92AA0A0B, 0xBC9F2338}},
   {{0x0EECBBA5, 0xBFC8A65E}}, {{0x0663DF15, 0x3C6339DB}}},
 {{{0x1035CDFA, 0x3FF04836}}, {{0xBBC5EC1C, 0xBC9E50AA}},
   {{0x36AC51DD, 0xBFC82410}}, {{0xDF8CB355, 0xBC5A42DC}}},
 {{{0xB1C9EDDA, 0x3FF04539}}, {{0xC7598281, 0x3C8D2224}},
   {{0x827E21C3, 0xBFC7A1DA}}, {{0x06D46085, 0xBC6CB79F}}},
 {{{0x98991A9F, 0x3FF0424D}}, {{0xA130683D, 0x3C66BB23}},
   {{0x702C6C4F, 0xBFC71FBC}}, {{0x00C832DD, 0xBC6BAA2A}}},
 {{{0xC1B73AD9, 0x3FF03F71}}, {{0xA8202E85, 0xBC885168}},
   {{0x7D991458, 0xBFC69DB5}}, {{0x97B08BD2, 0x3C69321C}}},
 {{{0x2A487769, 0x3FF03CA6}}, {{0xB95A2E63, 0xBC9585FD}},
   {{0x28BD1C73, 0xBFC61BC5}}, {{0x2267ECEB, 0x3C625559}}},
 {{{0xCF8138A4, 0x3FF039EA}}, {{0x8FE6098D, 0x3C8ACC0C}},
   {{0xEFA824F1, 0xBFC599EA}}, {{0x2B9BA1A8, 0x3C5F28E7}}},
 {{{0xAEA6238A, 0x3FF0373F}}, {{0x72989A92, 0xBC73E9A1}},
   {{0x507FE9EB, 0xBFC51826}}, {{0x6946DA28, 0x3C6AC219}}},
 {{{0xC50C1706, 0x3FF034A4}}, {{0x7ECC2F29, 0xBC8A9076}},
   {{0xC97FC168, 0xBFC49676}}, {{0x93C07384, 0x3C6B5D13}}},
 {{{0x10182946, 0x3FF0321A}}, {{0xFE5F3FF1, 0x3C88FA5C}},
   {{0xD8F81999, 0xBFC414DB}}, {{0x0B2260AC, 0x3C3E1438}}},
 {{{0x8D3FA521, 0x3FF02F9F}}, {{0x88A18235, 0xBC58A44A}},
   {{0xFD4DF72A, 0xBFC39354}}, {{0x64EC3B0C, 0xBC4EAAC2}}},
 {{{0x3A080789, 0x3FF02D35}}, {{0xF6C7E6F8, 0xBC907780}},
   {{0xB4FA73A6, 0xBFC311E1}}, {{0x4C87081D, 0x3C61065E}}},
 {{{0x1406FD12, 0x3FF02ADB}}, {{0x720D8336, 0x3C969329}},
   {{0x7E8A3BEF, 0xBFC29081}}, {{0x8F21151D, 0x3C65A4E2}}},
 {{{0x18E25F8B, 0x3FF02891}}, {{0x524ABA66, 0xBC9A7DA4}},
   {{0xD89D0ECD, 0xBFC20F33}}, {{0x55A9198D, 0x3C6557F7}}},
 {{{0x4650339C, 0x3FF02657}}, {{0x0688DD52, 0xBC31EC5D}},
   {{0x41E53B8C, 0xBFC18DF8}}, {{0x50E682BB, 0xBC49852D}}},
 {{{0x9A16A685, 0x3FF0242D}}, {{0x295277DB, 0xBC7352FD}},
   {{0x392720B0, 0xBFC10CCE}}, {{0x1E4C8E28, 0xBC55A291}}},
 {{{0x120C0BDE, 0x3FF02214}}, {{0x6B72974E, 0xBC9456D2}},
   {{0x3D38AAB7, 0xBFC08BB5}}, {{0xD37D3177, 0xBC60FB6D}}},
 {{{0xAC16DB6F, 0x3FF0200A}}, {{0x99576FC1, 0xBC809B4F}},
   {{0xCD00D2F1, 0xBFC00AAC}}, {{0x146349DE, 0x3C53EA29}}},
 {{{0x662DAF18, 0x3FF01E11}}, {{0x3120653C, 0xBC833F82}},
   {{0xCEEE3CC9, 0xBFBF1368}}, {{0x7BD924AB, 0x3C5213E7}}},
 {{{0x3E5740C5, 0x3FF01C28}}, {{0x9EC02117, 0x3C95D295}},
   {{0x17463991, 0xBFBE1197}}, {{0x410E61A9, 0xBC5E1FCA}}},
 {{{0x32AA6878, 0x3FF01A4F}}, {{0x67BCC8B5, 0x3C833FDA}},
   {{0x7137CF18, 0xBFBD0FE3}}, {{0x698E234C, 0x3C4AE71D}}},
 {{{0x414E1A5C, 0x3FF01886}}, {{0xE0B191DA, 0x3C4976C5}},
   {{0xDB0F41D4, 0xBFBC0E4C}}, {{0xC9BFC58B, 0x3C586525}}},
 {{{0x687964EF, 0x3FF016CD}}, {{0x209297AD, 0xBC9D38AB}},
   {{0x5335E625, 0xBFBB0CD2}}, {{0xFBDC145A, 0xBC480157}}},
 {{{0xA6736F36, 0x3FF01524}}, {{0xC450FC30, 0x3C930803}},
   {{0xD8311EBE, 0xBFBA0B72}}, {{0x50193D71, 0xBC507AA8}}},
 {{{0xF993770A, 0x3FF0138B}}, {{0xB809A4D7, 0xBC7502E0}},
   {{0x68A15B27, 0xBFB90A2D}}, {{0x7F556554, 0xBC5B1BE3}}},
 {{{0x6040CF67, 0x3FF01203}}, {{0x422FB0BC, 0x3C9847C0}},
   {{0x03411660, 0xBFB80901}}, {{0x10739476, 0xBC5DD342}}},
 {{{0xD8F2DEDB, 0x3FF0108A}}, {{0x53B40698, 0x3C93DC21}},
   {{0xA6E3D59B, 0xBFB707EC}}, {{0xF456FFFF, 0x3C5030B2}}},
 {{{0x62311DF8, 0x3FF00F22}}, {{0xA7C410F3, 0x3C99322E}},
   {{0x5275270D, 0xBFB606EF}}, {{0xE6EE4DC3, 0x3C56910E}}},
 {{{0xFA9315DF, 0x3FF00DC9}}, {{0x602B4C56, 0xBC84D0E2}},
   {{0x04F7A0DD, 0xBFB50608}}, {{0xEDAF37D2, 0xBC239FF7}}},
 {{{0xA0C05ED4, 0x3FF00C81}}, {{0x7A57AC2E, 0xBC7736A7}},
   {{0xBD83E026, 0xBFB40535}}, {{0x5F0B8AC5, 0x3C4B9B73}}},
 {{{0x53709EEA, 0x3FF00B49}}, {{0xF8CDACD0, 0xBC9DF4D4}},
   {{0x7B47880C, 0xBFB30477}}, {{0x3B77E1B2, 0xBC517BE5}}},
 {{{0x116B88B6, 0x3FF00A21}}, {{0xAAAEC5A4, 0xBC71D458}},
   {{0x3D8440EF, 0xBFB203CC}}, {{0x41B5A4E1, 0x3C1EF162}}},
 {{{0xD988DA1B, 0x3FF00908}}, {{0x94C96CA5, 0x3C9519B1}},
   {{0x038EB7A7, 0xBFB10333}}, {{0x317BAEA7, 0x3C044B95}}},
 {{{0xAAB05B20, 0x3FF00800}}, {{0x9FEBDB21, 0xBC936EB9}},
   {{0xCCCD9CDD, 0xBFB002AA}}, {{0xFAC9C47C, 0x3C53A7FD}}},
 {{{0x83D9DCD5, 0x3FF00708}}, {{0x430DE399, 0xBC9EC747}},
   {{0x317148DD, 0xBFAE0465}}, {{0x7929765A, 0x3C4B5DB1}}},
 {{{0x640D384F, 0x3FF00620}}, {{0x170FB049, 0xBC97FCBC}},
   {{0xCDAF09CF, 0xBFAC0392}}, {{0x7D4F7337, 0x3C2B59CD}}},
 {{{0x4A624DAE, 0x3FF00548}}, {{0x23E9C180, 0x3C5D0575}},
   {{0x6D81EE12, 0xBFAA02DC}}, {{0x7E00BA39, 0x3C2A5E3B}}},
 {{{0x36010336, 0x3FF00480}}, {{0x10BEB244, 0xBC89227D}},
   {{0x10336ABF, 0xBFA80240}}, {{0xC229B627, 0x3C4941AF}}},
 {{{0x26214474, 0x3FF003C8}}, {{0x45DFB29B, 0xBC4AE17A}},
   {{0xB526F7CF, 0xBFA601BB}}, {{0x2DA1796B, 0x3C39422F}}},
 {{{0x1A0B0179, 0x3FF00320}}, {{0xD21A4C9A, 0x3C9FA45B}},
   {{0x5BD80F80, 0xBFA4014D}}, {{0xA4813A5B, 0xBC45A2E6}}},
 {{{0x11162E22, 0x3FF00288}}, {{0x2A930764, 0x3C6F0E22}},
   {{0x03D82DD0, 0xBFA200F3}}, {{0x0CBDB96B, 0xBC4BE9EF}}},
 {{{0x0AAAC16C, 0x3FF00200}}, {{0x578DDD8D, 0x3C88618F}},
   {{0xACCCD00D, 0xBFA000AA}}, {{0x1EFF67C8, 0xBBFD9E59}}},
 {{{0x0640B4E1, 0x3FF00188}}, {{0x8827C989, 0x3C7FB10F}},
   {{0xACDAE8F4, 0xBF9C00E4}}, {{0x22A0BAC6, 0xBBE94741}}},
 {{{0x0360040D, 0x3FF00120}}, {{0x402EAB5F, 0xBC884C57}},
   {{0x01033411, 0xBF980090}}, {{0xDD340191, 0xBC37E141}}},
 {{{0x01A0AC06, 0x3FF000C8}}, {{0x673A2EEE, 0xBC7BD6C4}},
   {{0x55BD803E, 0xBF940053}}, {{0xCA73460D, 0xBBD1997B}}},
 {{{0x00AAAB06, 0x3FF00080}}, {{0x2ABAD90D, 0xBC93E2BE}},
   {{0xAACCCCDA, 0xBF90002A}}, {{0x3AC1711C, 0x3C293021}}},
 {{{0x00360010, 0x3FF00048}}, {{0xDB8F0A40, 0x3C899AE6}},
   {{0x00103337, 0xBF880024}}, {{0xAF88B300, 0x3C250734}}},
 {{{0x000AAAAC, 0x3FF00020}}, {{0x1862ADFD, 0x3C76C186}},
   {{0xAAACCCCD, 0xBF80000A}}, {{0x9193923E, 0xBBBA01FC}}},
 {{{0x0000AAAB, 0x3FF00008}}, {{0x8D68D67B, 0xBC93E93E}},
   {{0xAAAACCCD, 0xBF700002}}, {{0x17BFB4DB, 0x3C093193}}},
 {{{0x00000000, 0x3FF00000}}, {{0x00000000, 0x00000000}},
   {{0x00000000, 0x00000000}}, {{0x00000000, 0x00000000}}},
 {{{0x0000AAAB, 0x3FF00008}}, {{0x8D68D67B, 0xBC93E93E}},
   {{0xAAAACCCD, 0x3F700002}}, {{0x17BFB4DB, 0xBC093193}}},
 {{{0x000AAAAC, 0x3FF00020}}, {{0x1862ADFD, 0x3C76C186}},
   {{0xAAACCCCD, 0x3F80000A}}, {{0x9193923E, 0x3BBA01FC}}},
 {{{0x00360010, 0x3FF00048}}, {{0xDB8F0A40, 0x3C899AE6}},
   {{0x00103337, 0x3F880024}}, {{0xAF88B300, 0xBC250734}}},
 {{{0x00AAAB06, 0x3FF00080}}, {{0x2ABAD90D, 0xBC93E2BE}},
   {{0xAACCCCDA, 0x3F90002A}}, {{0x3AC1711C, 0xBC293021}}},
 {{{0x01A0AC06, 0x3FF000C8}}, {{0x673A2EEE, 0xBC7BD6C4}},
   {{0x55BD803E, 0x3F940053}}, {{0xCA73460D, 0x3BD1997B}}},
 {{{0x0360040D, 0x3FF00120}}, {{0x402EAB5F, 0xBC884C57}},
   {{0x01033411, 0x3F980090}}, {{0xDD340191, 0x3C37E141}}},
 {{{0x0640B4E1, 0x3FF00188}}, {{0x8827C989, 0x3C7FB10F}},
   {{0xACDAE8F4, 0x3F9C00E4}}, {{0x22A0BAC6, 0x3BE94741}}},
 {{{0x0AAAC16C, 0x3FF00200}}, {{0x578DDD8D, 0x3C88618F}},
   {{0xACCCD00D, 0x3FA000AA}}, {{0x1EFF67C8, 0x3BFD9E59}}},
 {{{0x11162E22, 0x3FF00288}}, {{0x2A930764, 0x3C6F0E22}},
   {{0x03D82DD0, 0x3FA200F3}}, {{0x0CBDB96B, 0x3C4BE9EF}}},
 {{{0x1A0B0179, 0x3FF00320}}, {{0xD21A4C9A, 0x3C9FA45B}},
   {{0x5BD80F80, 0x3FA4014D}}, {{0xA4813A5B, 0x3C45A2E6}}},
 {{{0x26214474, 0x3FF003C8}}, {{0x45DFB29B, 0xBC4AE17A}},
   {{0xB526F7CF, 0x3FA601BB}}, {{0x2DA1796B, 0xBC39422F}}},
 {{{0x36010336, 0x3FF00480}}, {{0x10BEB244, 0xBC89227D}},
   {{0x10336ABF, 0x3FA80240}}, {{0xC229B627, 0xBC4941AF}}},
 {{{0x4A624DAE, 0x3FF00548}}, {{0x23E9C180, 0x3C5D0575}},
   {{0x6D81EE12, 0x3FAA02DC}}, {{0x7E00BA39, 0xBC2A5E3B}}},
 {{{0x640D384F, 0x3FF00620}}, {{0x170FB049, 0xBC97FCBC}},
   {{0xCDAF09CF, 0x3FAC0392}}, {{0x7D4F7337, 0xBC2B59CD}}},
 {{{0x83D9DCD5, 0x3FF00708}}, {{0x430DE399, 0xBC9EC747}},
   {{0x317148DD, 0x3FAE0465}}, {{0x7929765A, 0xBC4B5DB1}}},
 {{{0xAAB05B20, 0x3FF00800}}, {{0x9FEBDB21, 0xBC936EB9}},
   {{0xCCCD9CDD, 0x3FB002AA}}, {{0xFAC9C47C, 0xBC53A7FD}}},
 {{{0xD988DA1B, 0x3FF00908}}, {{0x94C96CA5, 0x3C9519B1}},
   {{0x038EB7A7, 0x3FB10333}}, {{0x317BAEA7, 0xBC044B95}}},
 {{{0x116B88B6, 0x3FF00A21}}, {{0xAAAEC5A4, 0xBC71D458}},
   {{0x3D8440EF, 0x3FB203CC}}, {{0x41B5A4E1, 0xBC1EF162}}},
 {{{0x53709EEA, 0x3FF00B49}}, {{0xF8CDACD0, 0xBC9DF4D4}},
   {{0x7B47880C, 0x3FB30477}}, {{0x3B77E1B2, 0x3C517BE5}}},
 {{{0xA0C05ED4, 0x3FF00C81}}, {{0x7A57AC2E, 0xBC7736A7}},
   {{0xBD83E026, 0x3FB40535}}, {{0x5F0B8AC5, 0xBC4B9B73}}},
 {{{0xFA9315DF, 0x3FF00DC9}}, {{0x602B4C56, 0xBC84D0E2}},
   {{0x04F7A0DD, 0x3FB50608}}, {{0xEDAF37D2, 0x3C239FF7}}},
 {{{0x62311DF8, 0x3FF00F22}}, {{0xA7C410F3, 0x3C99322E}},
   {{0x5275270D, 0x3FB606EF}}, {{0xE6EE4DC3, 0xBC56910E}}},
 {{{0xD8F2DEDB, 0x3FF0108A}}, {{0x53B40698, 0x3C93DC21}},
   {{0xA6E3D59B, 0x3FB707EC}}, {{0xF456FFFF, 0xBC5030B2}}},
 {{{0x6040CF67, 0x3FF01203}}, {{0x422FB0BC, 0x3C9847C0}},
   {{0x03411660, 0x3FB80901}}, {{0x10739476, 0x3C5DD342}}},
 {{{0xF993770A, 0x3FF0138B}}, {{0xB809A4D7, 0xBC7502E0}},
   {{0x68A15B27, 0x3FB90A2D}}, {{0x7F556554, 0x3C5B1BE3}}},
 {{{0xA6736F36, 0x3FF01524}}, {{0xC450FC30, 0x3C930803}},
   {{0xD8311EBE, 0x3FBA0B72}}, {{0x50193D71, 0x3C507AA8}}},
 {{{0x687964EF, 0x3FF016CD}}, {{0x209297AD, 0xBC9D38AB}},
   {{0x5335E625, 0x3FBB0CD2}}, {{0xFBDC145A, 0x3C480157}}},
 {{{0x414E1A5C, 0x3FF01886}}, {{0xE0B191DA, 0x3C4976C5}},
   {{0xDB0F41D4, 0x3FBC0E4C}}, {{0xC9BFC58B, 0xBC586525}}},
 {{{0x32AA6878, 0x3FF01A4F}}, {{0x67BCC8B5, 0x3C833FDA}},
   {{0x7137CF18, 0x3FBD0FE3}}, {{0x698E234C, 0xBC4AE71D}}},
 {{{0x3E5740C5, 0x3FF01C28}}, {{0x9EC02117, 0x3C95D295}},
   {{0x17463991, 0x3FBE1197}}, {{0x410E61A9, 0x3C5E1FCA}}},
 {{{0x662DAF18, 0x3FF01E11}}, {{0x3120653C, 0xBC833F82}},
   {{0xCEEE3CC9, 0x3FBF1368}}, {{0x7BD924AB, 0xBC5213E7}}},
 {{{0xAC16DB6F, 0x3FF0200A}}, {{0x99576FC1, 0xBC809B4F}},
   {{0xCD00D2F1, 0x3FC00AAC}}, {{0x146349DE, 0xBC53EA29}}},
 {{{0x120C0BDE, 0x3FF02214}}, {{0x6B72974E, 0xBC9456D2}},
   {{0x3D38AAB7, 0x3FC08BB5}}, {{0xD37D3177, 0x3C60FB6D}}},
 {{{0x9A16A685, 0x3FF0242D}}, {{0x295277DB, 0xBC7352FD}},
   {{0x392720B0, 0x3FC10CCE}}, {{0x1E4C8E28, 0x3C55A291}}},
 {{{0x4650339C, 0x3FF02657}}, {{0x0688DD52, 0xBC31EC5D}},
   {{0x41E53B8C, 0x3FC18DF8}}, {{0x50E682BB, 0x3C49852D}}},
 {{{0x18E25F8B, 0x3FF02891}}, {{0x524ABA66, 0xBC9A7DA4}},
   {{0xD89D0ECD, 0x3FC20F33}}, {{0x55A9198D, 0xBC6557F7}}},
 {{{0x1406FD12, 0x3FF02ADB}}, {{0x720D8336, 0x3C969329}},
   {{0x7E8A3BEF, 0x3FC29081}}, {{0x8F21151D, 0xBC65A4E2}}},
 {{{0x3A080789, 0x3FF02D35}}, {{0xF6C7E6F8, 0xBC907780}},
   {{0xB4FA73A6, 0x3FC311E1}}, {{0x4C87081D, 0xBC61065E}}},
 {{{0x8D3FA521, 0x3FF02F9F}}, {{0x88A18235, 0xBC58A44A}},
   {{0xFD4DF72A, 0x3FC39354}}, {{0x64EC3B0C, 0x3C4EAAC2}}},
 {{{0x10182946, 0x3FF0321A}}, {{0xFE5F3FF1, 0x3C88FA5C}},
   {{0xD8F81999, 0x3FC414DB}}, {{0x0B2260AC, 0xBC3E1438}}},
 {{{0xC50C1706, 0x3FF034A4}}, {{0x7ECC2F29, 0xBC8A9076}},
   {{0xC97FC168, 0x3FC49676}}, {{0x93C07384, 0xBC6B5D13}}},
 {{{0xAEA6238A, 0x3FF0373F}}, {{0x72989A92, 0xBC73E9A1}},
   {{0x507FE9EB, 0x3FC51826}}, {{0x6946DA28, 0xBC6AC219}}},
 {{{0xCF8138A4, 0x3FF039EA}}, {{0x8FE6098D, 0x3C8ACC0C}},
   {{0xEFA824F1, 0x3FC599EA}}, {{0x2B9BA1A8, 0xBC5F28E7}}},
 {{{0x2A487769, 0x3FF03CA6}}, {{0xB95A2E63, 0xBC9585FD}},
   {{0x28BD1C73, 0x3FC61BC5}}, {{0x2267ECEB, 0xBC625559}}},
 {{{0xC1B73AD9, 0x3FF03F71}}, {{0xA8202E85, 0xBC885168}},
   {{0x7D991458, 0x3FC69DB5}}, {{0x97B08BD2, 0xBC69321C}}},
 {{{0x98991A9F, 0x3FF0424D}}, {{0xA130683D, 0x3C66BB23}},
   {{0x702C6C4F, 0x3FC71FBC}}, {{0x00C832DD, 0x3C6BAA2A}}},
 {{{0xB1C9EDDA, 0x3FF04539}}, {{0xC7598281, 0x3C8D2224}},
   {{0x827E21C3, 0x3FC7A1DA}}, {{0x06D46085, 0x3C6CB79F}}},
 {{{0x1035CDFA, 0x3FF04836}}, {{0xBBC5EC1C, 0xBC9E50AA}},
   {{0x36AC51DD, 0x3FC82410}}, {{0xDF8CB355, 0x3C5A42DC}}},
 {{{0xB6D919A9, 0x3FF04B42}}, {{0x92AA0A0B, 0xBC9F2338}},
   {{0x0EECBBA5, 0x3FC8A65E}}, {{0x0663DF15, 0xBC6339DB}}},
 {{{0xA8C077CC, 0x3FF04E5F}}, {{0xECF07BF2, 0xBC9D8190}},
   {{0x8D8D4236, 0x3FC928C4}}, {{0x370EDF81, 0x3C556048}}},
 {{{0xE908DA8C, 0x3FF0518C}}, {{0x25A535E2, 0x3C987D18}},
   {{0x34F46F10, 0x3FC9AB44}}, {{0x57573053, 0x3C1274BC}}},
 {{{0x7ADF8277, 0x3FF054CA}}, {{0x377A9F8C, 0x3C89C0C1}},
   {{0x87A1F479, 0x3FCA2DDD}}, {{0xF07409B2, 0x3C67E5CE}}},
 {{{0x618201A8, 0x3FF05818}}, {{0x5A557953, 0xBC8BFA98}},
   {{0x082F3002, 0x3FCAB091}}, {{0x60BF022C, 0xBC4B6626}}},
 {{{0xA03E3F07, 0x3FF05B76}}, {{0x2B52E765, 0x3C7CA615}},
   {{0x394FAD1B, 0x3FCB335F}}, {{0x34B51ACE, 0x3C47F257}}},
 {{{0x3A727999, 0x3FF05EE5}}, {{0x6647668D, 0x3C92512F}},
   {{0x9DD1A7CC, 0x3FCBB648}}, {{0x3ED3824D, 0xBC234425}}},
 {{{0x338D4BDC, 0x3FF06264}}, {{0xF34422A4, 0xBC90000F}},
   {{0xB89E8F7F, 0x3FCC394D}}, {{0x52292D2D, 0x3C646F77}}},
 {{{0x8F0DAF34, 0x3FF065F3}}, {{0xAF1520A9, 0xBC7821B3}},
   {{0x0CBB89ED, 0x3FCCBC6F}}, {{0x51092884, 0x3C4B40A0}}},
 {{{0x5082FF6E, 0x3FF06993}}, {{0xD7395A9F, 0x3C7685C4}},
   {{0x1D49F620, 0x3FCD3FAD}}, {{0x26ECE4F0, 0xBC5DE851}}},
 {{{0x7B8CFE4D, 0x3FF06D43}}, {{0xD1025E7E, 0xBC73ADF7}},
   {{0x6D87EF96, 0x3FCDC308}}, {{0x2A97B34C, 0xBC6C0BD9}}},
 {{{0x13DBD729, 0x3FF07104}}, {{0xCA5328ED, 0x3C766560}},
   {{0x80D0D17F, 0x3FCE4681}}, {{0x658D0660, 0xBC605627}}},
 {{{0x1D3022A1, 0x3FF074D5}}, {{0x2426EF93, 0x3C9E93F8}},
   {{0xDA9DBA19, 0x3FCECA18}}, {{0x491D8A98, 0xBC36D470}}},
 {{{0x9B5AEA5C, 0x3FF078B6}}, {{0x6B6D819B, 0xBC8880D6}},
   {{0xFE860E28, 0x3FCF4DCE}}, {{0xC6A2C678, 0x3C6883D4}}},
 {{{0x923DACD6, 0x3FF07CA8}}, {{0xE736D67A, 0xBC9653A7}},
   {{0x703FFC8F, 0x3FCFD1A4}}, {{0xA8860819, 0x3C59EA3B}}},
 {{{0x05CA6146, 0x3FF080AB}}, {{0xFC66378F, 0xBC723216}},
   {{0xD9D08102, 0x3FD02ACC}}, {{0x20C03715, 0xBC5998B3}}},
 {{{0xFA037B8F, 0x3FF084BD}}, {{0xE3C5EBFC, 0xBC7D97E2}},
   {{0xA64F3673, 0x3FD06CD7}}, {{0x839871E4, 0x3C6370BA}}},
 {{{0x72FBF041, 0x3FF088E1}}, {{0x0D55140F, 0xBC9DE12F}},
   {{0xDFA6F09B, 0x3FD0AEF2}}, {{0xA7827088, 0xBC414E60}}},
 {{{0x74D738AC, 0x3FF08D15}}, {{0xC4A8C043, 0xBC984BD5}},
   {{0xC7F2EE53, 0x3FD0F11E}}, {{0xC5355AFC, 0x3C75BADF}}},
 {{{0x03C95705, 0x3FF0915A}}, {{0x0BD1CD00, 0x3C78A8A6}},
   {{0xA15F1D6C, 0x3FD1335B}}, {{0x341ED7B6, 0xBC53CE0F}}},
 {{{0x2416DA9A, 0x3FF095AF}}, {{0x39DC7749, 0x3C8024A0}},
   {{0xAE285CD6, 0x3FD175A9}}, {{0xC4496E39, 0xBC3DB749}}},
 {{{0xDA14E415, 0x3FF09A14}}, {{0x233B29C8, 0xBC965668}},
   {{0x309CBEE1, 0x3FD1B809}}, {{0xBBB1CB75, 0x3C6E5B16}}},
 {{{0x2A2929D1, 0x3FF09E8B}}, {{0x535446B4, 0xBC9EE5F5}},
   {{0x6B1BCB8A, 0x3FD1FA7A}}, {{0x5A4CB636, 0x3C50621A}}},
 {{{0x18C9FC41, 0x3FF0A312}}, {{0x09E044C2, 0x3C885259}},
   {{0xA016C2D9, 0x3FD23CFD}}, {{0x449D986B, 0xBC500762}}},
 {{{0xAA7E4A68, 0x3FF0A7A9}}, {{0x281520E0, 0x3C71B296}},
   {{0x1210DF54, 0x3FD27F93}}, {{0x502A1E59, 0xBC6EF999}}},
 {{{0xE3DDA65B, 0x3FF0AC51}}, {{0x9DACA977, 0x3C9B22C0}},
   {{0x039F9881, 0x3FD2C23B}}, {{0x9B082732, 0x3C577301}}},
 {{{0xC99049DE, 0x3FF0B10A}}, {{0x610FCC2E, 0xBC617C2D}},
   {{0xB76AE57E, 0x3FD304F5}}, {{0x42E4CA9C, 0xBC75EB09}}},
 {{{0x604F1B07, 0x3FF0B5D4}}, {{0x07EECFA5, 0x3C732C14}},
   {{0x702D7FA4, 0x3FD347C3}}, {{0x701422C8, 0x3C7435BE}}},
 {{{0xACE3B0FC, 0x3FF0BAAE}}, {{0x75521E77, 0xBC93292F}},
   {{0x70B52549, 0x3FD38AA4}}, {{0x0B01B8A6, 0xBC67F94B}}},
 {{{0xB42858B8, 0x3FF0BF99}}, {{0x0B1F30A5, 0xBC67AD83}},
   {{0xFBE2DC86, 0x3FD3CD98}}, {{0x269038FC, 0xBC7D0A5E}}},
 {{{0x7B0819E9, 0x3FF0C495}}, {{0x6E52BA24, 0x3C9A26E0}},
   {{0x54AB361D, 0x3FD410A1}}, {{0xCF7DA2E8, 0xBC78DCB6}}},
 {{{0x067EBBDA, 0x3FF0C9A2}}, {{0x803D61F3, 0x3C813CD8}},
   {{0xBE16906C, 0x3FD453BD}}, {{0x45D8536E, 0x3C78D781}}},
 {{{0x5B98CA6C, 0x3FF0CEBF}}, {{0x09B9F220, 0x3C9E8080}},
   {{0x7B415A78, 0x3FD496EE}}, {{0xBDFE61F1, 0xBC51C3BA}}},
 {{{0x7F739B28, 0x3FF0D3ED}}, {{0xEA8A9ED5, 0xBC99722F}},
   {{0xCF5C5703, 0x3FD4DA33}}, {{0x7BE71FBE, 0x3C7B1F07}}},
 {{{0x773D5255, 0x3FF0D92C}}, {{0x3D5D1DA2, 0xBC84956C}},
   {{0xFDACDFC5, 0x3FD51D8D}}, {{0x98966B86, 0xBC419F0E}}},
 {{{0x4834E82E, 0x3FF0DE7C}}, {{0x5F430E44, 0xBC877BEC}},
   {{0x498D28AA, 0x3FD560FD}}, {{0xCCEA8A26, 0xBC4F07B3}}},
 {{{0xF7AA2E1B, 0x3FF0E3DC}}, {{0xF7FB3140, 0x3C9C05BD}},
   {{0xF66C8331, 0x3FD5A481}}, {{0xCFF78DD1, 0x3C6E8E0C}}},
 {{{0x8AFDD406, 0x3FF0E94E}}, {{0xB0B14F49, 0xBC9330CB}},
   {{0x47CFA1DB, 0x3FD5E81C}}, {{0x4E7B2C63, 0xBC791EC5}}},
 {{{0x07A16DB4, 0x3FF0EED1}}, {{0xD3E071F5, 0x3C988108}},
   {{0x8150DBAB, 0x3FD62BCC}}, {{0xF95D00CA, 0x3C7700BD}}},
 {{{0x73177841, 0x3FF0F464}}, {{0x29551C51, 0xBC97DF60}},
   {{0xE6A06FC9, 0x3FD66F92}}, {{0xD9A66B42, 0xBC70A785}}},
 {{{0xD2F35F97, 0x3FF0FA08}}, {{0x9DAB3AF1, 0x3C9B39D1}},
   {{0xBB84C928, 0x3FD6B36F}}, {{0xFEFE1E5F, 0x3C68DAF8}}},
};

  db_number const c0 = {{0x00000000,0x3FF00000}};
  db_number const c2 = {{0x00000000,0x3FE00000}};
  db_number const c4 = {{0x55555555,0x3FA55555}};
  db_number const c6 = {{0x16C16C17,0x3F56C16C}};
  db_number const c8 = {{0x1A01A01A,0x3EFA01A0}};

  db_number const s1 = {{0x00000000,0x3FF00000}};
  db_number const s3 = {{0x55555555,0x3FC55555}};
  db_number const s5 = {{0x11111111,0x3F811111}};
  db_number const s7 = {{0x1A01A01A,0x3F2A01A0}};
# 14 "csh_fast.c" 2
# 1 "exp.h" 1
# 15 "exp.h"
static const db_number
  iln2_o512 = {{0x652B82FE, 0x40871547}},
  tiny_int = {{0xffffffff, 0x3c8fffff}},
  smll_int = {{0xd52d3051, 0xc0874910}},
  larg_int = {{0xfefa39ef, 0x40862e42}};


static const struct scs
sc_ln2_o512_1 = {{0x00162e42, 0x3fbe8e7b, 0x335793c7, 0x19cc01f9,
    0x1ed5e81e, 0x1a193394, 0x316c5b14, 0x00000000},
   {{0x00000000 ,0x3ff00000}}, -1, 1 },
sc_ln2_o512_2 = {{0x068badc5, 0x355f457c, 0x3dc3b103, 0x1bd75930,
    0x2acaa97d, 0x295f4362, 0x07697571, 0x2b827042},
   {{0x00000000 ,0x3ff00000}}, -8, 1 };






static const scs constant_poly[10]=

{{{0x0000001a, 0x39915ae6, 0x271b3b26, 0x3bc3c8d6,
0x327f2894, 0x1a80bba6, 0x2d7be149, 0x149ab262},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00000127, 0x393ee8a7, 0x2647a705, 0x037af958,
0x0c753fb3, 0x0941e129, 0x13162578, 0x1773558f},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00000b8e, 0x3c74aad8, 0x399abcfd, 0x1225e04b,
0x2e8dea13, 0x038b8517, 0x3212cece, 0x2cb577c5},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00006806, 0x201a01a0, 0x066e4bb6, 0x156666d6,
0x333d1ab0, 0x06772281, 0x044e4578, 0x04d8d60d},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00034034, 0x00d00d00, 0x34034034, 0x0249047b,
0x38e5a9d7, 0x30805847, 0x335f9062, 0x206ba2e1},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0016c16c, 0x05b05b05, 0x2c16c16c, 0x121e8acb,
0x25da960e, 0x2999616d, 0x2b3ae80c, 0x1a17471d},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x00888888, 0x22222222, 0x08888888, 0x22222220,
0x072a661e, 0x15f0a5cf, 0x3fc53e81, 0x3da68844},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x02aaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaa9e,
0x2e389977, 0x07fcaf81, 0x07fee303, 0x13eab39c},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
0x2aaaaadc, 0x1902174f, 0x32f46829, 0x13f2855b},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x20000000, 0x00000000, 0x00000000, 0x00000000,
0x00000075, 0x21e5e9c2, 0x1e95e039, 0x17dad7b5},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
};
# 15 "csh_fast.c" 2


extern void exp_SC(scs_t,double);




void scs_div_2(scs_t num) {

  unsigned int carry, new_value, mask, old_value;
  int i;
  carry = 0x00000000;
  mask = ((0x1) << 30)-1;

  if( (num->exception).d == (double) 1) {

    for(i = 0; i < 8; i++) {
      old_value = num->h_word[i];
      new_value = (old_value & mask);
      num->h_word[i] = (old_value & !mask) | carry | ((old_value >> 1) & mask);
      carry = old_value & 0x00000001;
      carry = carry << (30 -1);
    }

    if (num->h_word[0] == 0){
      num->index = num->index - 1;
      for(i = 1; i < 8; i++) {
 num->h_word[i-1] = num->h_word[i];
      }
      num->h_word[8 -1] = 0;
    }
  }
  else {
    (num->exception).d = (num->exception).d / 2;
  }
}



enum {RN, RZ, RD, RU};


double do_cosh(double x, int rounding_mode){


  int k;
  db_number y;
  double delta_cst_cosh = 1e-19;
  scs_t res_scs, exp_scs, exp_minus_scs;
  double res_hi, res_lo;
  double ch_hi, ch_lo, sh_hi, sh_lo;
  db_number table_index_float;
  int table_index;
  double temp_hi, temp_lo, temp;
  double b_hi, b_lo,b_ca_hi, b_ca_lo, b_sa_hi, b_sa_lo;

  double ca_hi = 0.;
  double ca_lo = 0.;
  double sa_hi = 0.;
  double sa_lo = 0.;
  double tcb_hi, tsb_hi;
  double square_b_hi;
  double ch_2_pk_hi, ch_2_pk_lo, ch_2_mk_hi, ch_2_mk_lo;
  double sh_2_pk_hi, sh_2_pk_lo, sh_2_mk_hi, sh_2_mk_lo;
  db_number two_p_plus_k, two_p_minus_k;
  db_number absyh, absyl, u53, u;



  {db_number _t; _t.d = (x * inv_ln_2.d+6755399441055744.0); k = _t.i[0];}
    if (k != 0){
      temp_hi = x - ln2_hi.d * k;
      temp_lo = -ln2_lo.d * k;
      {double _z, _a=temp_hi, _b=temp_lo; b_hi = _a + _b; if ((((temp_hi)>0) ? (temp_hi) : (-(temp_hi))) > (((temp_lo)>0) ? (temp_lo) : (-(temp_lo)))){ _z = b_hi - _a; b_lo = _b - _z; }else { _z = b_hi - _b; b_lo = _a - _z;}};
    }
    else {
      b_hi = x; b_lo = 0.;
    }

  two_p_plus_k.i[0] = 0;
  two_p_plus_k.i[1] = (k-1+1023) << 20;
  two_p_minus_k.i[0] = 0;
  two_p_minus_k.i[1] = (-k-1+1023) << 20;




  table_index_float.d = b_hi + two_43_44.d;

  table_index = (*((int*)(&table_index_float.d)));
  table_index_float.d -= two_43_44.d;
  table_index += bias;
  b_hi -= table_index_float.d;




  y.d = b_hi;

  square_b_hi = b_hi * b_hi;


  if (((y.i[1])&(0x7FFFFFFF)) < (two_minus_30.i[1])) {
    tcb_hi = 0;
    tsb_hi = 0;
  }
  else {


    tcb_hi = (square_b_hi)* (c2.d + square_b_hi * (c4.d + square_b_hi * c6.d));
    tsb_hi = square_b_hi * (s3.d + square_b_hi * (s5.d + square_b_hi * s7.d));
  }


  if( table_index != bias) {

    ca_hi = cosh_sinh_table[table_index][0].d;
    ca_lo = cosh_sinh_table[table_index][1].d;
    sa_hi = cosh_sinh_table[table_index][2].d;
    sa_lo = cosh_sinh_table[table_index][3].d;


    { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&b_sa_hi, &b_sa_lo, sa_hi, b_hi); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =sa_hi, _v=b_hi; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&b_sa_hi = _u*_v; *&b_sa_lo = (((u1*v1-*&b_sa_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };
    temp = ((((((ca_lo + (b_hi * sa_lo)) + b_lo * sa_hi) + b_sa_lo) + (b_sa_hi * tsb_hi)) + ca_hi * tcb_hi) + b_sa_hi);
    {double _z, _a=ca_hi, _b=temp; ch_hi = _a + _b; if ((((ca_hi)>0) ? (ca_hi) : (-(ca_hi))) > (((temp)>0) ? (temp) : (-(temp)))){ _z = ch_hi - _a; ch_lo = _b - _z; }else { _z = ch_hi - _b; ch_lo = _a - _z;}};

  }
  else {
    {double _z, _a=(double) 1, _b=tcb_hi; ch_hi = _a + _b; if (((((double) 1)>0) ? ((double) 1) : (-((double) 1))) > (((tcb_hi)>0) ? (tcb_hi) : (-(tcb_hi)))){ _z = ch_hi - _a; ch_lo = _b - _z; }else { _z = ch_hi - _b; ch_lo = _a - _z;}};
  }


  if(k != 0) {
    if( table_index != bias) {

      { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&b_ca_hi, &b_ca_lo, ca_hi, b_hi); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =ca_hi, _v=b_hi; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&b_ca_hi = _u*_v; *&b_ca_lo = (((u1*v1-*&b_ca_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };
      temp = (((((sa_lo + (b_lo * ca_hi)) + (b_hi * ca_lo)) + b_ca_lo) + (sa_hi*tcb_hi)) + (b_ca_hi * tsb_hi));
      {double _z, _a=b_ca_hi, _b=temp; temp_hi = _a + _b; _z = temp_hi - _a; temp_lo = _b - _z; };
      do { double r,s; r = sa_hi+temp_hi; s = (((((sa_hi)>0) ? (sa_hi) : (-(sa_hi)))) > ((((temp_hi)>0) ? (temp_hi) : (-(temp_hi)))))? (sa_hi-r+temp_hi+temp_lo+(double) 0) : (temp_hi-r+sa_hi+(double) 0 +temp_lo); *&sh_hi = r+s; *&sh_lo = r - (*&sh_hi) + s; } while(2+2==5);
    }
    else {
      {double _z, _a=b_hi, _b=tsb_hi * b_hi + b_lo; sh_hi = _a + _b; if ((((b_hi)>0) ? (b_hi) : (-(b_hi))) > (((tsb_hi * b_hi + b_lo)>0) ? (tsb_hi * b_hi + b_lo) : (-(tsb_hi * b_hi + b_lo)))){ _z = sh_hi - _a; sh_lo = _b - _z; }else { _z = sh_hi - _b; sh_lo = _a - _z;}};
    }
    if((k < 35) && (k > -35) )
      {
 ch_2_pk_hi = ch_hi * two_p_plus_k.d;
 ch_2_pk_lo = ch_lo * two_p_plus_k.d;
 ch_2_mk_hi = ch_hi * two_p_minus_k.d;
 ch_2_mk_lo = ch_lo * two_p_minus_k.d;
 sh_2_pk_hi = sh_hi * two_p_plus_k.d;
 sh_2_pk_lo = sh_lo * two_p_plus_k.d;
 sh_2_mk_hi = -1 * sh_hi * two_p_minus_k.d;
 sh_2_mk_lo = -1 * sh_lo * two_p_minus_k.d;

 do { double r,s; r = ch_2_mk_hi+sh_2_mk_hi; s = (((((ch_2_mk_hi)>0) ? (ch_2_mk_hi) : (-(ch_2_mk_hi)))) > ((((sh_2_mk_hi)>0) ? (sh_2_mk_hi) : (-(sh_2_mk_hi)))))? (ch_2_mk_hi-r+sh_2_mk_hi+sh_2_mk_lo+ch_2_mk_lo) : (sh_2_mk_hi-r+ch_2_mk_hi+ch_2_mk_lo+sh_2_mk_lo); *&res_hi = r+s; *&res_lo = r - (*&res_hi) + s; } while(2+2==5);
 do { double r,s; r = sh_2_pk_hi+res_hi; s = (((((sh_2_pk_hi)>0) ? (sh_2_pk_hi) : (-(sh_2_pk_hi)))) > ((((res_hi)>0) ? (res_hi) : (-(res_hi)))))? (sh_2_pk_hi-r+res_hi+res_lo+sh_2_pk_lo) : (res_hi-r+sh_2_pk_hi+sh_2_pk_lo+res_lo); *&ch_2_mk_hi = r+s; *&ch_2_mk_lo = r - (*&ch_2_mk_hi) + s; } while(2+2==5);
 do { double r,s; r = ch_2_pk_hi+ch_2_mk_hi; s = (((((ch_2_pk_hi)>0) ? (ch_2_pk_hi) : (-(ch_2_pk_hi)))) > ((((ch_2_mk_hi)>0) ? (ch_2_mk_hi) : (-(ch_2_mk_hi)))))? (ch_2_pk_hi-r+ch_2_mk_hi+ch_2_mk_lo+ch_2_pk_lo) : (ch_2_mk_hi-r+ch_2_pk_hi+ch_2_pk_lo+ch_2_mk_lo); *&res_hi = r+s; *&res_lo = r - (*&res_hi) + s; } while(2+2==5);
      }
    else if (k >= 35)
      {
 ch_2_pk_hi = ch_hi * two_p_plus_k.d;
 ch_2_pk_lo = ch_lo * two_p_plus_k.d;
 sh_2_pk_hi = sh_hi * two_p_plus_k.d;
 sh_2_pk_lo = sh_lo * two_p_plus_k.d;
 do { double r,s; r = ch_2_pk_hi+sh_2_pk_hi; s = (((((ch_2_pk_hi)>0) ? (ch_2_pk_hi) : (-(ch_2_pk_hi)))) > ((((sh_2_pk_hi)>0) ? (sh_2_pk_hi) : (-(sh_2_pk_hi)))))? (ch_2_pk_hi-r+sh_2_pk_hi+sh_2_pk_lo+ch_2_pk_lo) : (sh_2_pk_hi-r+ch_2_pk_hi+ch_2_pk_lo+sh_2_pk_lo); *&res_hi = r+s; *&res_lo = r - (*&res_hi) + s; } while(2+2==5);
      }
    else
      {
 ch_2_mk_hi = ch_hi * two_p_minus_k.d;
 ch_2_mk_lo = ch_lo * two_p_minus_k.d;
 sh_2_mk_hi = -1 * sh_hi * two_p_minus_k.d;
 sh_2_mk_lo = -1 * sh_lo * two_p_minus_k.d;
 do { double r,s; r = ch_2_mk_hi+sh_2_mk_hi; s = (((((ch_2_mk_hi)>0) ? (ch_2_mk_hi) : (-(ch_2_mk_hi)))) > ((((sh_2_mk_hi)>0) ? (sh_2_mk_hi) : (-(sh_2_mk_hi)))))? (ch_2_mk_hi-r+sh_2_mk_hi+sh_2_mk_lo+ch_2_mk_lo) : (sh_2_mk_hi-r+ch_2_mk_hi+ch_2_mk_lo+sh_2_mk_lo); *&res_hi = r+s; *&res_lo = r - (*&res_hi) + s; } while(2+2==5);
      }
  }
  else {
    res_hi = ch_hi;
    res_lo = ch_lo;
  }

  switch(rounding_mode) {
  case RN:
    {
      if (res_hi == (res_hi + (res_lo * round_cst_cosh.d))) return res_hi;
      break;
    }
  case RU:
    {

      absyh.d = res_hi;
      absyl.d = res_lo;
      absyh.i[1] = absyh.i[1] & 0x7fffffff;
      absyl.i[1] = absyl.i[1] & 0x7fffffff;

      u53.l = (absyh.l & 0x7ff0000000000000LL) + 0x0010000000000000LL;
      u.l = u53.l - 0x0350000000000000LL;

      if(absyl.d > delta_cst_cosh * u53.d){
 if(res_lo > 0.) res_hi += u.d;
 return res_hi;
      }
      break;
    }
  case RD:
    {

      absyh.d = res_hi;
      absyl.d = res_lo;
      absyh.l = absyh.l & 0x7fffffffffffffffLL;
      absyl.l = absyl.l & 0x7fffffffffffffffLL;
      u53.l = (absyh.l & 0x7ff0000000000000LL) + 0x0010000000000000LL;
      u.l = u53.l - 0x0350000000000000LL;
      if(absyl.d > delta_cst_cosh * u53.d){
 if(res_lo < 0.) res_hi -= u.d;
 return res_hi;
      }
       break;
    }
  }



  crlibm_second_step_taken++;



  if ((k > -80) && (k < 80)) {
    exp_SC(exp_scs, x);
    scs_inv(exp_minus_scs, exp_scs);
    scs_add(res_scs, exp_scs, exp_minus_scs);
    scs_div_2(res_scs);
  }
  else if (k >= 80) {
    exp_SC(res_scs, x);
    scs_div_2(res_scs);
  }
  else {
    exp_SC(res_scs, -x);
    scs_div_2(res_scs);
  }

  switch(rounding_mode) {
  case RN:
    scs_get_d(&res_hi, res_scs); break;
  case RU:
    scs_get_d_pinf(&res_hi, res_scs); break;
  case RD:
    scs_get_d_minf(&res_hi, res_scs); break;
  }
  return(res_hi);
}


double cosh_rn(double x){
  db_number y;
  y.d = x;
  y.i[1] = y.i[1] & 0x7FFFFFFF;
  if (y.d > max_input_ch.d) {
    y.i[0] = 0; y.i[1] = 0x7FF00000; return (y.d);
  }
  if ((y.i[1] & 0x7FF00000) >= (0x7FF00000)) {
   return (y.d);
  }
  return(do_cosh(x, RN));
}


double cosh_rz(double x){
  db_number y;
  y.d = x;
  y.i[1] = y.i[1] & 0x7FFFFFFF;
  if ((y.i[1] & 0x7FF00000) >= (0x7FF00000)) {
    return (y.d);
  }
  if (y.d > max_input_ch.d) {
    y.i[0] = 0xFFFFFFFF; y.i[1] = 0x7FEFFFFF; return (y.d);
  }
  return(do_cosh(x, RD));
}


double cosh_ru(double x){
  db_number y;
  y.d = x;
  y.i[1] = y.i[1] & 0x7FFFFFFF;
  if (y.d > max_input_ch.d) {
    y.i[0] = 0; y.i[1] = 0x7FF00000; return (y.d);
  }
  if ((y.i[1] & 0x7FF00000) >= (0x7FF00000)) {
   return (y.d);
  }
  return(do_cosh(x, RU));
}


double cosh_rd(double x){
  db_number y;
  y.d = x;
  y.i[1] = y.i[1] & 0x7FFFFFFF;
  if ((y.i[1] & 0x7FF00000) >= (0x7FF00000)) {
    return (y.d);
  }
  if (y.d > max_input_ch.d) {
    y.i[0] = 0xFFFFFFFF; y.i[1] = 0x7FEFFFFF; return (y.d);
  }
  return(do_cosh(x, RD));
}
# 336 "csh_fast.c"
double do_sinh(double x, int rounding_mode){


  int k;
  db_number y;
  scs_t res_scs, exp_scs, exp_minus_scs;
  double delta_cst_cosh = 1e-19;
  double res_hi, res_lo,temp1;
  double ch_hi, ch_lo, sh_hi, sh_lo;
  double table_index_float;
  int table_index;
  double ch_2_pk_hi, ch_2_pk_lo, ch_2_mk_hi, ch_2_mk_lo;
  double sh_2_pk_hi, sh_2_pk_lo, sh_2_mk_hi, sh_2_mk_lo;
  double b_hi, b_lo;
  double ca_b_hi, ca_b_lo, temp_hi, temp_lo, sa_b_hi, sa_b_lo;
  double ca_hi, ca_lo, sa_hi, sa_lo;
  double tcb_hi, tsb_hi;
  db_number two_p_plus_k, two_p_minus_k;
  double square_y_hi;
  db_number absyh, absyl, u53, u;
# 369 "csh_fast.c"
  {db_number _t; _t.d = (x * inv_ln_2.d+6755399441055744.0); k = _t.i[0];}
    if (k != 0){
      temp_hi = x - ln2_hi.d * k;
      temp_lo = -ln2_lo.d * k;
      {double _z, _a=temp_hi, _b=temp_lo; b_hi = _a + _b; if ((((temp_hi)>0) ? (temp_hi) : (-(temp_hi))) > (((temp_lo)>0) ? (temp_lo) : (-(temp_lo)))){ _z = b_hi - _a; b_lo = _b - _z; }else { _z = b_hi - _b; b_lo = _a - _z;}};
    }
    else {
      b_hi = x; b_lo = 0.;
    }


  two_p_plus_k.i[0] = 0;
  two_p_plus_k.i[1] = (k-1+1023) << 20;
  two_p_minus_k.i[0] = 0;
  two_p_minus_k.i[1] = (-k-1+1023) << 20;





  table_index_float = b_hi + two_43_44.d;

  table_index = (*((int*)(&table_index_float)));
  table_index_float -= two_43_44.d;
  table_index += bias;
  b_hi -= table_index_float;


  y.d = b_hi;

  square_y_hi = b_hi * b_hi;

  if (((y.i[1])&(0x7FFFFFFF)) <= (two_minus_30.i[1])) {
    tsb_hi = 0;
    tcb_hi = 0;
  }
  else {
    tsb_hi = square_y_hi * (s3.d + square_y_hi * (s5.d + square_y_hi * s7.d));


    tcb_hi = (square_y_hi)* (c2.d + square_y_hi * (c4.d + square_y_hi * c6.d));
  }

  if( table_index != bias) {

    ca_hi = cosh_sinh_table[table_index][0].d;
    ca_lo = cosh_sinh_table[table_index][1].d;
    sa_hi = cosh_sinh_table[table_index][2].d;
    sa_lo = cosh_sinh_table[table_index][3].d;


    temp1 = sa_lo;
    temp1 += b_lo * ca_hi;
    temp1 += b_hi * ca_lo;
    { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&ca_b_hi, &ca_b_lo, ca_hi, b_hi); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =ca_hi, _v=b_hi; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&ca_b_hi = _u*_v; *&ca_b_lo = (((u1*v1-*&ca_b_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };
    temp1 += ca_b_lo;
    temp1 += sa_hi * tcb_hi;
    temp1 += ca_b_hi * tsb_hi;
    {double _z, _a=ca_b_hi, _b=temp1; temp_hi = _a + _b; if ((((ca_b_hi)>0) ? (ca_b_hi) : (-(ca_b_hi))) > (((temp1)>0) ? (temp1) : (-(temp1)))){ _z = temp_hi - _a; temp_lo = _b - _z; }else { _z = temp_hi - _b; temp_lo = _a - _z;}};
    do { double r,s; r = sa_hi+temp_hi; s = (((((sa_hi)>0) ? (sa_hi) : (-(sa_hi)))) > ((((temp_hi)>0) ? (temp_hi) : (-(temp_hi)))))? (sa_hi-r+temp_hi+temp_lo+(double) 0) : (temp_hi-r+sa_hi+(double) 0 +temp_lo); *&sh_hi = r+s; *&sh_lo = r - (*&sh_hi) + s; } while(2+2==5);

    temp1 = ca_lo;
    { printf("Mul12\n"); printf("rh=%.20e, rl=%.20e, u=%.20e, v=%.20e\n",&sa_b_hi, &sa_b_lo, sa_hi, b_hi); const double c = 134217729.; double up, u1, u2, vp, v1, v2; double _u =sa_hi, _v=b_hi; printf("_u=%.20e, _v=%.20e\n", _u, _v); up = _u*c; vp = _v*c; u1 = (_u-up)+up; v1 = (_v-vp)+vp; u2 = _u-u1; v2 = _v-v1; *&sa_b_hi = _u*_v; *&sa_b_lo = (((u1*v1-*&sa_b_hi)+(u1*v2))+(u2*v1))+(u2*v2); printf("\n"); };
    temp1 += b_hi * sa_lo;
    temp1 += b_lo * sa_hi;
    temp1 += sa_b_lo;
    temp1 += sa_b_hi * tsb_hi;
    temp1 += ca_hi * tcb_hi;
    temp1 += sa_b_hi;
    {double _z, _a=ca_hi, _b=temp1; ch_hi = _a + _b; if ((((ca_hi)>0) ? (ca_hi) : (-(ca_hi))) > (((temp1)>0) ? (temp1) : (-(temp1)))){ _z = ch_hi - _a; ch_lo = _b - _z; }else { _z = ch_hi - _b; ch_lo = _a - _z;}};
  }
  else {
    {double _z, _a=b_hi, _b=tsb_hi * b_hi + b_lo; sh_hi = _a + _b; if ((((b_hi)>0) ? (b_hi) : (-(b_hi))) > (((tsb_hi * b_hi + b_lo)>0) ? (tsb_hi * b_hi + b_lo) : (-(tsb_hi * b_hi + b_lo)))){ _z = sh_hi - _a; sh_lo = _b - _z; }else { _z = sh_hi - _b; sh_lo = _a - _z;}};
    {double _z, _a=(double) 1, _b=tcb_hi; ch_hi = _a + _b; if (((((double) 1)>0) ? ((double) 1) : (-((double) 1))) > (((tcb_hi)>0) ? (tcb_hi) : (-(tcb_hi)))){ _z = ch_hi - _a; ch_lo = _b - _z; }else { _z = ch_hi - _b; ch_lo = _a - _z;}};
  }

  if(k != 0) {
    if( (k < 35) && (k > -35) ) {
 ch_2_pk_hi = ch_hi * two_p_plus_k.d;
 ch_2_pk_lo = ch_lo * two_p_plus_k.d;
 ch_2_mk_hi = -1 * ch_hi * two_p_minus_k.d;
 ch_2_mk_lo = -1 * ch_lo * two_p_minus_k.d;
 sh_2_pk_hi = sh_hi * two_p_plus_k.d;
 sh_2_pk_lo = sh_lo * two_p_plus_k.d;
 sh_2_mk_hi = sh_hi * two_p_minus_k.d;
 sh_2_mk_lo = sh_lo * two_p_minus_k.d;

 do { double r,s; r = ch_2_mk_hi+sh_2_mk_hi; s = (((((ch_2_mk_hi)>0) ? (ch_2_mk_hi) : (-(ch_2_mk_hi)))) > ((((sh_2_mk_hi)>0) ? (sh_2_mk_hi) : (-(sh_2_mk_hi)))))? (ch_2_mk_hi-r+sh_2_mk_hi+sh_2_mk_lo+ch_2_mk_lo) : (sh_2_mk_hi-r+ch_2_mk_hi+ch_2_mk_lo+sh_2_mk_lo); *&res_hi = r+s; *&res_lo = r - (*&res_hi) + s; } while(2+2==5);
 do { double r,s; r = sh_2_pk_hi+res_hi; s = (((((sh_2_pk_hi)>0) ? (sh_2_pk_hi) : (-(sh_2_pk_hi)))) > ((((res_hi)>0) ? (res_hi) : (-(res_hi)))))? (sh_2_pk_hi-r+res_hi+res_lo+sh_2_pk_lo) : (res_hi-r+sh_2_pk_hi+sh_2_pk_lo+res_lo); *&ch_2_mk_hi = r+s; *&ch_2_mk_lo = r - (*&ch_2_mk_hi) + s; } while(2+2==5);
 do { double r,s; r = ch_2_pk_hi+ch_2_mk_hi; s = (((((ch_2_pk_hi)>0) ? (ch_2_pk_hi) : (-(ch_2_pk_hi)))) > ((((ch_2_mk_hi)>0) ? (ch_2_mk_hi) : (-(ch_2_mk_hi)))))? (ch_2_pk_hi-r+ch_2_mk_hi+ch_2_mk_lo+ch_2_pk_lo) : (ch_2_mk_hi-r+ch_2_pk_hi+ch_2_pk_lo+ch_2_mk_lo); *&res_hi = r+s; *&res_lo = r - (*&res_hi) + s; } while(2+2==5);
    }
    else if (k >= 35)
      {
 ch_2_pk_hi = ch_hi * two_p_plus_k.d;
 ch_2_pk_lo = ch_lo * two_p_plus_k.d;
 sh_2_pk_hi = sh_hi * two_p_plus_k.d;
 sh_2_pk_lo = sh_lo * two_p_plus_k.d;
 do { double r,s; r = ch_2_pk_hi+sh_2_pk_hi; s = (((((ch_2_pk_hi)>0) ? (ch_2_pk_hi) : (-(ch_2_pk_hi)))) > ((((sh_2_pk_hi)>0) ? (sh_2_pk_hi) : (-(sh_2_pk_hi)))))? (ch_2_pk_hi-r+sh_2_pk_hi+sh_2_pk_lo+ch_2_pk_lo) : (sh_2_pk_hi-r+ch_2_pk_hi+ch_2_pk_lo+sh_2_pk_lo); *&res_hi = r+s; *&res_lo = r - (*&res_hi) + s; } while(2+2==5);
      }
    else
      {
 ch_2_mk_hi = -1 * ch_hi * two_p_minus_k.d;
 ch_2_mk_lo = -1 * ch_lo * two_p_minus_k.d;
 sh_2_mk_hi = sh_hi * two_p_minus_k.d;
 sh_2_mk_lo = sh_lo * two_p_minus_k.d;
 do { double r,s; r = ch_2_mk_hi+sh_2_mk_hi; s = (((((ch_2_mk_hi)>0) ? (ch_2_mk_hi) : (-(ch_2_mk_hi)))) > ((((sh_2_mk_hi)>0) ? (sh_2_mk_hi) : (-(sh_2_mk_hi)))))? (ch_2_mk_hi-r+sh_2_mk_hi+sh_2_mk_lo+ch_2_mk_lo) : (sh_2_mk_hi-r+ch_2_mk_hi+ch_2_mk_lo+sh_2_mk_lo); *&res_hi = r+s; *&res_lo = r - (*&res_hi) + s; } while(2+2==5);
      }
  }
  else {
    res_hi = sh_hi;
    res_lo = sh_lo;
  }


  switch(rounding_mode) {
  case RN:
    {
      if (res_hi == (res_hi + (res_lo * round_cst_cosh.d))) return res_hi;
      break;
    }
  case RU:
    {

      absyh.d = res_hi;
      absyl.d = res_lo;
      absyh.i[1] = absyh.i[1] & 0x7fffffff;
      absyl.i[1] = absyl.i[1] & 0x7fffffff;

      u53.l = (absyh.l & 0x7ff0000000000000LL) + 0x0010000000000000LL;
      u.l = u53.l - 0x0350000000000000LL;

      if(absyl.d > delta_cst_cosh * u53.d){
 if(res_lo > 0.) res_hi += u.d;
 return res_hi;
      }
      break;
    }
  case RD:
    {

      absyh.d = res_hi;
      absyl.d = res_lo;
      absyh.l = absyh.l & 0x7fffffffffffffffLL;
      absyl.l = absyl.l & 0x7fffffffffffffffLL;
      u53.l = (absyh.l & 0x7ff0000000000000LL) + 0x0010000000000000LL;
      u.l = u53.l - 0x0350000000000000LL;
      if(absyl.d > delta_cst_cosh * u53.d){
 if(res_lo < 0.) res_hi -= u.d;
 return res_hi;
      }
       break;
    }
  }







  crlibm_second_step_taken++;


  if ((k > -35) && (k < 35)) {
    exp_SC(exp_scs, x);
    scs_inv(exp_minus_scs, exp_scs);
    scs_sub(res_scs, exp_scs, exp_minus_scs);
    scs_div_2(res_scs);
  }
  else if (k >= 35) {
    exp_SC(res_scs, x);
    scs_div_2(res_scs);
  }
  else {
    exp_SC(res_scs, -x);
    res_scs->sign = -1;
    scs_div_2(res_scs);
  }
  switch(rounding_mode) {
  case RN:
    scs_get_d(&res_hi, res_scs); break;
  case RU:
    scs_get_d_pinf(&res_hi, res_scs); break;
  case RD:
    scs_get_d_minf(&res_hi, res_scs); break;
  }

  return(res_hi);
}



double sinh_rn(double x){
  db_number y;
  y.d = x;
  y.i[1] = y.i[1] & 0x7FFFFFFF;
  if (y.d > max_input_ch.d) {
    y.d = x;
    y.i[0] = 0; y.i[1] = 0x7FF00000 | (y.i[1] & 0x80000000); return (y.d);
  }
  if ((y.i[1] & 0x7FF00000) >= (0x7FF00000)) {
   return (y.d);
  }
  return(do_sinh(x, RN));
}


double sinh_rz(double x){
  db_number y;
  y.d = x;
  y.i[1] = y.i[1] & 0x7FFFFFFF;
  if ((y.i[1] & 0x7FF00000) >= (0x7FF00000)) {
    y.d = x;
    return (y.d);
  }
  if (y.d > max_input_ch.d) {
    y.d = x;
    y.i[0] = 0xFFFFFFFF; y.i[1] = 0x7FEFFFFF | (y.i[1] & 0x80000000); return (y.d);
  }
  if( x > 0) {
    return(do_sinh(x, RD));
  }
  else {
    return(do_sinh(x, RU));
  }
}


double sinh_ru(double x){
  db_number y;
  y.d = x;
  y.i[1] = y.i[1] & 0x7FFFFFFF;
  if ((y.i[1] & 0x7FF00000) >= (0x7FF00000)) {
    y.d = x;
   return (y.d);
  }
  if (y.d > max_input_ch.d) {
    if(x>0) {
      y.i[0] = 0; y.i[1] = 0x7FF00000; return (y.d);
    }
    else {
      y.i[0] = 0xFFFFFFFF; y.i[1] = 0xFFEFFFFF ; return (y.d);
    }
  }
  return(do_sinh(x, RU));
}


double sinh_rd(double x){
  db_number y;
  y.d = x;
  y.i[1] = y.i[1] & 0x7FFFFFFF;
  if ((y.i[1] & 0x7FF00000) >= (0x7FF00000)) {
    y.d = x;
   return (y.d);
  }
  if (y.d > max_input_ch.d) {
    if(x>0) {
      y.i[0] = 0xFFFFFFFF; y.i[1] = 0x7FEFFFFF ; return (y.d);
    }
    else {
      y.i[0] = 0; y.i[1] = 0xFFF00000; return (y.d);
    }
  }
  return(do_sinh(x, RD));
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c log10.c
# 1 "log10.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "log10.c"
# 9 "log10.c"
# 1 "log10.h" 1
# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 2 "log10.h" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 3 "log10.h" 2





static const db_number NaN={{0x00000000 ,0xfff80000}};
static const db_number NNaN={{0x00000000 ,0x7ff80000}};
static const db_number Inf={{0x00000000 ,0x7ff00000}};
static const db_number NInf={{0x00000000 ,0xfff00000}};





static const db_number
  norm_number = {{0x00000000, 0x3FD60000}};


static const scs
   sc_ln2_r10={{0x13441350, 0x27de7fbc, 0x311f12b3, 0x1605be48,
  0x2f04d5a6, 0x062a1e8f, 0x269314bc, 0x37935be6},
         {{0x00000000 ,0x3ff00000}}, -1, 1 };



static const scs table_ti[13]=

{{{0x0a6a1fc1, 0x0eb49065, 0x1345798e, 0x140679b0,
0x081ef491, 0x17f68260, 0x23021dc5, 0x2a5f533c},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x07feff0a, 0x3bc78037, 0x160df12c, 0x0b84f38a,
0x05289585, 0x2123cf60, 0x14ce8a8a, 0x15c78dee},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x05c57433, 0x2367afba, 0x367bf155, 0x26de13d2,
0x009e7fc4, 0x1b056682, 0x3fcd4940, 0x002cc256},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x03b623da, 0x3b355fa1, 0x25b87837, 0x1a0b3d37,
0x168e5c1e, 0x1feab742, 0x0f66cbee, 0x2c0be907},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x01cb38fc, 0x3362ff6d, 0x296b2946, 0x0d962e64,
0x12371677, 0x33a22b0f, 0x0887c8c0, 0x3c81a1a1},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000},
{{0, 0}}, 0, 1 }
,

{{0x01af5f92, 0x2c03983e, 0x26de0a6d, 0x29e7cca3,
0x0a33955e, 0x3e1a096a, 0x1b598da7, 0x378d3fbf},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0346153a, 0x304f7f4e, 0x0503305a, 0x3efbd734,
0x24b3aa9b, 0x03e27fce, 0x3cf5ffa8, 0x0c044008},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x04c6cc15, 0x1c471180, 0x06d082e6, 0x3202edd2,
0x0016422e, 0x07624fbe, 0x12dd46da, 0x35263427},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0633c60e, 0x086480c9, 0x2ca2c7e5, 0x3deec525,
0x32f17f0d, 0x2d81a451, 0x0c46c1c9, 0x1945ec4d},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x078ef06a, 0x30e19fe3, 0x3558a94f, 0x30758d87,
0x134de402, 0x051b97ed, 0x025dbe43, 0x35bfe4ef},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x08d9f38f, 0x1929ef57, 0x1dd99925, 0x01ff4498,
0x26e5e114, 0x2e339c2f, 0x0390f6f7, 0x0d3408aa},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0a163f3f, 0x3c7f8038, 0x2dd54275, 0x10792a14,
0x11bcd6d3, 0x20e1df11, 0x1cbc373c, 0x127d33b6},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
};


static const scs table_inv_wi[13]=

{{{0x00000001, 0x1d1745d1, 0x1d1745d1, 0x1d1745d1,
0x1d1745d1, 0x1d1745d1, 0x1d183e2a, 0x36835582},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x00000001, 0x15555555, 0x15555555, 0x15555555,
0x15555555, 0x15555555, 0x15549b7e, 0x1a416c6b},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x00000001, 0x0ec4ec4e, 0x313b13b1, 0x0ec4ec4e,
0x313b13b1, 0x0ec4ec4e, 0x313a6825, 0x3ab28b77},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x00000001, 0x09249249, 0x09249249, 0x09249249,
0x09249249, 0x09249249, 0x09238b74, 0x26f620a6},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x00000001, 0x04444444, 0x11111111, 0x04444444,
0x11111111, 0x04444444, 0x1111d60e, 0x1f0c9d58},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x00000001, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000},
{{0x00000000 ,0x3ff00000}}, 0, 1 }
,

{{0x3c3c3c3c, 0x0f0f0f0f, 0x03c3c3c3, 0x30f0f0f0,
0x3c3c3c3c, 0x0f0f923d, 0x16e0e0a4, 0x3a84202f},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x38e38e38, 0x38e38e38, 0x38e38e38, 0x38e38e38,
0x38e38e38, 0x38e3946a, 0x2e0ee2c9, 0x0d6e0fbd},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x35e50d79, 0x10d79435, 0x39435e50, 0x35e50d79,
0x10d79435, 0x3943324d, 0x0637ea85, 0x131a67ba},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x33333333, 0x0ccccccc, 0x33333333, 0x0ccccccc,
0x33333333, 0x0ccccccc, 0x33333333, 0x0ccccccc},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x30c30c30, 0x30c30c30, 0x30c30c30, 0x30c30c30,
0x30c30c30, 0x30c2f1a4, 0x160958a1, 0x2b03bc88},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x2e8ba2e8, 0x2e8ba2e8, 0x2e8ba2e8, 0x2e8ba2e8,
0x2e8ba2e8, 0x2e8bcb74, 0x2d78b525, 0x00a1db67},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x2c8590b2, 0x0590b216, 0x10b21642, 0x321642c8,
0x1642c859, 0x02c8590b, 0x08590b21, 0x190b2164},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
};







static const scs constant_poly[20]=

{{{0x01656fcd, 0x37120da4, 0x190a402d, 0x2ac8a249,
0x17eb9ecf, 0x21392cb7, 0x1e533faa, 0x1e94a4c1},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x0178285f, 0x34ddee28, 0x11041f2a, 0x0004876c,
0x3c380350, 0x307e5fa7, 0x1ad7ebca, 0x2cd92fba},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x018b4d03, 0x13ceb0d6, 0x0f366d90, 0x2452dbad,
0x26fb5490, 0x1f5aada6, 0x1210b1de, 0x1ea31299},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x01a28de3, 0x0ea68783, 0x149e1951, 0x0f8806dd,
0x39b93947, 0x0d73f36e, 0x2556864f, 0x35fb5954},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x01bcb7b1, 0x277a1e99, 0x0a0186c1, 0x2abb27d4,
0x20e34ea1, 0x0758d32b, 0x1cebf224, 0x1d7b2016},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x01da5d8a, 0x0cfd7c2b, 0x316425f7, 0x2d92e4cf,
0x008c1fdc, 0x23ae9cbf, 0x1d559ae0, 0x1b6f36bb},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x01fc3fa6, 0x0540727e, 0x1c591487, 0x1186711e,
0x09da089b, 0x20053360, 0x1e9b73ea, 0x3bbb712a},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x0223583c, 0x2d0b4c63, 0x0997717f, 0x3617845e,
0x33925b09, 0x39608cfb, 0x1ed99ede, 0x3caa32d9},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0250f4ec, 0x1b7a1b68, 0x049620da, 0x0431e0d7,
0x2e0d2629, 0x10d53812, 0x08d5688b, 0x1397f08c},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x0286dca4, 0x353f638e, 0x1fa8de49, 0x2888ba50,
0x34d68d6b, 0x0e7bad3b, 0x19fa1686, 0x0282c774},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x02c78c4e, 0x3a9286c1, 0x0eded0f2, 0x3c167697,
0x2376b903, 0x274a8e9a, 0x1ea39ef4, 0x1adf2868},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x03169be5, 0x39f823f3, 0x0a6e8478, 0x0a36df0b,
0x04a90e57, 0x0ab36f7e, 0x3d9e3285, 0x2e193fb5},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x03796f62, 0x29372871, 0x254d7071, 0x1c065a5c,
0x3347ad1b, 0x30a89c6a, 0x315b4612, 0x06566750},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x03f87f4c, 0x0a882e38, 0x2aa1959d, 0x279ac008,
0x3c958eee, 0x01eeeeb1, 0x3491f9b0, 0x23f74e8b},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x04a1e9d8, 0x36f435ec, 0x31bc73e2, 0x3abc2601,
0x39b401d0, 0x0cd60ae1, 0x1fc98f08, 0x29f06ff3},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x058f189d, 0x35250d82, 0x221557dd, 0x26d3e9e7,
0x0223e4ce, 0x3d2543cd, 0x25e892c0, 0x1cfd1f93},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x06f2dec5, 0x126e50e3, 0x0a9aadd5, 0x15f620ad,
0x1064ee7f, 0x3fe2456b, 0x2f4cb57f, 0x315bf14b},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x0943d3b1, 0x2de86bd9, 0x2378e7c7, 0x07f2548d,
0x2277243c, 0x3f053abc, 0x2fcd1adc, 0x23aee721},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
,

{{0x0de5bd8a, 0x24dca1c6, 0x15355baa, 0x2beb4cf6,
0x287a7da0, 0x34365d5c, 0x33a3fd4b, 0x2575986b},
{{0x00000000 ,0x3ff00000}}, -1, -1 }
,

{{0x1bcb7b15, 0x09b9438c, 0x2a6ab755, 0x17d699ee,
0x039f03ea, 0x1d96911b, 0x10af7816, 0x1718a231},
{{0x00000000 ,0x3ff00000}}, -1, 1 }
};
# 10 "log10.c" 2
# 74 "log10.c"
double log10_rn(double x)
{
  scs_t R, res1;
  scs_t sc_ln2_r10_times_E;
  scs_ptr inv_wi, ti;

  db_number nb, nb2, wi, resd;
  int i, E=0;

  nb.d = x;

  if (nb.i[1] < 0x00100000){
    if (((nb.i[1] & 0x7fffffff)|nb.i[0])==0)

  return NInf.d;
    if (nb.i[1] < 0)

  return NaN.d;


    E -= (30*2);
    nb.d *=radix_two_double.d;


  }
  if (nb.i[1] >= 0x7ff00000)
    return x+x;


  E += (nb.i[1]>>20)-1023;
  nb.i[1] = (nb.i[1] & 0x000fffff) | 0x3ff00000;
  if (nb.d > 1.4142135623730950489e0){
    nb.d *= 0.5;
    E++;
  }




  nb2.d = nb.d + norm_number.d;
  i = (nb2.i[1] & 0x000fffff);
  i = i >> 16;

  wi.d = (11+i)*(double)0.6250e-1;


  nb.d -= wi.d;


  ti = (scs_ptr)&table_ti[i];
  inv_wi = (scs_ptr)&table_inv_wi[i];



  scs_set_d(R, nb.d);
  scs_mul(R, R, inv_wi);



  scs_set(sc_ln2_r10_times_E, (scs_ptr)(&sc_ln2_r10));

  if (E >= 0){
    scs_mul_ui(sc_ln2_r10_times_E, (unsigned int) E);
  }else{
    scs_mul_ui(sc_ln2_r10_times_E, (unsigned int) -E);
    sc_ln2_r10_times_E->sign = -1;
  }





  scs_mul(res1, (scs_ptr)&constant_poly[0], R);
  for(i=1; i<20; i++){
    scs_add(res1, (scs_ptr)&constant_poly[i], res1);
    scs_mul(res1, res1, R);
  }
  scs_add(res1, res1, ti);
  scs_add(res1, res1, sc_ln2_r10_times_E);


  scs_get_d(&resd.d, res1);

  return resd.d;
}
# 173 "log10.c"
double log10_rd(double x)
{
  scs_t R, res1;
  scs_t sc_ln2_r10_times_E;
  scs_ptr inv_wi, ti;

  db_number nb, nb2, wi, resd;
  int i, E=0;

  nb.d = x;

  if (nb.i[1] < 0x00100000){
    if (((nb.i[1] & 0x7fffffff)|nb.i[0])==0)

  return NInf.d;
    if (nb.i[1] < 0)

  return NaN.d;


    E -= (30*2);
    nb.d *=radix_two_double.d;


  }
  if (nb.i[1] >= 0x7ff00000)
    return x+x;


  E += (nb.i[1]>>20)-1023;
  nb.i[1] = (nb.i[1] & 0x000fffff) | 0x3ff00000;
  if (nb.d > 1.4142135623730950489e0){
    nb.d *= 0.5;
    E++;
  }




  nb2.d = nb.d + norm_number.d;
  i = (nb2.i[1] & 0x000fffff);
  i = i >> 16;

  wi.d = (11+i)*(double)0.6250e-1;


  nb.d -= wi.d;


  ti = (scs_ptr)&table_ti[i];
  inv_wi = (scs_ptr)&table_inv_wi[i];



  scs_set_d(R, nb.d);
  scs_mul(R, R, inv_wi);



  scs_set(sc_ln2_r10_times_E, (scs_ptr)(&sc_ln2_r10));

  if (E >= 0){
    scs_mul_ui(sc_ln2_r10_times_E, (unsigned int) E);
  }else{
    scs_mul_ui(sc_ln2_r10_times_E, (unsigned int) -E);
    sc_ln2_r10_times_E->sign = -1;
  }





  scs_mul(res1, (scs_ptr)&constant_poly[0], R);
  for(i=1; i<20; i++){
    scs_add(res1, (scs_ptr)&constant_poly[i], res1);
    scs_mul(res1, res1, R);
  }
  scs_add(res1, res1, ti);
  scs_add(res1, res1, sc_ln2_r10_times_E);


  scs_get_d_minf(&resd.d, res1);

  return resd.d;
}
# 266 "log10.c"
double log10_ru(double x)
{
  scs_t R, res1;
  scs_t sc_ln2_r10_times_E;
  scs_ptr inv_wi, ti;

  db_number nb, nb2, wi, resd;
  int i, E=0;

  nb.d = x;

  if (nb.i[1] < 0x00100000){
    if (((nb.i[1] & 0x7fffffff)|nb.i[0])==0)

      return NInf.d;
    if (nb.i[1] < 0)

  return NaN.d;


    E -= (30*2);
    nb.d *=radix_two_double.d;


  }
  if (nb.i[1] >= 0x7ff00000)
    return x+x;


  E += (nb.i[1]>>20)-1023;
  nb.i[1] = (nb.i[1] & 0x000fffff) | 0x3ff00000;
  if (nb.d > 1.4142135623730950489e0){
    nb.d *= 0.5;
    E++;
  }




  nb2.d = nb.d + norm_number.d;
  i = (nb2.i[1] & 0x000fffff);
  i = i >> 16;

  wi.d = (11+i)*(double)0.6250e-1;


  nb.d -= wi.d;


  ti = (scs_ptr)&table_ti[i];
  inv_wi = (scs_ptr)&table_inv_wi[i];



  scs_set_d(R, nb.d);
  scs_mul(R, R, inv_wi);



  scs_set(sc_ln2_r10_times_E, (scs_ptr)(&sc_ln2_r10));

  if (E >= 0){
    scs_mul_ui(sc_ln2_r10_times_E, (unsigned int) E);
  }else{
    scs_mul_ui(sc_ln2_r10_times_E, (unsigned int) -E);
    sc_ln2_r10_times_E->sign = -1;
  }





  scs_mul(res1, (scs_ptr)&constant_poly[0], R);
  for(i=1; i<20; i++){
    scs_add(res1, (scs_ptr)&constant_poly[i], res1);
    scs_mul(res1, res1, R);
  }
  scs_add(res1, res1, ti);
  scs_add(res1, res1, sc_ln2_r10_times_E);


  scs_get_d_pinf(&resd.d, res1);

  return resd.d;
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c rem_pio2.c
# 1 "rem_pio2.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "rem_pio2.c"
# 10 "rem_pio2.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 130 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 131 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 33 "/usr/include/libio.h" 2 3 4
# 50 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 51 "/usr/include/libio.h" 2 3 4
# 145 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 178 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 246 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 303 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 391 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4
# 108 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));














extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

# 232 "/usr/include/stdio.h" 3 4





extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 329 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

# 351 "/usr/include/stdio.h" 3 4





extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 420 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 565 "/usr/include/stdio.h" 3 4








extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 617 "/usr/include/stdio.h" 3 4





extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 684 "/usr/include/stdio.h" 3 4





extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 744 "/usr/include/stdio.h" 3 4





extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

# 841 "/usr/include/stdio.h" 3 4





extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 854 "/usr/include/stdio.h" 2 3 4
# 934 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 35 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}
# 78 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}
# 935 "/usr/include/stdio.h" 2 3 4
# 943 "/usr/include/stdio.h" 3 4

# 11 "rem_pio2.c" 2
# 1 "coefpi2.h" 1






# 1 "crlibm.h" 1
# 29 "crlibm.h"
extern double exp_rn(double);
extern double exp_rn_(double *);
extern double exp_rd(double);
extern double exp_ru(double);



extern double log_rn(double);
extern double log_rn_(double *);
extern double log_rd(double);
extern double log_ru(double);
extern double log_rz(double);


extern double cos_rn(double);
extern double cos_rd(double);
extern double cos_ru(double);
extern double cos_rz(double);


extern double sin_rn(double);
extern double sin_rd(double);
extern double sin_ru(double);
extern double sin_rz(double);


extern double tan_rn(double);
extern double tan_rd(double);
extern double tan_ru(double);
extern double tan_rz(double);



extern double cotan_rn(double);
extern double cotan_rd(double);
extern double cotan_ru(double);
extern double cotan_rz(double);


extern double atan_rn(double);
extern double atan_rd(double);
extern double atan_ru(double);
extern double atan_rz(double);


extern double cosh_rn(double);
extern double cosh_rd(double);
extern double cosh_ru(double);
extern double cosh_rz(double);


extern double sinh_rn(double);
extern double sinh_rd(double);
extern double sinh_ru(double);
extern double sinh_rz(double);


extern void disable_xp_(void);
extern void enable_xp_(void);






extern double exp2_rn(double);
extern double exp2_rd(double);
extern double exp2_ru(double);


extern double log2_rn(double);
extern double log2_rd(double);
extern double log2_ru(double);

extern double log10_rn(double);
extern double log10_rd(double);
extern double log10_ru(double);
# 8 "coefpi2.h" 2
# 1 "crlibm_private.h" 1
# 11 "crlibm_private.h"
# 1 "scs.h" 1
# 37 "scs.h"
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 1 3 4
# 168 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 169 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-redhat-linux/4.8.3/include/limits.h" 2 3 4
# 38 "scs.h" 2

# 1 "scs_config.h" 1
# 40 "scs.h" 2
# 56 "scs.h"
typedef union {
  int i[2];
  unsigned long long int l;
  double d;
} db_number;
# 100 "scs.h"
struct scs {

  unsigned int h_word[8];

  db_number exception;


  int index;

  int sign;
};


typedef struct scs scs;




typedef struct scs * scs_ptr;
# 127 "scs.h"
typedef struct scs scs_t[1];
# 142 "scs.h"
void scs_get_d(double*, scs_ptr);


void scs_get_d_minf(double*, scs_ptr);


void scs_get_d_pinf(double*, scs_ptr);


void scs_get_d_zero(double*, scs_ptr);


void scs_set_d(scs_ptr, double);


void scs_set_si(scs_ptr, signed int);



void scs_get_std(scs_ptr);



void scs_set(scs_ptr, scs_ptr);



void scs_zero(scs_ptr);
# 178 "scs.h"
void scs_rand(scs_ptr result, int expo_max);
# 193 "scs.h"
void scs_add(scs_ptr result, scs_ptr x, scs_ptr y);






void scs_sub(scs_ptr result, scs_ptr x, scs_ptr y);







void scs_add_no_renorm(scs_ptr result, scs_ptr x, scs_ptr y);
# 221 "scs.h"
void scs_renorm(scs_ptr);




void scs_renorm_no_cancel_check(scs_ptr);
# 240 "scs.h"
void scs_mul(scs_ptr result, const scs_ptr x, const scs_ptr y);



void scs_mul_ui(scs_ptr, const unsigned int);


void scs_square(scs_ptr result, scs_ptr x);



void scs_fma(scs_ptr result, scs_ptr a, scs_ptr b, scs_ptr c);
# 271 "scs.h"
void scs_inv(scs_ptr result, scs_ptr x);
# 280 "scs.h"
void scs_div(scs_ptr result, scs_ptr x, scs_ptr y);
# 12 "crlibm_private.h" 2
# 1 "scs_private.h" 1
# 71 "scs_private.h"
 static const db_number radix_one_double = {{0x00000000 , ((1023+30)<<20) }};
 static const db_number radix_two_double = {{0x00000000 , ((1023+2*30)<<20) }};
 static const db_number radix_mone_double = {{0x00000000 , ((1023-30)<<20) }};
 static const db_number radix_mtwo_double = {{0x00000000 , ((1023-2*30)<<20) }};
 static const db_number radix_rng_double = {{0x00000000 , ((1023+30*32)<<20) }};
 static const db_number radix_mrng_double = {{0x00000000 , ((1023-30*32)<<20) }};
 static const db_number max_double = {{0xFFFFFFFF , 0x7FEFFFFF }};
 static const db_number min_double = {{0x00000001 , 0x00000000 }};
# 13 "crlibm_private.h" 2
# 23 "crlibm_private.h"
# 1 "crlibm_config.h" 1
# 24 "crlibm_private.h" 2
# 50 "crlibm_private.h"
int crlibm_second_step_taken;
# 200 "crlibm_private.h"
static const struct scs

   scs_zer ={{0x00000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0, 0}}, 0, 1 },

   scs_half={{0x20000000, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, -1, 1 },

   scs_one ={{0x00000001, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_two ={{0x00000002, 0x00000000, 0x00000000, 0x00000000,
             0x00000000, 0x00000000, 0x00000000, 0x00000000},
             {{0x00000000 ,0x3ff00000}}, 0, 1 },

   scs_sixinv ={{0x0aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa,
      0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa, 0x2aaaaaaa},
      {{0x00000000 ,0x3ff00000}}, -1, 1 };
# 463 "crlibm_private.h"
extern int rem_pio2_scs(scs_ptr, scs_ptr);
# 9 "coefpi2.h" 2


static const int two_over_pi[]=
  {0x28be60db, 0x24e44152, 0x27f09d5f, 0x11f534dd,
   0x3036d8a5, 0x1993c439, 0x0107f945, 0x23abdebb,
   0x31586dc9, 0x06e3a424, 0x374b8019, 0x092eea09,
   0x3464873f, 0x21deb1cb, 0x04a69cfb, 0x288235f5,
   0x0baed121, 0x0e99c702, 0x1ad17df9, 0x013991d6,
   0x0e60d4ce, 0x1f49c845, 0x3e2ef7e4, 0x283b1ff8,
   0x25fff781, 0x1980fef2, 0x3c462d68, 0x0a6d1f6d,
   0x0d9fb3c9, 0x3cb09b74, 0x3d18fd9a, 0x1e5fea2d,
   0x1d49eeb1, 0x3ebe5f17, 0x2cf41ce7, 0x378a5292,
   0x3a9afed7, 0x3b11f8d5, 0x3421580c, 0x3046fc7b,
   0x1aeafc33, 0x3bc209af, 0x10d876a7, 0x2391615e,
   0x3986c219, 0x199855f1, 0x1281a102, 0x0dffd880};







static const scs Pio2=
  {{0x00000001, 0x2487ed51, 0x042d1846, 0x26263314,
    0x1701b839, 0x28948127, 0x01114cf9, 0x23a0105d},
    {{0x00000000 ,0x3ff00000}}, 0, 1 };






static const scs Pio4=

{{0x3243f6a8, 0x22168c23, 0x1313198a, 0x0b80dc1c,
0x344a4093, 0x2088a67c, 0x31d0082e, 0x3ea63b13},
{{0x00000000 ,0x3ff00000}}, -1, 1 };
# 12 "rem_pio2.c" 2
# 55 "rem_pio2.c"
int rem_pio2_scs(scs_ptr result, const scs_ptr x){
  unsigned long long int r[8 +3], tmp;
  unsigned int N;


  int sign, i, j, ind;
  int *two_over_pi_pt;

  if ((x->exception.d != 1)||(x->index < -1)){
    scs_set(result, x);
    return 0;
  }




  if ((x->index == -1)){


    r[0] = 0; r[1] = 0;
    r[2] = (unsigned long long int)(two_over_pi[0]) * x->h_word[0];
    r[3] = ((unsigned long long int)(two_over_pi[0]) * x->h_word[1]
    +(unsigned long long int)(two_over_pi[1]) * x->h_word[0]);
    if(x->h_word[2] == 0){
      for(i=4; i<(8 +3); i++){
 r[i] = ((unsigned long long int)(two_over_pi[i-3]) * x->h_word[1]
        +(unsigned long long int)(two_over_pi[i-2]) * x->h_word[0]);
      }}else {
 for(i=4; i<(8 +3); i++){
   r[i] = ((unsigned long long int)(two_over_pi[i-4]) * x->h_word[2]
   +(unsigned long long int)(two_over_pi[i-3]) * x->h_word[1]
   +(unsigned long long int)(two_over_pi[i-2]) * x->h_word[0]);
 }
      }
  }else {
    if (x->index == 0){
      r[0] = 0;
      r[1] = (unsigned long long int)(two_over_pi[0]) * x->h_word[0];
      r[2] = ((unsigned long long int)(two_over_pi[0]) * x->h_word[1]
      +(unsigned long long int)(two_over_pi[1]) * x->h_word[0]);
      if(x->h_word[2] == 0){
 for(i=3; i<(8 +3); i++){
   r[i] = ((unsigned long long int)(two_over_pi[i-2]) * x->h_word[1]
   +(unsigned long long int)(two_over_pi[i-1]) * x->h_word[0]);
 }}else {
   for(i=3; i<(8 +3); i++){
     r[i] = ((unsigned long long int)(two_over_pi[i-3]) * x->h_word[2]
     +(unsigned long long int)(two_over_pi[i-2]) * x->h_word[1]
     +(unsigned long long int)(two_over_pi[i-1]) * x->h_word[0]);
   }}
    }else {
      if (x->index == 1){
 r[0] = (unsigned long long int)(two_over_pi[0]) * x->h_word[0];
 r[1] = ((unsigned long long int)(two_over_pi[0]) * x->h_word[1]
        +(unsigned long long int)(two_over_pi[1]) * x->h_word[0]);
 if(x->h_word[2] == 0){
   for(i=2; i<(8 +3); i++){
     r[i] = ((unsigned long long int)(two_over_pi[i-1]) * x->h_word[1]
     +(unsigned long long int)(two_over_pi[ i ]) * x->h_word[0]);
   }}else {
     for(i=2; i<(8 +3); i++){
       r[i] = ((unsigned long long int)(two_over_pi[i-2]) * x->h_word[2]
       +(unsigned long long int)(two_over_pi[i-1]) * x->h_word[1]
       +(unsigned long long int)(two_over_pi[ i ]) * x->h_word[0]);
     }}
      }else {
 if (x->index == 2){
     r[0] = ((unsigned long long int)(two_over_pi[0]) * x->h_word[1]
   +(unsigned long long int)(two_over_pi[1]) * x->h_word[0]);
   if(x->h_word[2] == 0){
     for(i=1; i<(8 +3); i++){
       r[i] = ((unsigned long long int)(two_over_pi[ i ]) * x->h_word[1]
       +(unsigned long long int)(two_over_pi[i+1]) * x->h_word[0]);
     }}else {
       for(i=1; i<(8 +3); i++){
  r[i] = ((unsigned long long int)(two_over_pi[i-1]) * x->h_word[2]
         +(unsigned long long int)(two_over_pi[ i ]) * x->h_word[1]
         +(unsigned long long int)(two_over_pi[i+1]) * x->h_word[0]);
       }}
 }else {
   ind = (x->index - 3);
   two_over_pi_pt = (int*)&(two_over_pi[ind]);
   if(x->h_word[2] == 0){
     for(i=0; i<(8 +3); i++){
       r[i] = ((unsigned long long int)(two_over_pi_pt[i+1]) * x->h_word[1]
       +(unsigned long long int)(two_over_pi_pt[i+2]) * x->h_word[0]);
     }}else {
       for(i=0; i<(8 +3); i++){
  r[i] = ((unsigned long long int)(two_over_pi_pt[ i ]) * x->h_word[2]
         +(unsigned long long int)(two_over_pi_pt[i+1]) * x->h_word[1]
         +(unsigned long long int)(two_over_pi_pt[i+2]) * x->h_word[0]);
       }
     }
 }
      }
    }
  }


  r[8 +1] += r[8 +2]>>30;
  for(i=(8 +1); i>0; i--) {tmp=r[i]>>30; r[i-1] += tmp; r[i] -= (tmp<<30);}


  N = r[0];






  if (r[1] > ((1<<30))/2){
    N += 1;
    sign = -1;
    for(i=1; i<(8 +3); i++) { r[i]=((~(unsigned int)(r[i])) & 0x3fffffff);}
  }
  else
    sign = 1;






  if (r[1] == 0)
    if (r[2] == 0) i = 3;
    else i = 2;
  else i = 1;

  for(j=0; j<8; j++) { result->h_word[j] = r[i+j];}


  result->exception.d = 1;
  result->index = -i;
  result->sign = sign*x->sign;




  scs_mul(result, (scs_ptr)(& Pio2), result);
  return N*x->sign;
}
gcc -m32 -std=c99 -W -Wall -pedantic -c dtoa_c.c
gcc -m32 -std=c99 -W -Wall -pedantic -c dtoaf.c
gcc -m32 -std=c99 -W -Wall -pedantic -c round_near.c
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c disable_xp.c
# 1 "disable_xp.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "disable_xp.c"
# 21 "disable_xp.c"
# 1 "./fpu_control.h" 1
# 59 "./fpu_control.h"
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 60 "./fpu_control.h" 2
# 92 "./fpu_control.h"
typedef unsigned int fpu_control_t __attribute__ ((__mode__ (__HI__)));






extern fpu_control_t __fpu_control;
# 22 "disable_xp.c" 2

void disable_xp_(void)
{


  short unsigned int cw = (0x037f & ~0x300)|0x200;
  __asm__ ("fldcw %0" : : "m" (*&cw));
}
gcc -DLINUX_INLINE -DHAVE_CONFIG_H -I. -fPIC -std=c99 -Wall -Wshadow -Wpointer-arith  -Wcast-align -Wconversion -Waggregate-return -Wstrict-prototypes -Wnested-externs -Wlong-long -Winline -pedantic -fno-strict-aliasing -g -O1 -m32 -E  -c enable_xp.c
# 1 "enable_xp.c"
# 1 "/afs/cern.ch/user/k/kyrsjo/codes/SixTrack/crlibm_debug/minimalProgram2/crlibm//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "enable_xp.c"
# 21 "enable_xp.c"
# 1 "./fpu_control.h" 1
# 59 "./fpu_control.h"
# 1 "/usr/include/features.h" 1 3 4
# 375 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 392 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 393 "/usr/include/sys/cdefs.h" 2 3 4
# 376 "/usr/include/features.h" 2 3 4
# 399 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 400 "/usr/include/features.h" 2 3 4
# 60 "./fpu_control.h" 2
# 92 "./fpu_control.h"
typedef unsigned int fpu_control_t __attribute__ ((__mode__ (__HI__)));






extern fpu_control_t __fpu_control;
# 22 "enable_xp.c" 2

void enable_xp_(void)
{


  short unsigned int cw = (0x037f & ~0x200)|0x300;
  __asm__ ("fldcw %0" : : "m" (*&cw));
}
ar -rv crlibm.a addition_scs.o multiplication_scs.o zero_scs.o division_scs.o double2scs.o scs2double.o zero_scs.o trigo_fast.o tan.o sine.o cosine.o exp.o logsix.o exp_fast.o log_fast.o atan.o atan_fast.o division_scs.o ericc.o csh_fast.o log10.o rem_pio2.o dtoa_c.o dtoaf.o round_near.o disable_xp.o enable_xp.o
